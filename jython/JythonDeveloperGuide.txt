## Please edit system and help pages ONLY in the moinmaster wiki! For more
## information, please see MoinMaster:MoinPagesEditorGroup.
## Please edit (or translate) system/help pages on the moinmaster wiki ONLY.
## For more information, please see MoinMaster:MoinPagesEditorGroup.
##master-page:Unknown-Page
##master-date:Unknown-Date
#acl MoinPagesEditorGroup:read,write,delete,revert All:read
#format wiki
#language en

BrianZimmer, incept: 2005-01-31

This is an introduction to developing Jython, just to get someone started. It doesn't cover in any depth the source code or the design behind Jython. It's purely aimed at getting a development environment setup. It's definitely not complete so feel free to make it better!


''' SVN '''

  * http://subversion.tigris.org/
  * available on most *nix systems or with cygwin on Windows
  * GUI clients are available on most platforms
  * Eclipse users, see JythonDeveloperGuide/EclipseNotes
  * can browse the current source archive at http://svn.sourceforge.net/viewcvs.cgi/jython/
    
  * to obtain the a copy of the ''current development'' source, checkout from trunk:
    {{{   
    svn co https://svn.sourceforge.net/svnroot/jython/trunk/jython
    }}}

  For ''2.1 Stable'', the last stable release:
    {{{   
    svn co https://svn.sourceforge.net/svnroot/jython/tags/Release_2_1/jython
    }}}

  For ''2.2 Alpha 1'', the last alpha release:
    {{{   
    svn co https://svn.sourceforge.net/svnroot/jython/tags/Release_2_2alpha1/jython
    }}}

  For ''2.3'', the development branch the next version:
    {{{   
    svn co https://svn.sourceforge.net/svnroot/jython/branches/2.3
    }}}

  * Patches should be posted to the [http://sourceforge.net/tracker/?group_id=12867&atid=312867 jython patch tracker] as forward unified diffs. This can be done for example using ''svn diff'' from the command line, just plain ''diff -u'', or using the eclipse ''Team->Create Patch feature''. [TODO: write better patch submission guidelines, similar to http://www.python.org/dev/patches/).

'''  Python '''

  * http://www.python.org/2.2.3/
  * Jython uses Python's standard library where possible. This means you will need a working copy of Python source files for the stdlib. We currently use Python 2.2 so you can grab the files from here if you don't already have 2.2 installed.


''' JavaCC '''

  * https://javacc.dev.java.net/
  * Parser generator for Java. Generally needed only for working on parser.
  * It's not really required that you install this so I'd skip it.
  * The latest version is JDK 1.5 compatible (uses 'e' rather than 'enum' as variable name).


''' Ant '''

  * http://ant.apache.org/ A Java-based build tool.
  * Eclipse users, see [wiki:Self:/JythonDeveloperGuide/EclipseNotes#ANT Eclipse ANT notes]
  * The Makefiles in the repository are old and will be removed.
  * Download the latest version and install so the bin/ is somewhere in your path.
  * The build.xml is the file containing the compiler directives
  * It uses a file called ant.properties to override default paths; here's mine:
    {{{
    build.compiler=modern
    debug=on
    optimize=off

    javaccHome=/Users/bzimmer/Library/Java/Extras/javacc-3.2

    ht2html.dir=
    #python.home=
    python.lib=/sw/lib/python2.2
    python.exe=/sw/bin/python2.2

    ### zxJDBC ###
    oracle.jar=
    mysql.jar=/Users/bzimmer/Library/Java/Extras/mysql-connector-java-3.1.6-bin.jar
    informix.jar=
    postgresql.jar=/Users/bzimmer/Library/Java/Extras/pg74.215.jdbc2.jar
    jdbc.jar=
    servlet.jar=
    }}}

  * ant.properties for Gentoo users:
    {{{
    build.compiler=modern
    debug=on
    optimize=off

    python.lib=/usr/lib/python2.2/lib-old
    }}}



''' Jars '''

  * Jython uses many optional jars
  * These are not required for building locally but are for deployment with the installer
  * The ant script takes care of conditional compilation

''' IDEs '''

  * Any Java IDE will work
    * IntelliJ
    * Eclipse see /EclipseNotes
    * NetBeans see /NetbeansGuide
    * Vim
    * ...

''' Tests '''
 After you've built the project, you may want to set up an excutable file on your path to make it easy to launch your build of jython. This file will need to:
 *Set the python home property to the `dist` directory of your build (otherwise, you'll get import errors on the standard lib stuff).
 *Execute the `jython.jar` in the `dist` produced by the build.      
Here's a batch file that runs the built jython.jar (for windows): [[Anchor(sampleBatch)]]
{{{
:: jytip.bat
@echo off
set ARGS=

:: concatenate all the command line args into one
:loop
if [%1] == [] goto end
        set ARGS=%ARGS% %1
        shift
        goto loop
:end

:: this is mine...
:: java -Dpython.home=C:\\workspace\\JythonTip\\jython\\dist -jar 
::<cont> c:\workspace\JythonTip\jython\dist\jython.jar %ARGS%
:: fill in <placeholders> below:
java -Dpython.home=<path to dist directory>\\dist -jar <path to dist directory>\dist\jython.jar %ARGS%
}}}
Now you're ready to run tests...

  * There are a couple different places to find test cases
    * Jython's Lib/test
    * Jython's bugtests repository
    * Python2.2's Lib/test
  * Run the particular test or you can run the whole suite by running `regrtest.py` with the `-a` option

''' Directory layout '''
Note the following describes the current trunk. If you are working from an older tag, src doesn't exist and src/com and src/org are moved up a level. 

  * src/com   : zxJDBC related sources"
  * Demo      : demo sources for the website and such"
  * Doc       : the website documentation"
  * installer : the current installer which apparently no longer works"
  * Lib       : the python source files for Jython standard library implementations
  * Lib/test  : test cases
  * Misc      : random scripts which are not all used; some generate source
  * src/org   : top level package for python and apache (used for regex)
  * Tools     : JythonC and Freeze

''' Coding Guidance '''

  * CodingStandards     : The standards for writing Java code for Jython
  * JythonModulesInJava : How to write a Jython module in Java
  * JythonClassesInJava : How to write a Jython class in Java


  
