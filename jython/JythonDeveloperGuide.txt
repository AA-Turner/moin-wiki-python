This is an introduction to developing Jython, just to get someone started. It doesn't cover the source code in any depth or discuss the design behind Jython. It's purely aimed at getting a development environment set up. It's definitely not complete so feel free to make it better!

== Subversion ==

  * Check out a copy of the Jython source with [[http://subversion.tigris.org/|Subversion]], available on most *nix systems or with Cygwin on Windows.
  * You can use the command line tool `svn`, or [[http://subversion.tigris.org/links.html#clients|GUI clients are available]] on most platforms.
  * !NetBeans, Eclipse and other Java IDEs also integrate Subversion support.  Eclipse users should see JythonDeveloperGuide/EclipseNotes.
  * Browse the source code on the Web at http://fisheye3.cenqua.com/browse/jython.
  * To obtain the a copy of the ''current development'' source, check out trunk:
    {{{ svn co https://jython.svn.sourceforge.net/svnroot/jython/trunk/jython/ }}}

  * Attach patches to issues in the [[http://bugs.jython.org/|Jython bug tracker]].
    * Also, you can upload them to http://codereview.appspot.com (the Jython repository is already registered).

== Ant ==

  * [[http://ant.apache.org/|Ant]] is a Java-based tool used to build Jython from source.
  * Eclipse users, see [[/EclipseNotes#ANT|Eclipse Ant notes]]
  * Download the latest version (Jython requires Ant 1.7 or later to build) and install it so Ant's `bin` directory is somewhere in your path.
  * To build Jython, run `ant` in the top-level Jython directory (which contains the Ant file `build.xml`).
  * The results of the build appear in the `dist` subdirectory.

== Tests ==
The Jython build process generates an executable Bash script, `dist/bin/jython`, to make it easy to launch your build of Jython. It works on Unix-like platforms (including Mac OS X and Cygwin).

If you're using Windows without Cygwin, use the batch file `dist/bin/jython.bat` instead.

Now you're ready to run tests...

  * There are a couple different places to find test cases
    * Jython's `dist/Lib/test` (populated by the build process)
    * Jython's `bugtests` subdirectory (included with the development sources)
  * Run a particular test, or the whole Python test suite with `ant regrtest`.

See TestingJython for some more details.

== Directory layout ==
Note the following describes the current trunk/jython. If you are working from an older tag, src doesn't exist and src/com and src/org are moved up a level. 

  * `src/org`      : top level package for python
  * `src/com`      : zxJDBC related sources
  * `src/shell`    : launcher scripts
  * `src/templates`: java source generator & related templates, used to update portions of java classes elsewhere in the source tree
  * `Demo`         : demo sources for the website and such
  * `Doc`          : the website documentation (see /WebsiteBuilderSetup to build the http://jython.org website)
  * `Lib`          : the python source files for Jython standard library implementations
  * `Lib/test`     : test cases
  * `Misc`         : random scripts which are not all used; some generate source
  * `Tools`        : JythonC and Freeze
  * `CPythonLib`   : Lib directory from the corresponding version of cpython, via svn:externals
  * `bugtests`     : additional test cases covering bug reports

== Coding guidance ==

  * /PortingPythonModulesToJython : A good starting task for a Jython developer
  * CodingStandards     : The standards for writing Java code for Jython
  * PatchGuidelines     : How to make a patch for submission to the tracker
  * JythonModulesInJava : How to write a Jython module in Java
  * JythonClassesInJava : How to write a Jython class in Java
  * PythonTypesInJava : How to make a Python type in Java(2.5 and later)
  * /AttributeLookupMethods: Some explanation for the different methods to lookup attributes on PyObject.
  * /ImplementingStrAndRepr: Tips for implementation of `__str__` and `__unicode__` in Java.
  * IntegerConversion Basics of converting PyObject numbers to Java primitives
  * /UsingPyNewStringFromPythonCode: On the corner case of converting a Java String to a Python String.
== Other stuff ==

 * WebsiteBuilderSetup : How to get the pieces setup to edit and build the Jython website
 * VersionTransition : Why some tests are excluded in going to a new version and how to go about fixing them
 * /RegressionTestNotes : Some notes the regression tests
 * /PleaseAdoptMe : Tasks looking for volunteers
 * HowToReleaseJython : Checklist for building a release and updating the website

== Tasks ==

  * PerformanceEnhancements : Ideas on how to speedup Jython
  * CodebaseCleanup : Tasks/general guidelines on keeping the codebase clean 

=== Porting external projects to Jython ===

 * DjangoOnJython
 * MercurialOnJython
 * SqlAlchemyOnJython
 * SetuptoolsOnJython
 * PylonsOnJython
