## Please edit system and help pages ONLY in the moinmaster wiki! For more
## information, please see MoinMaster:MoinPagesEditorGroup.
## Please edit (or translate) system/help pages on the moinmaster wiki ONLY.
## For more information, please see MoinMaster:MoinPagesEditorGroup.
##master-page:Unknown-Page
##master-date:Unknown-Date
#acl MoinPagesEditorGroup:read,write,delete,revert All:read
#format wiki
#language en

BrianZimmer, incept: 2005-01-31

This is an introduction to developing Jython, just to get someone started. It doesn't cover the source code in any depth or discuss the design behind Jython. It's purely aimed at getting a development environment set up. It's definitely not complete so feel free to make it better!


''' SVN '''

  * http://subversion.tigris.org/
  * available on most *nix systems or with cygwin on Windows
  * GUI clients are available on most platforms
  * Eclipse users, see JythonDeveloperGuide/EclipseNotes
  * can browse the current source archive at http://fisheye3.cenqua.com/browse/jython
    
  * to obtain the a copy of the ''current development'' source, checkout from trunk:
    {{{   
    svn co https://jython.svn.sourceforge.net/svnroot/jython/trunk/jython
    }}}

  For ''2.3'', the development branch the next version:
    {{{   
    svn co https://jython.svn.sourceforge.net/svnroot/jython/branches/2.3
    }}}

  * Patches should be posted to the [http://sourceforge.net/tracker/?group_id=12867&atid=312867 jython patch tracker] as forward unified diffs. This can be done for example using ''svn diff'' from the command line, just plain ''diff -u'', or using the eclipse ''Team->Create Patch feature''. [TODO: write better patch submission guidelines, similar to http://www.python.org/dev/patches/).

''' Ant '''

  * http://ant.apache.org/ A Java-based build tool.
  * Eclipse users, see [wiki:Self:/EclipseNotes#ANT Eclipse ANT notes]
  * Download the latest version and install so the bin/ is somewhere in your path.
  * The build.xml is the file containing the compiler directives
  * After getting Ant setup, run ''ant'' in your Jython checkout directory.  That should produce ''dist/jython.jar'' if everything is setup correctly. 


''' Tests '''
 After you've built the project, you may want to set up an excutable file on your path to make it easy to launch your build of jython. This file will need to:
 *Set the python home property to the `dist` directory of your build (otherwise, you'll get import errors on the standard lib stuff).
 *Execute the `jython.jar` in the `dist` produced by the build.      
Here's a batch file that runs the built jython.jar (for windows): [[Anchor(sampleBatch)]]
{{{
:: jytip.bat
@echo off
set ARGS=

:: concatenate all the command line args into one
:loop
if [%1] == [] goto end
        set ARGS=%ARGS% %1
        shift
        goto loop
:end

:: this is mine...
:: java -Dpython.home=C:\\workspace\\JythonTip\\jython\\dist -jar 
::<cont> c:\workspace\JythonTip\jython\dist\jython.jar %ARGS%
:: fill in <placeholders> below:
java -Dpython.home=<path to dist directory>\\dist -jar <path to dist directory>\dist\jython.jar %ARGS%
}}}

On Unix you can use a shell script: {{{
#!/bin/sh

exec java -Dpython.home=<path>/dist/ -jar <path>/dist/jython.jar $*
}}}


Now you're ready to run tests...

  * There are a couple different places to find test cases
    * Jython's dist/Lib/test (populated by the build process)
    * Jython's bugtests subdirectory (included with the development sources)
  * Run a particular test or you can run the whole Python test suite by running the following:
{{{
jython dist/Lib/test/regrtest.py -a
}}}

See TestingJython for some more details.

''' Directory layout '''
Note the following describes the current trunk/jython. If you are working from an older tag, src doesn't exist and src/com and src/org are moved up a level. 

  * src/org       : top level package for python and apache (used for regex)
  * src/com       : zxJDBC related sources
  * src/templates : java source generator & related templates, used to update portions of java classes elsewhere in the source tree
  * Demo          : demo sources for the website and such
  * Doc           : the website documentation(see /WebsiteBuilderSetup to build the http://jython.org website)
  * Lib           : the python source files for Jython standard library implementations
  * Lib/test      : test cases
  * Misc          : random scripts which are not all used; some generate source
  * Tools         : JythonC and Freeze
  * CPython``Lib  : Lib directory from the corresponding version of cpython, via svn:externals
  * bugtests      : additional test cases covering bug reports

''' Coding Guidance '''

  * /PortingPythonModulesToJython : A good starting task for a Jython developer
  * CodingStandards     : The standards for writing Java code for Jython
  * JythonModulesInJava : How to write a Jython module in Java
  * JythonClassesInJava : How to write a Jython class in Java

''' Other Stuff '''

 * /WebsiteBuilderSetup : How to get the pieces setup to edit and build the Jython website
 * /RegressionTestNotes : Some notes on the running the regression tests (on 2.3)
 * /PleaseAdoptMe : Tasks looking for volunteers
 * /HowToReleaseJython : Checklist for building a release and updating the website
