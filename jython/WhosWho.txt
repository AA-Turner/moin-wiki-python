For now, refer to WhosDoingWhat.


Jython Mailing List Roll Call (temp until we can decide a good home for this):

'''Profile:'''
Walter Chang

'''What I do:'''
I'm a team lead in a financial institution that does alot of
information systems integration and facilitates straight through
processing flows.

'''What I am interested in:'''
- Jython development handover
- roadblocks to 2.2 proper
- seeing good project managment of the jython project (the jython
leadership getting a plan that tackles the issues together)

'''Where I think i can help:'''
- Project management methodologies (CMMi and Agile practices)
- Subversion server setup from a system admin perspective (intermediate )
- Channelling some resources into the jython project (directly or
indirectly though corporate resouces)
- Using jython with pydev

'''Why I like jython:'''

Python as a language is great...but cpython is very hard to push in a
corporate environment.  Jython gives me the power of the python
language spec while not taking away my ability to tap into the wealth
of java libraries that are out there (including the ones that are
written inhouse)

'''Profile:'''
Ray Djajadinata

'''What I do:'''
I'm a researcher in my company R&D department--we do visibility and tracking of assets throughout the supply chain. Been doing Java for about 8 years. Python/Jython, about 3.

'''What I am interested in:'''
- More frequent releases
- Plan, with reasonable but hopefully better-defined timeline (instead of just "soon", although admittedly "soon" is much better than "it's ready when it's ready").
- Dissemination of Jython knowledge

'''Where I think i can help (at the moment):'''
- Adding more proper documentation to Java classes
- Continuous integration, if the Jython lead deems it necessary--I've got quite an experience setting up and maintaining CruiseControl
- Testing Jython releases

'''Why I like jython:'''

I love Python. My company use Java :)

The fact is, I'm lazy. I don't want to learn BeanShell just for the sake of using BeanShell. I don't want to learn Groovy just for the sake of using Groovy. I like Jython, however, because most of what I learn while using Jython transfers to CPython, which is pretty much a write once run anywhere language. My fluency in the language transfers to even to .NET with IronPython.

It pains me to see that Jython is relegated into a background role, with BeanShell and Groovy taking the spotlights, especially with the advent of javax.script. If we miss this window of opportunity with Mustang, it will be a "negative pulse", i.e.: "The Pulse of Death" we're sending to the world regarding Jython's well being. (People will go like, "See? Jython is dead, man.". etc.)
