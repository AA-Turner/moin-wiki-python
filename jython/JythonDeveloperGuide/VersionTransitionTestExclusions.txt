In moving to a new version of Jython, the Lib files included from CPython are upgraded to the version Jython will move to.  Since Jython pulls many of its tests directly from CPython's Lib, large numbers of the upgraded tests will fail right after the version transition: they're testing new CPython features that have yet to make it into Jython.  This is bad since we want the older parts of the tests that Jython has already implemented to be run successfully so it's clear when adding a new features broke an old one.  To get the tests quickly into a state where breakages are noticeable, a three-pronged approach is taken:

 1. Tests for completely new features with no bearing on existing Jython code are added to the failing or skipped test sets in regrtest.py so they're ignored until someone gets around to implementing them.
 2. Tests revealing minor problems or tiny new features are fixed immediately in Jython.
 3. Tests that cover much existing code but also have failing tests for major new features have those failing parts of the tests excluded until someone can work on them with a "Jython transition" comment.

Each of the tests commented out with "Jython transition" will also have a bug filed in the [http://sourceforge.net/tracker/index.php?group_id=12867&atid=112867&set=custom&_assigned_to=0&_status=1&_category=100&_group=136083&by_submitter=&summary_keyword=&order=artifact_id&sort=DESC&submit=Browse test failure causes group].  To work on one of those bugs, grep through the test code for its id number, uncomment the relevant portion of the test case, and then start working on implementing the feature of fixing the bug that's needed to make the test pass.
