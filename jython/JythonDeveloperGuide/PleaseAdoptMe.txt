== Getting to a 2.2 release ==

Samuele: one thing I think is still missing is '''proper `__del__` support for user-defined new style classes'''.

 * Update the README.
 * Update the copyright date in LICENSE.txt to 2006.


(Extracted from [http://sourceforge.net/mailarchive/forum.php?thread_id=30988615&forum_id=5587 Notes as I bootstrap into Jython])


== What's needed for 2.3 ==

Samuele: The next big things that we can foresee are indeed '''finding a solution for jythonc''' and 
'''improving our overloaded java methods resolution''' so that it can behave properly once we introduce bools.

(extracted from [http://sourceforge.net/mailarchive/forum.php?thread_id=30988616&forum_id=5587 Re: Notes as I bootstrap into Jython])


== Componentizing JAR Indexing ==

[http://sourceforge.net/mailarchive/forum.php?thread_id=30988620&forum_id=5587 Componentizing JAR Indexing]

Charles asked: How much effort would it take to '''componentize the whole jar-indexing'''
subsystem? We'd be interested in using it for "import" purposes in JRuby

Charlie replied: the indexing code could use a significant cleanup. It's mostly contained
in the PackageManager class hierarchy. SysPackageManager extends PathPackageManager which extends
CachedJarsPackageManager which extends PackageManager. Disentangling the interactions between that mess of inheritance makes working on the
caching system harder than it should be.

Charles added:  '''making the dynlangs be able to call across each other''' without some awful marshalling layer to/from java. In other
words, we should be able to pass an object from JRuby to Jython to Rhino and read fields and invoke methods without difficulty. That's where a
common underlying runtime or set of interfaces will be an absolute necessity.


== Compelling Goals ==

(extracted from [http://sourceforge.net/mailarchive/forum.php?thread_id=30988621&forum_id=5587 Setting a compelling goal])  Charles: Just supporting Python is not enough of a goal to compel folks to contribute precious
off-hours to the project. Working toward support for apps like Django
would do a lot more for publicity and project interest.

 * django
 * TurboGears
   * SQLObject and/or SQLAlchemy
   * CherryPy see [http://sourceforge.net/mailarchive/message.php?msg_id=37496554 cherrypy 2.0.0]
   * Kid and/or Genshi
 * Twisted (using [http://www.xhaus.com/alan/python/jynio/select.html Alan Kennedy's select implementation])
 * WSGI (using [http://www.xhaus.com/modjy/index.html modjy])
 * Trac
