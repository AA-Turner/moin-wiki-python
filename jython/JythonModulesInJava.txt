Writing a module extension Java for use by Jython can be done a couple of different ways.

 * Write a POJO with the same API as the Python module.
 * Write a subclass of PyObject.

The advantage to writing a POJO is the class can be reused in Java without any dependency on Jython's runtime.  The downside to this approach is the class cannot take advantage of the dynamic nature of Python.

The advantage of writing the class as a PyObject subclass is all of the dynamic nature of Python is available for use.
