PyjamasDesktop is a cross-platform framework and applications widget set, based on [[http://webkit.org|WebKit]].  PyWebkitGtk is currently the basis for Pyjamas-Desktop, and it is conceivable that there will exist a PyWebkitQt4, and Pyjamas-Desktop will run on top of that, as well.  PyjamasDesktop is similar to [[http://www.async.com.br/projects/kiwi|KiWi]] in that it provides an easy-to-use API, where you need not know - at all - that you are running PyGTK underneath.

PyjamasDesktop is actually a port of [[http://code.google.com/p/pyjamas|PyJamas]] which is a web toolkit, so you also have the option of running PyjamasDesktop applications as web applications - unmodified.

The [PyJamas] Widget set is exceptionally comprehensive and yet is easy to use, providing:

 * Simple, Horizontal, Vertical, Docking, Decking, Popup, Stack, Tab, Grid, Flow, Table and HTML Panels
 * Text Labels and HTML including full CSS Stylesheet support and full CSS properties
 * Input, Password and Textarea input boxes
 * List drop-downs including Multi-selection
 * Buttons, Checkboxes and Radio-Buttons including groups.
 * Form Submit Panel (providing file upload).
 * Treeview, Menu and Menubar (vertical and horizontal).

Additional features, thanks to the underlying use of webkit, include:

 * Full CSS Stylesheet functionality, both local, remote and direct and simple API manipulation.
 * Option of executing javascript, for full and complete manipulation of the application.
 * Loading of complete HTML Pages, both local and remote; full URL support.
 * Plugin support for multimedia plugins such as Flash (obsoleting the need for gtk-mozplugin)
 * Access to XML, XSLT and AJAX.
 * (Future: full SVG Canvas support, like HippoCanvas)

It's specifically worth noting that due to PyjamasDesktop's history, it purely provides the "V" in "MVC" applications design.  To communicate with the "C" in "MVC", it is recommended that you keep to XML and HTTP, and use, for example, the JSONRPC proxy client included with the distribution.  In this way, the same application front-end source code can be compiled with PyJamas (into Javascript/AJAX) - with no modifications - to run with exactly the same back-end HTTP server that your PyjamasDesktop application uses.  However, as you have access to the full Python core (unlike in Pyjamas, which is restricted to AJAX), you do not have to follow these guidelines.

Obtaining PyjamasDesktop, is here:

 * [[http://pypi.python.org/pypi/Pyjamas-Desktop|PyPi Pyjamas-Desktop]]
 * git clone git://github.com/lkcl/pyjamas-desktop.git
 * [[https://bugs.webkit.org/show_bug.cgi?id=16401|webkit issue 16401]]
 * [[http://code.name.com/p/pywebkitgtk/issues/detail?id=13|pywebkitgtk issue 13]]

Pre-built AMD64 .deb packages for the webkit-glib and pywebkitgtk dependencies are here:

 * [[http://sourceforge.net/project/showfiles.php?group_id=236659|Packages for pywebkitgtk-1.0 and libwebkit-1.0-2]]

Documentation

The Pyjamas API, which is identical for both PyJamas and PyjamasDesktop, is available here:

 * [[http://pyjd.sf.net/api/|API Documentation]]

Article and information is available here:

 * [[http://advogato.org/article/981.html|advogato article]]
 * [[http://lkcl.net/pyjamas-desktop]]
 * [[http://sf.net/projects/pyjd]]

[[CategoryPyGUI]]
