##language: en
 * "Computers are useless. They can only give you answers."  -- Pablo Picasso
 * "Any sufficiently advanced bug is indistinguishable from a feature."  -- Rich Kulawiec
 * "If you don't know what your program is supposed to do, you'd better not start writing it."  -- Edsger W. Dijkstra
 * "Debugging is twice as hard as writing the code in the first place.  Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it."  -- Brian W. Kernighan
 * "If society were bound to invent technologies which could only be used entirely within the law, then we would still be sitting in caves sucking our feet."  -- Gene Kan, creator of Gnutella
 * "When I say 'free', I mean 'free': free from bond, of chain or command: to go where you will, even to Mordor, Saruman, if you desire."  -- Gandalf, paraphrasing the choice between free and non-free software
 * "If sharing a thing in no way diminishes it, it is not rightly owned if it is not shared."  -- Saint Augustine
 * "Don't worry about people stealing your ideas. If your ideas are any good, you'll have to ram them down people's throats."  -- Howard Aiken
 * "I really didn't foresee the Internet. But then, neither did the computer industry. Not that that tells us very much of course - the computer industry didn't even foresee that the century was going to end."  -- Douglas Adams
 * "As we enjoy great advantages from the inventions of others, we should be glad to serve others by any invention of ours."  -- Benjamin Franklin
 * "Anybody else on the list got an opinion? Should I change the language or not?" -- Guido van Rossum, 28 Dec 1991
 * "The details of that silly code are irrelevant."  -- Tim Peters, 4 Mar 1992
 * "Python is a little weak in forcing encapsulation. It isn't made for bondage and domination environments." -- Paul Prescod, 30 Mar 1998
 * "This is not a technical issue so much as a human issue; we are limited and so is our time. (Is this a bug or a feature of time? Careful; trick question!)" -- Fred Drake on the Documentation SIG, 9 Sep 1998
 * "To my battle-scarred mind, documentation is never more than a hint. Read it once with disbelief suspended, and then again with full throttle skepticism."   -- Gordon McMillan, 19 Oct 1998
 * "Constraints often boost creativity."   -- Jim Hugunin, 11 Feb 1999
 * Beautiful is better than ugly.
 * Explicit is better than implicit.
 * Simple is better than complex.
 * Complex is better than complicated.
 * Flat is better than nested.
 * Sparse is better than dense.
 * Readability counts.
 * Special cases aren't special enough to break the rules.
 * Although practicality beats purity.
 * Errors should never pass silently.
 * Unless explicitly silenced.
 * In the face of ambiguity, refuse the temptation to guess.
 * There should be one -- and preferably only one -- obvious way to do it.  ... Although that way may not be obvious at first unless you're Dutch.
 * Now is better than never. ... Although never is often better than *right* now.
 * If the implementation is hard to explain, it's a bad idea.
 * If the implementation is easy to explain, it may be a good idea.
 * Namespaces are one honking great idea -- let's do more of those!
 * "... let me just say that my least-favourite Python error message is "SyntaxError: invalid syntax", which somehow manages to be both overly terse and redundant at the same time. "-- Greg Ward, 15 Feb 2000
