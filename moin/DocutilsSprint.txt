== Preliminaries ==

For introductory information and information about the other sprints 
going on at ["PyConDC2004"], please see SprintPlan2004.

We may also have a birds-of-a-feather session; see DocutilsBof.

Also see the [http://docutils.sourceforge.net Docutils home page] and the [http://docutils.sourceforge.net/rst.html reStructuredText home page]. 


=== Duration ===

The sprints at ["PyConDC2004"] are to be held from March 20 (Saturday)
through March 23 (Tuesday), for a total of 4 days.  I'm going to be there 
for all 4 sprint days, so I invite sprinters to join in.  How long should the
Docutils sprint be?  It depends on the participants and the other sprints.
How about separate Saturday/Sunday and Monday/Tuesday sprints?

Please voice your opinions here or [mailto:goodger@python.org email me].


=== Cost ===

There is no cost to attend the sprints beyond registering for Py``Con
(and being present, of course).


=== Sprinters ===

Everyone is welcome!  No prior Docutils hacking experience is required.
Participants should either be experienced Python programmers, or interested 
in documentation.

Please [mailto:goodger@python.org email me] or
edit this page directly if you'd like to participate.

 * [mailto:goodger@python.org David Goodger] (coach) 
 * [mailto:oliver@rutherfurd.net Ollie Rutherfurd] (Saturday and Sunday, maybe Monday and Tuesday)
 * [mailto:fdrake@acm.org Fred Drake] (Saturday)
 * [mailto:ianb@colorstudy.com Ian Bicking] (but I'm not really sure which sprint I will attend)
 * [mailto:aahz@pythoncraft.com Aahz] (All four days)
 * [mailto:edloper@gradient.cis.upenn.edu Edward Loper] (All four days?)
 * [mailto:tracer@axiomfire.com Tracy Ruggles] (mon & tue, maybe sat and sun)
 * [mailto:gilbert@voxmea.net Matt Gilbert] (All four days)
 * [mailto:sholden@holdenweb.com Steve Holden] (Saturday and Sunday)


=== Sponsorship ===

This sprint and my participation at ["PyConDC2004"] are being sponsored by 
Silver Sponsor [http://WingIDE.com Archaeopteryx Software], the 
[http://www.python.org/psf Python Software Foundation (PSF)], and individual 
contributors.  Thank you all!


== Sprint Topic Ideas ==

What would participants like to accomplish?  Choose from among the
ideas below or add new ones.  Register your votes below, and feel free
to comment.

The sprint should begin with an introduction to Docutils and
reStructuredText: their purpose, future direction, and current
implementation.  How long should it be?  Should there be a long
preliminary lecture covering a lot of ground, or a minimal overview
(with the possibility of further dicsussions as needed)?

Here are ideas for the sprint, in no particular order:

 * Python source reader (autodocumentation subsystem).  There's a lot of support for this.  Ideas:
   * [http://docutils.sf.net/spec/pep-0258.html#python-source-reader PEP 258]
   * [http://docutils.sf.net/spec/pysource.html detailed exploration of some ideas]
   * [http://docutils.sf.net/spec/notes.html#python-source-reader notes]
   * [http://docutils.sf.net/docutils/readers/python/ DavidG's module parser code (incomplete)]
   * [http://docutils.sf.net/sandbox/davidg/pysource_reader DavidG's sandbox code (incomplete)]
   * [http://docutils.sf.net/sandbox/tibs/ Tibs' sandbox code (incomplete)]
   * [http://docutils.sourceforge.net/sandbox/ianb/extractor/ IanB's sandbox code (hack)]
   * Extending EpyDoc with python source parsing (this has been on the todo list for a while now).

 * Test framework -- extend unittest with support for packages of test modules (i.e., integrate [http://docutils.sf.net/test/package_unittest.py this] into unittest.py).

 * Doc``Py (Python's dialect of LaTeX) writer completion -- would allow easier entry for documentation newbies, "make authorship more accessible" ([http://docutils.sf.net/sandbox/dkuhlman/ initial implementation]). ''This would be a major interest for me, I would like to make the Python docs more accessible to new authors -- SH''

 * HTML fragment writer -- establish API (useful for ht2html and templating systems).  ([http://docutils.sf.net/spec/notes.html#html-fragments Notes], and [http://docutils.sf.net/sandbox/oliverr/ht/ related work].)  Fred Drake and Mike Orr are both interested in this.

 * [http://www.w3.org/TR/2003/WD-xhtml2-20030506/ XHTML 2.0] writer.  Though the spec is in the "working draft" stage, it would be nice to start experimenting with it.  -- ''Fred Drake''

 * Other writers:
   * Open``Office.org (original hack in
   [http://docutils.sf.net/sandbox/aahz/OO/ Aahz's sandbox] & mods in
   [http://docutils.sf.net/sandbox/pobrien/OpenOffice/ Patrick O'Brien's sandbox])

   * Doc``Book ([http://docutils.sf.net/sandbox/oliverr/docbook/ Oliver Rutherfurd's sandbox])
   * RTF

 * Aahz will be running a sprint to create a base protocol for binary
 writers, leading to a reactoring of the Open``Office.org writer and a
 new MIFWriter for Frame.

 * Interpreted text [http://docutils.sf.net/spec/notes.html#role-bindings role bindings].

 * [http://docutils.sf.net/spec/notes.html#large-documents Large document] issues, including [http://docutils.sf.net/spec/notes.html#object-numbering-and-object-references formal elements].

 * Nested inline markup -- may require new inline markup parser with proper tokenization & lexing.  Or stack-based.  Currently under discussion on the [http://lists.sourceforge.net/lists/listinfo/docutils-develop docutils-develop mailing list].  David Abrahams has checked in an initial implementation to the "nesting" branch under CVS.

 * [http://docutils.sf.net/spec/notes.html#math-markup Math markup].

 * Complete [http://docutils.sf.net/spec/doctree.html "The Docutils Document Tree"] reference doc.

 * Wikis ([http://docutils.sf.net/sandbox/ianb/wiki/ Ian Bicking's sandbox], [http://docutils.sourceforge.net/FAQ.html#are-there-any-wikis-that-use-restructuredtext-syntax FAQ entry]).  If MoinMoin is python.org's official wiki, it would be nice if it fully supported reStructuredText ;-).

 * [http://docutils.sf.net/spec/notes.html#bugs Squash bugs]

 * Add internationalization to [http://docutils.sf.net/spec/notes.html#footer-boilerplate-text footer boilerplate text].

 * [http://docutils.sf.net/spec/notes.html#adaptable-file-extensions Adaptable file extensions].

 * [http://docutils.sf.net/tools/editors/emacs Emacs reStructuredText mode].

 * [http://docutils.sf.net/spec/semantics.html Docstring semantics].

 * Extend EpyDoc support for ReStructuredText (e.g., for LaTeX output).

 * Auto-numbering syntax.

   * The ability to reference (internal link) an auto-numbered section sans the number.

 * (One just slightly off-topic idea would be to extend an existing documentation generator, such as EpyDoc, to support Zope-style interfaces.  This would be especially nice since EpyDoc already supports reStructuredText. -- ''Fred Drake'')
   * (EpyDoc *should* already support Zope-style interfaces.  If not, then please let me know where it needs to be extended for proper support. -- ''Edward Loper'')

There are more ideas in the [http://docutils.sf.net/spec/notes.html#to-do Docutils to-do list].


== Comments ==

Please feel free to add any comments you like.  Include your name for feedback; anonymous comments OK too.  I hope to see you at Py``Con!  -- ''David Goodger''

I shan't be able to make Py``Con (no surprise there), but I hope the sprint goes really well. I have no objection at all if
one of the items of work is the pysource reader, whether based on my work or not - indeed, I'd love to see a working
implementation out there. -- ''Tibs''

I'd be very interested in working on the/a Python source code reader -- it seems like the giant missing piece of docutils. -- ''Ian Bicking''

Two 2-day sprints would be better for me.  I wasn't planning to attend any sprint, but Docutils is tempting me.  I'd most likely attend Monday-Tuesday.  I'm not that good at understanding intricate parser code, but perhaps I can work on some other aspect.  My wishlist item is for the HTML generator to just produce an HTML fragment I can plug into a larger page, rather than all the header/footer/style stuff it adds.  There has also been much interest in our local Python user group about having a ReST syntax in MoinMoin. -- ''Mike Orr''

An enhanced client API with better support for [http://docutils.sf.net/spec/notes.html#html-fragments writing fragments] would be ''really'' nice to have; I'd be willing to spend some time on that as well.  Each time I have tried to make a simple script that used docutils in some way, the API has been difficult to figure out.  It may be that documentation is all that's needed, or just a more-visible entry point into existing documentation, but I know how hard that is to do.  I think it would be worth having at least a little brain-storming session to figure out where people are getting hung up on the API and letting you tell us how much of it is there in some form already, and guiding an effort to make it more effectively exposed.  Whether that's documentation, a little code, or a pile of new stuff, I don't know, but my past explorations make me think there's some limited amount of "API stuff" that needs to be done.  It is unlikely I'll be able to sprint on this topic Monday/Tuesday though. -- ''Fred Drake''

I'll probably be there for all four days.  Anyone who's interested in automatic API documentation generation might want to take a look at EpyDoc, which currently supports reStructuredText.  I'd like to work on extending it with better docutils support, and improve it in other ways. -- ''Edward Loper''

I use EpyDoc quite a bit, and would like to help with it's docutils support.  And, just in general, would like to help out the docutils project. -- ''Tracy Ruggles''

I'd love to get the Doc``Book writer finished up -- I think it's pretty close.  It needs tests, better bibliographic field handling, and probably a bit of polishing. -- ''Ollie Rutherfurd''
