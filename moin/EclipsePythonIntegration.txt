= Using Eclipse as a Python editor =

A few plugins for ["Eclipse"] are in progress that will enable Eclipse to be used as a 
Python IDE.  Some of these are stable enough for early use:
 * pyeclipse, 0.0.1 (July 16, 2002): http://sourceforge.net/projects/pyeclipse/
 * pe4eclipse, 0.0.1 prealpha (September 17, 2002): http://sourceforge.net/projects/pe4eclipse/
 * pythoneclipse, no files (as of May 17, 2003): http://sourceforge.net/projects/pythoneclipse/  (actually whilst there are no files on sourceforge, you can download the release from http://www.kalab.com/freeware/pythoneclipse/pythoneclipse.htm)

== What these plug-ins actually do ==

'''The next few sections of documentation, up to and including "Supplying parameters to your jython or python program" are contributed by Andy Bulka abulka@netspace.net.au'''

 * All three plug-ins only really give you color highlighting for editing .py python/jython files.  That's all. ''(as of May 2003)''
 * Significantly, you can use Eclipse ''bookmarking'' and create ''task'' bookmarks inside the eclipse python editor.  This is way cool.
 * You can run '''jython''' or python on the current file and get the output appear in the eclipse console window.

''''Note: The ability to run '''jython''' or python on the current file needs to be configured manually (see step 2, below) and doesn't require either of these plugins to do.''''

== Which plug-in is better? ==

All three support the SHIFT-TAB de-indent keystroke.

 * pyeclipse, 0.0.1 - Can configure editor syntax colors. Option to converts tabs to spaces.

 * pe4eclipse, 0.0.1 - No configuration of colors.  NO option to converts tabs to spaces.  Can override default text font and set this specifically.  Option to turn line numbering on.

 * pythoneclipse    - No configuration of colors.  Option to converts tabs to spaces.

The ''pyeclipse'' plug-in provides a '''python' perspective''' which ensures that the console window is visible and hides the 'launch' button (which is only for running java apps). 

Note: once you have this perspective installed, you can switch to one of the other python plugins (see how to do this in the next section), and the "perspective view" will remain installed.  In fact you can easily create a python perspective yourself, from within Eclipse (''a perspective is just a configuration of what panels and windows you want open at the one time'').

== Installing the plug-ins ==

Unzip the plugin and drag the folder into the eclipse/plugins directory, then restart eclipse.
 
    * pyeclipse is identified by the folder '''org.python.pyeclipse_0.0.1'''

    * pe4eclipse is identified by the folder  '''net.sourceforge.pe4eclipse'''

    * PythonEclipse is identified by the folder  '''org.pythoneclipse.pdt_0.0.3'''

You can switch between the plug-ins by moving one directory ''out'' of the plugins folder and the other ''in'' to the plugins folder.

= Configuring Eclipse for running Python and Jython =

== Jython ==

To configure Eclipse to run jython on the current file you are editing:

Select from the menu: Run -> External Tools -> Configure -> New

then fill in the following values: 

 * '''Name''': jython 

 * '''Tool Location''': E.g. C:\jython-2.1\jython.bat

 * '''Working Directory''': -> Browse Variables -> ${container_loc}

 * '''Tool Arguments''': -> Browse Variables -> ${resource_name} 

== Python ==

Instructions for configuring to run regular python from within Eclipse can be found in the pyeclipse forum http://sourceforge.net/forum/forum.php?thread_id=717580&forum_id=194323

However, I prefer to set my Working Directory to ${container_loc} since this lets you launch python on files that are ''inside folders'' within your project.  More resilient.  Here are my instructions:
 
Select from the menu: Run -> External Tools -> Configure -> New

then fill in the following values: 

 * '''Name''': jython 

 * '''Tool Location''': E.g. /usr/bin/python or C:\Python22\python.exe 

 * '''Working Directory''': -> Browse Variables -> ${container_loc}

 * '''Tool Arguments''': -> Browse Variables -> ${resource_name} 


==== Supplying parameters to your jython or python program ====

If you need to run an app which requires arguments, you will need to make another tool configuration (just copy the jython one) and simply add the necessary arguments to the '''Tool Arguments''' field.

For example instead of just
 ${resource_name}
''you would instead put''
 ${resource_name} '''c:\\'''

Notice I have supplied the argument '''c:\\'''

= Embedding Jython into Eclipse =

Don Coleman has written a jython code completion shell which he says he would be happy to rewrite for Eclipse.
 * http://don.freeshell.org/jython/

This URL was given by Don Coleman in an ASPN jython users newsgroup, 
 * http://aspn.activestate.com/ASPN/Mail/Message/Jython-users/1620125
but the domain "don.freeshell.org" is non-existent (DNS Error). 
Any other ideas where to find this code completion shell?

-- it works now (16. May 03)


= Other Links =

["Jython"]

["Python"]
