= Numeric and Scientific =

  * ["Numeric"] - http://www.numpy.org/ -- Numerical Python adds a fast, compact, multidimensional array language facility to Python.

  * NumArray - http://stsdas.stsci.edu/numarray/index.html -- Numarray is a reimplementation of Numeric which adds the ability to efficiently manipulate large numeric arrays in ways similar to Matlab and IDL.

  * SciPy - http://www.scipy.org -- SciPy is an open source library of scientific tools for Python. SciPy supplements the popular Numeric module, gathering a variety of high level science and engineering modules together as a single package.  SciPy includes modules for graphics and plotting, optimization, integration, special functions, signal and image processing, genetic algorithms, ODE solvers, and others.

  * ScientificPython - http://starship.python.net/~hinsen/ScientificPython/ -- ScientificPython is a collection of Python modules that are useful for scientific computing. In this collection you will find modules that cover basic geometry (vectors, tensors, transformations, vector and tensor fields), quaternions, automatic derivatives, (linear) interpolation, polynomials, elementary statistics, nonlinear least-squares fits, unit calculations, Fortran-compatible text formatting, 3D visualization via VRML, and two Tk widgets for simple line plots and 3D wireframe models. There are also interfaces to the netCDF library (portable structured binary files), to MPI (Message Passing Interface, message-based parallel programming), and to BSPlib (Bulk Synchronous Parallel programming). 

= Multi precision math =

 * MultiprecisionSoftwareDirectory (http://crd.lbl.gov/~dhbailey/mpdist/index.html) - Python wrapping unknown
 * XactReal (http://more.btexact.com/people/briggsk2/XR.html)
 * ["MAPM"] (http://www.tc.umn.edu/~ringx004/mapm-main.html) - Python wrapping in progress
 * GmPy (http://gmpy.sourceforge.net/) - GNU Multiple Precision library wrapping

= The Grid =

Grid is a type of parallel and distributed system that enables the sharing, selection, and aggregation of resources distributed across "multiple" administrative domains based on their (resources) availability, capability, performance, cost, and users' quality-of-service requirements.

 * [http://www-itg.lbl.gov/gtg/projects/pyGlobus/index.html PyGlobus] - Globus toolkit bindings for python
 * [http://gcl.ucsd.edu/peg/ PEG] - Python Extensions for the Grid

== Geographic Information System (GIS), Mapping, Image Processing and Analysis ==
 
    * [http://thuban.intevation.org/ Thuban] is a Python Interactive Geographic Data Viewer with the following features:
      Vector Data Support: Shapefile, PostGIS Layer,
      Raster Data Support: GeoTIFF Layer,
      Comfortable Map Navigation,
      Object Identification and Annotation,
      Legend Editor and Classification,
      Table Queries and Joins,
      Projection Support,
      Printing and Vector Export,
      API for Add-Ons (Extensions),
      Multi-Language Support: English, French, German, Hungarian, Italian, Russian and Spanish,
      User Manual (English)
      Multi-platform (GNU/Linux, Windows, ...). (Noli Sicad)

    * [http://zcologia.org/pcl Python Cartographic Library], [http://zcologia.com/news News from Import Cartographic], a python-friendly module for cartographic programming. The objectives of this Python cartographic library are:
      Match the mapping capabilities of MapServer,
      Explicit programming, less "map file" scripting, and
      Model classes after well known, standard, domain objects. (Noli Sicad)
(Note: GIS should be in Plotting section but could not post there at the moment, problems in posting?!, please move if you can. -- Noli

= Miscellaneous =

 * PyLink is an open source Python module for interfacing with the EyeLink eye tracking hardware. Find it at [http://www.eyelinkinfo.com/mount_software.php PyLink]

= Links =

 * ["NumericAndScientific/Plotting"] -- plotting and graphing tools
 * ["NumericAndScientific/Libraries"] -- useful libraries
 * ["NumericAndScientific/Formats"] -- modules for reading and writing various file formats
 * NumericBooks 
 * [http://seal.web.cern.ch/seal/snapshot/work-packages/scripting/index.html CERN SEAL Python Services ] -- Automatic Python/C/C++ binding
