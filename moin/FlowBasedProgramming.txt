According to wikipedia: flow-based programming (FBP) is a programming paradigm that defines applications as networks of "black box" processes, which exchange data across predefined connections by message passing, where the connections are specified externally to the processes. These black box processes can be reconnected endlessly to form different applications without having to be changed internally. FBP is thus naturally component-oriented.

This page describes Python packages for FBP.

== Flow Based Programming ==
 * [[http://pypes.org|Pype]] - "Pypes provides a scalable, standards based, extensible platform for building ETL solutions. Most commercial platforms have steep learning curves and try to generalize too much of the process. Pypes provides a simple yet powerful framework for designing custom data processing workflows using components you write. In turn, it takes care of scalability and scheduling semantics."
 * [[http://code.google.com/p/papy/|papy]] - "The papy package provides an implementation of the flow-based programming paradigm in Python that enables the construction and deployment of distributed workflows."
 * [[http://arvindn.livejournal.com/68137.html|another pype]] - A simpler module for chaining operations
 * [[http://www.thensys.com/?page_id=21|zFlow]] - "Flow-based Programming Library using Python generators, loosely based on J.P. Morrison's book of the same name."
 * [[http://pyfproject.org/|PyF]] - "PyF is a python open source framework and platform dedicated to large data processing, mining, transforming, reporting and more."
 * [[http://www.kamaelia.org/Home.html|Kamealia]] - "In Kamaelia you build systems from simple components that talk to each other. This speeds development, massively aids maintenance and also means you build naturally concurrent software. It's intended to be accessible by any developer, including novices. It also makes it fun :)"
