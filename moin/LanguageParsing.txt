Small discussion and evaluation of different parsers.

|| Name || Grammar || Module|| Python || Comment ||
||[http://www.python.org/doc/current/lib/module-shlex.html shlex]|| || C |||| included in distribution||
||[http://www.cosc.canterbury.ac.nz/~greg/python/Plex Plex]|| || C|| ||lexical analysis module for Python, foundation for ["Pyrex"]||
||[http://pages.cpsc.ucalgary.ca/~aycock/spark/ Spark]|| || Python||
||["Yapps"]|| LL(1) || Python|| 1-any, 2-1.5+||
||[http://starship.python.net/crew/scott/PyLR.html PyLR]|| LR(1) LALR(1) || C ||
||[http://www.pythonpros.com/arw/kwParsing/kwParsing.html kwParsing]|| || ||
||PyBison || || C || ||bison grammar with python code actions ||
||[http://www.first.gmd.de/smile/trap/ Trap] || LR || ||1.5.1+||
||[http://systems.cs.uchicago.edu/ply/ PLY]|| ||Python || ||Python Lex-Yacc ||
||[http://christophe.delord.free.fr/en/tpg/ ToyParserGenerator]|| || || 2.2+ ||
||[http://staff.washington.edu/sabbey/py_dparser/ DParser]|| GLR || C ||  2.2+ || grammar  in doc strings||
||[http://www.lava.net/~newsham/pyggy/ PyGgy]|| GLR || Python ||  2.2.1 || ||
||[http://simpleparse.sourceforge.net/ SimpleParse]||-|| ||2.0+||requires mxTextTools||
||[http://biopython.org/docs/api/Martel/README.html Martel]|| || Python || 2.0+ ||requires mxTextTools||
||[http://www.lemburg.com/files/python/mxTextTools.html mxTextTools]||-||C|||| is not exactly a parser like we're used to, but it is a fast text-processing engine||

Also see Python ParserSig @ http://www.python.org/sigs/parser-sig/ to discuss and select a standard parser generator for Python.


For some speed up one may use other parser generator systems and plug them in as modules.

For example:
  * ["ANTLR"] (http://www.antlr.org/) generates C++ output (an older version with C output also available)
  * ["Spirit"] (http://spirit.sourceforge.net/) framework for writing EBNF as C++ code
  * FlexBisonModule (http://www.cs.utexas.edu/users/mcguire/software/fbmodule/)
  * [http://groups.google.com/groups?hl=en&lr=&ie=UTF-8&selm=61g0ff%2439g%241%40vishnu.jussieu.fr cocktail compiler tools] approach
