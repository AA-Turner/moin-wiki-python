Small discussion and evaluation of different parsers.

(!) Please keep wiki links as wiki links, use external links only if there is no existing page for the tool.

|| Name || Grammar || Module|| Python || Comment ||
||[http://www.python.org/doc/current/lib/module-shlex.html shlex]||&#160;|| C ||&#160;|| included in distribution||
||[http://www.cosc.canterbury.ac.nz/~greg/python/Plex Plex]||&#160; || C||&#160; ||lexical analysis module for Python, foundation for ["Pyrex"]||
||[http://pages.cpsc.ucalgary.ca/~aycock/spark/ Spark]||&#160; || Python|| &#160; ||&#160;||
||["Yapps"]|| LL(1) || Python|| 1-any, 2-1.5+||&#160;||
||[http://starship.python.net/crew/scott/PyLR.html PyLR]|| LR(1) LALR(1) || C ||&#160;||&#160;||
||[http://www.pythonpros.com/arw/kwParsing/kwParsing.html kwParsing]||&#160;||&#160;||&#160;||&#160;||
||PyBison ||&#160;|| C ||&#160; ||bison grammar with python code actions ||
||[http://www.first.gmd.de/smile/trap/ Trap] || LR ||&#160;||1.5.1+||&#160;||
||[http://systems.cs.uchicago.edu/ply/ PLY]||&#160;||Python ||&#160;||Python Lex-Yacc ||
||[http://christophe.delord.free.fr/en/tpg/ ToyParserGenerator]||&#160;||&#160;|| 2.2+ ||&#160;||
||[http://staff.washington.edu/sabbey/py_dparser/ DParser]|| GLR || C ||  2.2+ || grammar  in doc strings||
||[http://www.lava.net/~newsham/pyggy/ PyGgy]|| GLR || Python ||  2.2.1 ||&#160;||
||[http://simpleparse.sourceforge.net/ SimpleParse]||-||&#160;||2.0+||requires mxTextTools||
||[http://biopython.org/docs/api/Martel/README.html Martel]||&#160;|| Python || 2.0+ ||requires mxTextTools||
||[http://www.lemburg.com/files/python/mxTextTools.html mxTextTools]||-||C||&#160;|| is not exactly a parser like we're used to, but it is a fast text-processing engine||
||[http://pyparsing.sourceforge.net/ pyparsing]||&#160;|| Python || 2.2+ ||&#160;||

Also see the Python ParserSig @ http://www.python.org/sigs/parser-sig/ to discuss and select a standard parser generator for Python.

For some speed up one may use other parser generator systems and plug them in as modules.

For example:
  * ["ANTLR"] (http://www.antlr.org/) generates C++ output (an older version with C output also available)
  * ["Spirit"] (http://spirit.sourceforge.net/) framework for writing EBNF as C++ code
  * FlexBisonModule (http://www.cs.utexas.edu/users/mcguire/software/fbmodule/)
  * [http://groups.google.com/groups?hl=en&lr=&ie=UTF-8&selm=61g0ff%2439g%241%40vishnu.jussieu.fr cocktail compiler tools] approach
