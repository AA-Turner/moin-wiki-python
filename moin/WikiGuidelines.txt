= Wiki Editing Guidelines =

We have these guidelines to keep things relatively organised and easy to find. Generally, when there's no content on a topic, it's better to put ''something'' in and let others correct it, but make sure to check what other people have written first.

<<TableOfContents>>

== Creating an Account ==

Before you edit the Wiki you will need to create an account. We ask you to do this so that your contributions can be acknowledged and so that your valuable changes are more easily distinguishable from the spam and vandalism that so often arise when people are not required to provide some kind of identity.

Remember that you can always log in via OpenID. When you do so for the first time, you will be asked to enter a username in order to create an account and to associate your OpenID with that account. (If you already have an account, you will be able to enter a username to associate it with that existing account.)

== Creating Pages ==

 * Before adding a new page, [[http://wiki.python.org/moin/FindPage|check]] if there isn't already a page for that topic.
 * By all means choose a WikiName as a page name. Most pages on this Wiki use this style.
 * ''Do not'' change the names of things to "force" a WikiName. For example, JEdit is not a WikiName, but this does not mean that you should somehow make it one by changing letters and making, say, !JedIt. Instead just create a page and then use the [[HelpOnLinking|link syntax]] (for example, `[[JEdit]]`) to refer to the page.

== Editing Protected Pages ==

 * If you see something that needs to be changed, but you don't have permission, send a mail to <<MailTo(pydotorg-www AT python DOT org)>>. Unfortunately, any Wiki editable by the general public has to lock down some pages from time to time.

== Creating a Home Page ==

 * If you want to create your own "homepage" on the Wiki, please only do so if you're providing or promoting Python-related content or if you have signed your name on another page (and want others to be able to contact you).
 * Please use the HomepageTemplate when creating your homepage so that it belongs to CategoryHomepage. (You will be prompted to do this when making a page.)
 * Try to mention '''something''' about your relationship to Python on your homepage.  Something like, "I maintain the !WhoSeeWhatsIt Python wrapper" or, "I offer Python consulting services" would be more than sufficient.  If you are just a Python fanboy (or fangirl), something like, "Isn't Python the greatest language since C?" would also be fine.  If all the moderators see is an email address your page is likely to be summarily deleted.  We don't have time to spend searching for your name and/or email elsewhere on the Wiki or in the broader Python community.

== Writing Pages ==

 * Please structure long pages to sections (learn to use `== headings ==`).  Also consider using the `<<TableOfContents>>` macro.
 * Avoid duplicating information when not necessary, and respect copyrights. If you are unsure, at least credit the source, so that others can fix things if needed.
 * Learn to use Wiki format mentioned in HelpOnFormatting. It allows for more consistent page styles.
 * You can use [[HelpOnParsers/ReStructuredText|ReStructured Text]] mark-up, but this can be confusing to people, so try not to do this too much. Importing content from somewhere else for initial publication is probably the most excusable exception. Some features like category membership may not work for ReST pages, so consider converting ReST content to Wiki format at some point.
 * If you have source code included, run it yourself to test for at least simple errors.
 * Take advantage of this Wiki's ability to format and colour Python source code - it is easier to read than a simple, plain monochrome section. An example:
 {{{#!python
from hello import world

def say_hello():
    """Just say hello :)"""
    what = world()
    message = what.greet()  # no, there's no module named "hello" 
                            # in Python stdlib - at least not yet :)
    return message

if __name__ == "__main__":
    say_hello()
}}}
 Use `numbers=disable` after the language declaration (such as `#!python`) to remove line numbering.

=== Linking ===

 * Although a WikiName will link to another page, don't be afraid of using the [[HelpOnLinking|link syntax]] to link to, say, the FrontPage by writing `[[FrontPage|front page]]` instead, thus producing a link to the [[FrontPage|front page]] like this.
 * Use the `Issue:7942` syntax to refer to issues in the Python bug tracker. For example, here is an issue: Issue:7942.
 * Use the `PEP:0001` syntax to refer to PEPs. For example, here is a PEP: PEP:0001.

=== Attachments ===

 * Do not upload attachments without referencing them in the page they are attached to (or in some other obviously connected page). Unclaimed attachments will be deleted!

== Etiquette ==

When editing existing pages, the following guidelines are proposed:

 * By all means make edits to pages in order to fix mistakes, update and add information, and so on.
 * Use the preview button before committing.
 * When editing pages, particularly larger ones, try and commit all changes at once, or at least as many as possible at the same time. Don't make lots of small changes, saving each one: this fills the page history with micro-edits which make it very difficult to see earlier history information.
 * Remember that some pages have been around for a long time, are actively maintained, and are the result of collaboration between a number of people. It is therefore quite impolite to go in and to spontaneously reorganise such pages or to decide that your own editorial preferences overrule those of the people who have worked hard to produce the information you want to change, remove or rearrange. Consider contacting one or more of the maintainers before seeking to "refactor" content.
 * Respect any editorial guidelines on the pages you wish to edit. ''Do not remove guidelines you do not agree with!''
----
CategoryPythonWebsite
