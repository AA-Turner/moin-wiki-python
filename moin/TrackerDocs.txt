This page explains how to use the new Roundup-based bug tracker:

 * Bug tracker for Python: http://bugs.python.org
 * Meta-tracker (bug reporting for the bug trackers): http://psf.upfronthosting.co.za/roundup/meta/
 * Mailing list about the bug tracker: http://mail.python.org/mailman/listinfo/tracker-discuss

= Reporting (or fixing) a bug =

=== Reporting ===
Check the [[http://docs.python.org/dev/bugs.html|Reporting Bugs in Python]] documentation for an overview of the bug reporting process. Understanding the usual [[http://www.python.org/dev/workflow/|Issue Workflow]] also helps in creating good bug reports, raising the chances of your bug report (or feature request) being resolved efficiently.

In a nutshell, it's more important to provide a good description of the issue than it is to set all fields and options correctly. Some pointers to keep in mind:

 * Small code examples that don't depend on external code are a great way to help confirming and fixing the bug you report (providing them as [[http://www.python.org/dev/workflow/#unit-test-needed|unittests]] is ideal, but not required).
 * Precise details about the version(s) and environment in which you have found the problem make it easier for developers to confirm your report.
 * If you find a bug in previous Python releases, confirming it in the latest versions helps getting it fixed.
 * Checking whether the issue was previously reported is good, but duplicates will eventually be merged by triagers.
 * If you find out the issue you submitted is invalid (or a duplicate), you can close it yourself (or triagers will get to it).
 * For non-conforming behavior bugs, citing the relevant RFCs and standards is a plus.
 * An objective appraisal of potential or realized harm from the bug helps developers in prioritizing issues.

=== Fixing and triaging ===

If you want to get started in [[http://www.python.org/dev/why/|developing Python]], triaging bugs, writing tests for open issues (or undertested modules) and submitting patches are great ways to [[http://www.python.org/dev/contributing/|contribute]].

The [[http://www.python.org/dev/workflow/|Issue Workflow]] doc is even more important here, as well as taking a look at some [[http://www.python.org/dev/intro/#general-roundup-guidelines|general Roundup guidelines]]. For working with tests, docs and patches, the [[http://www.python.org/dev/|Developer Documentation]] is your main guide to the procedures and [[http://www.python.org/dev/tools|tools of the trade]]. The PythonBugDay volunteer docs offers an overview focused at newcomer developers.

= Logging into Roundup =

If you have ever used your SourceForge account on the old Python bug tracker, you also have a Roundup account. If you have never submitted a bug to the Python bug tracker, read SubmittingBugs.

To get your new Roundup password,
you need to go through the "forgotten password" procedure (we don't have access to your SourceForge password). On the tracker, go to [[http://bugs.python.org/user?@template=forgotten|"Lost your login?"]], and enter your SF username into the Username field.

This will send you an email (Confirm reset of password for Tracker), where you need to follow the link. You will get another email (Password reset for tracker) which contains the new password. The two-email procedure prevents somebody else maliciously resetting your password.

You then might want to change your password. You can also change the email address, so that emails won't get sent through sourceforge.net anymore.

= Getting a Developer account under Roundup =

For now, an email to Tracker-discuss (mentioned later) is required for a non-SF account to become a Developer account (assuming python-dev has given clearance for the person to have Developer privileges).


= About Differences between SF and Roundup =

[[http://roundup.sourceforge.net/|Roundup]] is not hugely different from SourceForge in terms of usage.  Because the initial transition is mostly for resource reasons (i.e., to control our own tracker), the information presented for issues is almost identical to what the SF tracker had.

The largest change people will notice, though, are the additions of some Roundup-specific fields.  Those are denoted with '''NEW''' in their descriptions below.  All of them help with the management of bugs and thus should be used when possible and even filled in on existing issues brought over from SF.

Another change is that of monitoring.  SF had a '''monitor''' button that subscribed you to an issue so that you always received an email on all updates.  That is now replaced by the ''nosy list''.  By entering your username on the nosy list you will receive an email every time the issue is changed.  More details can be found in the explanation of the field.

Lastly, Roundup provides an email interface to issues.  This means that you can actually post to issues by simply replying to an email that you receive.  This makes posting replies very easy as one does not need to go through the web interface if the reply does not involve changing fields or uploading files (which can be done through email as well).


= If there is a problem =

If you encounter a problem with the tracker (both in terms of it running and the transition), please create an issue at the [[http://psf.upfronthosting.co.za/roundup/meta/|meta tracker]].  Tracker-discuss (which is discussed below) will be notified and the issue will be dealt with as best as possible.


= Improving the tracker in the future =

Please remember that the initial transition is not meant to drastically change how issues are handled or reported.  It is simply to get Python's issue tracker under the control of the PSF.  With that in place, discussions can begin about improving the handling of issues.

After the transition is complete and stability has been proven then discussions can begin in earnest to improve the handling of issues.  To participate in such discussions, please subscribe to the [[http://mail.python.org/mailman/listinfo/tracker-discuss|tracker-discuss]] mailing list.  This list is meant to discuss the improvement and maintenance of the various trackers hosted by python.org.

= Access Control =

A details specification of the access control to the tracker is given in the table TrackerAccessControl.


= Fields =

== Classification ==

 Title:: Exactly what it sounds like.

 Type:: Specify what kind of issue it is (crasher, compile error, etc.).

 Components::
