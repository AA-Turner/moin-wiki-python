#pragma section-numbers off

= Web Standardisation for Python =

Traditionally, Python Web technology support entered the standard library through a process of gradual aggregation (see the cgi, httplib and urllib modules). However, various discussion groups, mailing lists and independent endeavours have sought to establish more usable standard APIs and modules over the years.

== Standardisation Attempts and Proposals ==

 * ["WebStack"] presents a common request, response and session API for numerous servers and environments.
 * [http://www.python.org/peps/pep-0333.html PEP 333: Web Server Gateway Interface] is the community standard for connecting relatively low-level Web components together - see also ["WSGIImplementations"].
 * [http://furius.ca/indra/ Indra] defines Web component interfaces that are somewhat reminiscent of WebStack's API.
 * [http://www.zetadev.com/software/httpy/ httpy - a sane and robust Python HTTP server and library]

== Resources ==

 * [http://www.python.org/topics/web/ The old but still useful Web Programming topic guide] - this should have been the focus for presenting the state of the art; the WebProgramming section now fulfils that role.
 * [http://www.python.org/sigs/web-sig/ Web SIG] (the Python Web Special Interest Group) along with a mailing list for discussion of community standards.
