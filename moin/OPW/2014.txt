= Join Python this summer! =

This page coordinates the Python projects for the Summer 2014 session of the [[https://wiki.gnome.org/OutreachProgramForWomen|GNOME Outreach Program For Women]].

'''What''': Earn a $5500 USD stipend while contributing to the CPython language interpreter and related core packages.<<BR>>
'''When''': This is a full-time summer internship lasting from May 19 - August 18.<<BR>>
'''Where''': Anywhere! This is remote internship, with most communication happening on mailing lists, bug trackers, and IRC.<<BR>>
'''Who''': This internship is open to anyone who identifies as a woman. Note that unlike Google Summer of Code, you do not need to be a student.<<BR>>

Applications are due by '''March 19th'''.

----
= Prospective Applicants =

If you are a woman interested in a paid summer internship doing core Python development, we'd love to have you apply to work with us in this summer's GNOME Outreach Program for Women!

Please read carefully through https://wiki.gnome.org/OutreachProgramForWomen for the full details on how the GNOME Outreach Program for Women works.

Please also note the following deadlines:https://wiki.gnome.org/OutreachProgramForWomen/2014/MayAugust#Schedule

* '''until March 19''': join the community and make at least 1 contribution
* '''March 19''': application deadline at 7pm UTC
* '''April 21''': accepted participants announced at 7pm UTC
* '''May 19 - August 18''': internship period

= How to apply =

1. Join the Python core mentorship mailing list and introduce yourself: https://mail.python.org/mailman/listinfo/core-mentorship.
2. Read the Python developer guide: http://docs.python.org/devguide/
3. Create an account on the Python bug tracker: http://bugs.python.org/
4. Submit a patch for a Python bug (see the next section for help getting started)
5. Let the core mentorship mailing list know that you've submitted your patch and are ready to work on your application. We'll craft an application together for a project that fits your background and interests and what you want to learn this summer!

= Preparing to apply =

Here are some of the tools we use:

IRC
the Trac issue tracker
the svn revision control system
the diff and patch utilities
If you have not used IRC before, please go through this short tutorial on installing and using an IRC client:  https://openhatch.org/wiki/Open_Source_Comes_to_Campus/UMD/Laptop_setup#Goal_.233:_install_an_IRC_client

Please familiarize yourself with how Twisted uses Trac by exploring the reports from this link:  http://twistedmatrix.com/trac/report

With sufficient exploration you should be able to answer the following questions (you don't have to tell me the answers, just make sure you know how to find them):

What is the oldest open Twisted ticket?
How many tickets are currently waiting on review? How do we denote tickets waiting on a review (hint: look at the keyword)
Using the custom query page at  http://twistedmatrix.com/trac/query, find out how many open tickets we have that have the "documentation" keyword.
If you have not used svn before, please go through the svn training mission at:  http://openhatch.org/missions/svn

If you have not used diff and patch before, please go through the diff and patch training mission at:  http://openhatch.org/missions/diffpatch

If you have any questions while going through this material, don't hesitate to ask for help in #twisted on IRC or on the  twisted-python mailing list.

Once you've gone through this material, the next steps will be to:

Meet up on IRC (stop by the #twisted channel)
Check out and explore the Twisted source code
Read a few parts of the Twisted core documentation and run some example Twisted scripts
Run the Twisted test suite - cd into the checkout folder and run "bin/trial twisted".
And then you'll be in great shape to start working on your first Twisted ticket. We'll suggest a first ticket when you get in touch over email; you'd want to fix it in your Twisted svn checkout, run svn diff, upload the resulting patch to the ticket and then add the "review" keyword to the ticket. This process is described in detail here:  http://twistedmatrix.com/trac/wiki/TwistedDevelopment#SubmittingaPatch
