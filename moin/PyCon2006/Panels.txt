Ideas for Panels.

= Panel on Concurrency =

Given the amount of debates surrounding concurrency models, apparent misunderstanding of threads as a necessary model for concurrency, and the fact that language-level features may provide new opportunities for concurrent programming (i.e. generators), why not setup a Panel with some key opiniated people, to discuss concurrency models tradeoffs and heat up a bit of discussion?

I'm thinking about the following approaches, and selecting a person to defend/represent viewpoints w.r.t. to those, with maybe a 10 min presentation each, and then some discussion and questions:

 * Threaded programming -- still hard.  Why?
 * Deferreds -- Twisted, what benefits have been gained thru this experience?
 * Generators, Stackless, Greenlets -- new control flow structures
 * Multi-process -- So many methods to do IPC...

Could be interesting.  Just a suggestion.  
--blais

+1 - This is the first item on my list. --Bill Mill


= Panel on Web Programming =

This one's pretty obvious. We all know that there are tons of web frameworks, and new ones are being created every day. Have you had success with Django, cherrypy, subway, webware, wareweb, quixote, zope, pybloxsom, PSP, or any other framework? Is this proliferation good? Why does it exist? What can we learn from it? Should one of the frameworks be "blessed" as official?

It's been discussed to death, but, well, there's a lot to talk about. --Bill Mill


= Panel on New Directions in Python =

Discussion of possible new directions for python. PEPs 342 and 343 give us coroutines and anonymous blocks, among other things. Are there natural extensions of these changes that we should be considering? Are there other new ideas which may someday belong in Python? (Improved slicing and tuple unpacking come to mind, perhaps?) What could python be missing, and what should stay out? Ideas for python 3000 and beyond.

It'd be nice to have a place where we could talk about blue-sky future ideas. --Bill Mill

= Panel on writing books and articles about Python =

This can be an authors/editors/publishers panel, might include information on trends in Python books, or general writing advice. --MichaelBernstein

= Other ideas =

 * Python in business
 * Pydotorg
 * GPG Key-signing
 * Using pyparsing
 * PSF grants:  what's been done?  How to apply?  What the PSF is looking for.  (30 min)
 * Summer of Code review: how did it work out?  What got done?  How to apply or help next year?
 * wxPython
 * scipy_core
 * Docutils
 * Jython
 * Teaching Python/Python in Education
