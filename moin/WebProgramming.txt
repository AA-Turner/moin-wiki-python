#pragma section-numbers off
#acl All:read

= Web Programming in Python =

This topic guide attempts to cover every aspect of programming Web applications (both clients and servers) using Python.

== Server Programming ==

Topics concerned with writing providing Web applications, doing server-side programming, providing a Web site or pages which use Python in some way:

 * WebFrameworks - for developing server-side Web applications in Python
 * CgiScripts - information on writing CGI scripts/programs in Python when the WebFrameworks seem like too much work or aren't available at your provider
 * WebServers - server solutions written in (or using) Python
 * ContentManagementSystems - solutions specially designed for organising and publishing content
 * WebServices - tools for accessing and providing functionality via APIs over the Web

== Client Programming ==

Topics concerned with accessing Web applications, sites or pages using Python:

 * WebBrowserProgramming - interfacing with existing browsers and browser technologies
 * WebClientProgramming - writing clients, typically at a lower level than a full Web browser
 * WebServices - tools for accessing and providing functionality via APIs over the Web

== Related Links ==

Related topics of interest:

 * WebStandardisation - working towards common solutions and APIs for Python Web programming
 * DatabaseProgramming - guidance on available DatabaseInterfaces and related tools
 * ["Templating"] - generating output, messages and more from Web applications
 * BuildAnIntranet - advice on how one might go about developing and deploying an intranet solution

== Editorial Note ==

This simplified start page replaces the previous "comprehensive" guide to Web programming. Unless adding a distinct category of Web programming, please add things like new frameworks to the appropriate page - not to this page.
