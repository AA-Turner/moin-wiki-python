#pragma section-numbers off

See also:
 * [http://www.python.org/sigs/web-sig/ Web SIG] (the Python Web Special Interest Group)
 * WebClientProgramming
 * DatabaseProgramming (guidance on available DatabaseInterfaces and related tools)
 * ["PythonAndJ2EE"] (comparison of various frameworks to J2EE)
 * [http://www.python.org/topics/web/ The old but still useful Web Programming topic guide]
 * CgiScripts (information on writing CGIs in python)
 * Steve Holden wrote a book on [http://pydish.holdenweb.com/pwp/ Python Web Programming]. The book from John Goerzen, [http://www.apress.com/book/bookDisplay.html?bID=363 Foundations of Python Network Programming], can also be useful.  Finally, check out the Web Programming chapter in [http://starship.python.net/crew/wesc/cpp/ Core Python Programming] by Wesley Chun.
 * ContentManagementSystems (Web frameworks can be used to build these)
 * [http://www.tossed.org/modules.php?name=News&file=article&sid=12 Developing With Mod_Python] - an article on Mod_Python programming with Cheetah Templates and MySQL.  Contains code samples.
 * [http://pyre.third-bit.com/pyweb/index.html PyWebOff: A bakeoff of Python web application frameworks]

This topic guide links to the frameworks and templating systems available for Web programming in Python.

==== To Do ====

    * The templating systems should really get a different page layout, showing examples etc.
    * Describe PHP and Java in the same format as quite a few will want to compare to them anyway
    * Is there any interest in a WebProgrammingShootOut?

Editor: DanielDittmar (this means only that I will adapt the entries to changes in the WebProgrammingTemplate and that I will try to keep the version entries current)

== Python-based ==

The listing is '''up-to-date as of 2003-02-11'''

=== Standardisation and Standardisation Proposals ===

    * ["WebStack"]
    * [http://www.python.org/peps/pep-0333.html PEP 333: Web Server Gateway Interface] - see also ["WSGIImplementations"]
=== Web Servers ===

TwistedMatrix includes a very scalable web server written in Python.

=== Application Frameworks ===

    * ["Albatross"]
    * ["Aquarium"]
    * CherryPy 
    * [http://www.stackworks.net/cymbeline/ Cymbeline]
    * ["Draco"]
    * [http://csoki.ki.iif.hu/~vitezg/impostor/ Impostor]
    * JonsPythonModules
    * [http://jotweb.tummy.com/ JOTWeb]
    * ["Karrigell"]
    * [http://www.divmod.org/Home/Projects/Nevow/index.html Nevow] ([http://nevow.com Official Site], [http://divmod.org/users/wiki.twistd/nevow/moin.cgi Wiki], [http://srid.bsdnerds.org/hacking/nevowdoc/ Documentation])
    * [http://pythonpaste.org Paste]
    * [http://nick.borko.org/pse/works.html Python Servlet Engine]
    * PythonWebModules see also the [http://www.pythonweb.org Web Modules Homepage]
    * [http://pywork.sf.net PyWork]
    * [http://www.qlime.org QLime]
    * ["Quixote"]
    * SkunkWeb
    * [http://snakelets.sourceforge.net/ Snakelets]
    * [http://snakeskin-tools.sourceforge.net SnakeSkin]
    * TwistedMatrix
    * ["Webware"]
    * ["Zope"]

=== Templating Engines ===

There are many, many different HTML/XML templating libraries for Python that provide different feature sets 
and syntaxes.  These libraries usually assume that you know how to write HTML or XML.

The number of libraries is so great because such libraries are pretty easy to write in Python; [http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/52305 this recipe from the Python Cookbook] shows how easy it is.  

    * ["Castalian"]
    * ["Cheetah"]
    * CubicTemp
    * [http://www.nthwave.net/elements/ Elements]
    * EmPy
    * [http://freespace.virgin.net/hamish.sanderson/htmltemplate.html HTMLTemplate]
    * [http://htmltmpl.sourceforge.net/ htmltmpl]
    * [http://lesscode.org/projects/kid/ Kid]
    * [http://myghty.zzzcomputing.com/ Myghty]
    * [http://www.divmod.org/Home/Projects/Nevow/index.html Nevow] ([http://nevow.com Official Site], [http://divmod.org/users/wiki.twistd/nevow/moin.cgi Wiki], [http://srid.bsdnerds.org/hacking/nevowdoc/ Documentation])
    * ["pso"] 
    * [http://www.entrian.com/PyMeld PyMeld]
    * [http://www.owlfish.com/software/simpleTAL/ SimpleTAL]
    * ["Spyce"]
    * [http://www.pytan.com/spytee.html Spytee]
    * ["teng"]
    * [http://www.execulink.com/~robin1/wasp/readme.html WASP]
    * [http://www.livinglogic.de/Python/xist/ XIST]
   
=== Server-embedded Python ===

    * ModPython for Apache
    * ["PyWX"] for AOLServer

=== Web-based XML processing engines ===
    * ["4Suite"]
    * ["maki"]

=== HTML Shorthand Processors ===

The libraries in this section implement simpler markup languages
that can be automatically converted to HTML.  This lets you avoid having to write HTML 
by hand.

    * [http://www.methods.co.nz/asciidoc/ AsciiDoc]
    * PyTextile
    * ReStructuredText
    * [http://txt2tags.sourceforge.net/ txt2tags]

=== HTML Generation class libraries ===
 
   * [http://starship.python.net/crew/friedrich/HTMLgen/html/main.html HTMLgen]
   * [http://dustman.net/andy/python/HyperText/ HyperText]
   * [http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/366000 HTMLTags ]
    * [http://www.divmod.org/Home/Projects/Nevow/index.html Nevow] ([http://nevow.com Official Site], [http://divmod.org/users/wiki.twistd/nevow/moin.cgi Wiki], [http://srid.bsdnerds.org/hacking/nevowdoc/ Documentation]) - (Nevow has XML Templates which can be used to generate XHTML)
   * [http://www.livinglogic.de/Python/xist/ XIST ]

=== Jython-accessible Java Templating Engines ===

   * [http://www.webmacro.org/ WebMacro]
   * [http://jakarta.apache.org/velocity/index.html Velocity]
   * [http://java.sun.com/products/jsp Java Server Pages, JSP]
   * [http://freemarker.org/index.html FreeMarker] (with Jython data binding)

== Python-accessible C Templating Engines ==

    * ClearSilver (HTML generation)

== Utility modules ==
 
    * [http://www.chrisarndt.de/en/software/python/#auth Auth modules] - a module collection for authentication purposes
    * [http://www.voidspace.org.uk/python/modules.shtml#dataenc Dataenc] - allows secure and time limited logins to be encoded into webpages for use with web applications
    * [http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/305288 HTTP basic authentication example]
    * [http://srid.bsdnerds.org/hacking/wallaby/ Wallaby] - CGI Framework with XMLHttpRequest support. Only source is available now

= Related Links =

The Web Framework Shootout at http://colorstudy.com/docs/shootout.html also covers several of these frameworks.

This topic guide started out as a word by word copy of PaulBoddie's 
[http://www.boddie.org.uk/python/web_frameworks.html Python Web Frameworks Overview]. 

OriginalWebProgrammingClassification is an older listing of Python-related web tools, and is now out of date and only of historical interest.

[http://pyre.third-bit.com/pywebblog/ one man's thoughts on writing a single application in multiple different web frameworks]

==== Notes on Editing ====

Opinions based on experience are welcome, but framework or templating system authors should sign their comments with InTheirOwnWords to admit to a certain bias.

The rather strict format of the main entries (described in WebProgrammingTemplateHelp) should not been seen as a limit. Feel free to add new pages containing examples, direct comparisons etc.

When adding new entries choose Web``Programming``Template when creating the page.


== Discussion ==

For a set of comparisons of my real-world experiences with a bunch of the web solutions described on this page, check my WebSolutionComparison page.  These are NOT impartial and unbiased comparisons; these are my personal experiences from building real web sites.  Feel free to add your own comparisons.

-- TimRoberts [[DateTime]]

Wait- I don't understand-

Why were BaseHttpServer, DocXmlRpcServer, CgiScripts taken out?

I'd think that on a page on WebProgramming, those things would be listed.

-- LionKimbro [[DateTime(2004-08-02T14:36:38Z)]]

Other things:

 * The reorganisation is presumably to help people find the right framework - things like simple CGI-based APIs might not be cutting edge stuff, but they're potentially very useful if you don't have a "full" hosting account.
 * I didn't really agree with some aspects of the revised classifications. I think the template systems need their own page, and the multiple classifications really need banishing to another page where they'll confuse only the experts.

-- PaulBoddie [[DateTime()]]

I'm afraid we need more fine-grained classification. It is unclear which of these components can be used together with others (say: is [http://www.chrisarndt.de/en/software/python/#auth Auth modules] compatible with CGI
or mod_python?

-- Michal J. Gajda [[DateTime()]]

If you want web programming to be more accessible, maybe you should avoid titles like "Variable Insertion-Replacement Templating Applications"?

-- FredrikLundh
