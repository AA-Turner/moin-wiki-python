Some notes on how to use {{{xml.dom.minidom}}}:

{{{
#!python
from xml.dom.minidom import parse, parseString

dom1 = parse( "foaf.rdf" )   # parse an XML file
dom2 = parseString( "<myxml>Some data <empty/> some more data</myxml>" )
print dom1.toxml()
print dom2.toxml()
}}}

== Examples of Use ==

 * node.nodeName
 * node.nodeValue
 * node.childNodes

=== Find Elements ===

You can manually walk through the {{{childNodes}}} tree, comparing {{{nodeName}}}s.

You might be able to use {{{getElementsByTagName}}} as well:

{{{
#!python
from xml.dom.minidom import parse
dom = parse("foo.xml")
for node in dom.getElementsByTagName('bar'):  # visit every node <bar />
    print node.toxml()
}}}

{{{getElementsByTagName}}}, works recursively into the tree, I believe.

=== Add an Element ===

Create & add an XML element (Something like {{{<foo />}}}) to an XML document.

{{{
#!python
from xml.dom.minidom import parse
dom = parse("bar.xml")
x = dom.createElement("foo")  # creates <foo />
dom.childNodes[1].appendChild(x)  # appends at end of 1st child's children
print dom.toxml()
}}}

=== Add an Element with Text Inside ===

Create & add an XML element to an XML document, the element has text inside.

ex: {{{<foo>hello, world!</foo>}}}

{{{
#!python
from xml.dom.minidom import parse
dom = parse("bar.xml")
x = dom.createElement("foo")  # creates <foo />
txt = dom.createTextNode("hello, world!")  # creates "hello, world!"
x.appendChild(txt)  # results in <foo>hello, world!</foo>
dom.childNodes[1].appendChild(x)  # appends at end of 1st child's children
print dom.toxml()
}}}

=== Import a Node ===

You can use DOM 2 "importNode" to take part of one XML document, and put it into another XML document.

{{{
#!python
from xml.dom.minidom import parse
dom1 = parse("foo.xml")
dom2 = parse("bar.xml")
x = dom1.importNode(dom2.childNodes[1],  # take 2nd node in "bar.xml"
                    True)  # deep copy
dom1.childNodes[1].appendChild(x)  # append to children of 2nd node in "foo.xml"
print dom1.toxml()
}}}

== Links ==

 * [http://www.python.org/doc/2.3.2/lib/module-xml.dom.minidom.html Python 13.7, xml.dom.minidom] -- API reference
 * [http://www.faqs.org/docs/diveintopython/kgp_divein.html#kgp.divein Dive into Python, Chapter 5] -- works almost entirely out of the minidom API
