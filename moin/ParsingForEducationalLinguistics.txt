''''ParsingForEducationalLinguistics'''' can achieve greater heights in Python than in other languages for many reasons.

1.  The interactive nature of Python allows students to explore possibilities which would be beyond them in most other environments.

2.  Excellent parsing will use a combination of declarative languages, functional languages, procedural languages, and object-oriented languages.  In what other programming language can you write switching  naturally between each of these computer science techniques?

3.  Some of the best linguistic techniques switch between "rule-driven" and "data-driven" parsing to handle different aspects of language.  Python can do this easier that other languages.  I just read a paper on "Assumption Grammars" which claimed this as a great benefit of that type of grammar using the declarative power of Prolog.  Unfortunately a special Prolog emulator had to be written in C in order to handle small test cases.  Students striving to learn something that no-one completely understands, deserve to just write in straightforward Python instead of losing focus in computer science gymnastics. 

Sprinters will use the power of Python to develop linguistic tools for descriptive linguistics.  We have more problems than we can solve to make English more student friendly.  But you can work in your native language or any language you want to learn, if you are willing to just share techniques and parsing directives. 

ooucDELETE at yahooDELETE . com
