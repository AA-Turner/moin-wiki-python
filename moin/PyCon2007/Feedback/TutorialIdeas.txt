#format rst

Answers to the question "What tutorial topics would you like to see in
the future?" on the PyCon 2007 tutorial feedback forms (duplicates
removed, edited):

* Advanced Python: language features, techniques
* Advanced XML
* Audio and Python
* cTypes  (http://starship.python.net/crew/theller/ctypes/)
* CPython (Intro to Python core development for those who wish to start contributing; Python Internals: how to modify Python; walk through Python source code)
* Django: more hands-on. How to do a non-trivial app, rather than internals.
* Eggs (Creating setuptools installs)
* Embedded Python
* Faster Python Programs
* Flash/flex widgets in Python
* Future of Python
* GUI
* IronPython
* Jython - the complete guide
* Kamaelia (http://kamaelia.sourceforge.net/Home)
* LDAP integration
* Language tips/tricks by a language lawyer
* Mac and Python
* Metaprogramming (Metaclasses & descriptors)
* Newforms: tips & tricks, real-world examples, etc.
* NumPy
* Object-oriented approach for procedural programmers
* Plone
* Profiling tools (i.e. finding the actual bottlenecks)
* PyPy
* Pyrex or other C wrappers
* Pyro
* Python for sysadmins (idioms, not syntax)
* Python tutorial part III in B2B
* Pythonic patterns
* ReStructuredText + Docutils
* SQLAlchemy (http://www.sqlalchemy.org/)
* SWIG & Python tutorial
* Scientific visualization topics: specifically SciPy, matplotlib
* Signal Processing
* Standard Library tour
* Styles of Programming
* Testing (How to use Python tools to test non-Python code; TDD [test-driven development])
* Tools that make up packages like Django and Turbogears, e.g. CherryPy, templates, Kid, etc.
* TurboGears
* Twisted (& nevow)
* Web appl database access with a simple application
* Win32 Python (COM, MSOffice, ActiveDir interaction, etc.)
* wxPython
* Zope, Zope 3/Five
