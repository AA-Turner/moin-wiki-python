#acl All:read

These are the results from the feedback forms (both online and paper)
for PyCon 2007.  There were 156 respondents in all,
but not every person answered every question.

Numbers in parentheses are the counts of 
how many times an item was mentioned. 

See ["/Comments"] for the essay-type comments from the feedback forms.

= Overall ratings =

== Is this your first PyCon? ==

Yes 56% (84)   No 44% (66)

== What days did you attend PyCon? ==

Friday 96.6% (143)
Saturday 96.6% (143)
Sunday 91.9% (136)
Tutorials 31.1% (46)
Sprints 20.9% (31)

== How did you hear about PyCon? ==

{{{
(11) python.org
( 9) Mailing list
( 8) comp.lang.python
( 5) www.Python.org
( 4) blogs
( 3) Website
( 3) Planet Python
( 3) Internet
( 2) list
( 2) friend
( 2) Work
( 2) Web Site
( 2) Web
( 2) Python411 Podcast
( 2) Friends
( 2) Employer
( 2) Colleague
( 1) websites
( 1) web page
( 1) web announcement
( 1) was at the last 3
( 1) various people on planet python; trac mailing list
( 1) users group
( 1) python-dev
( 1) python-announce mailing list
( 1) python blogs
( 1) other python users, the python.org website
( 1) online search for python conferences
( 1) memory: I've been the last two years
( 1) member of the python community
( 1) mailing list of open-source project
( 1) jhuj
( 1) hakan
( 1) googled it figuring something like this must surely exist
( 1) google
( 1) from a friend
( 1) don't remember.  c.l.py probably
( 1) don't remember
( 1) community
( 1) co-worker
( 1) boss and coworkers
( 1) blogs, website, word of mouth
( 1) Zope mailing list
( 1) Went to PyCon 2003
( 1) Went to 2004
( 1) Web friends
( 1) Various mailing lists and blogs
( 1) Unofficial Planet Python
( 1) Titus Brown
( 1) Through friends
( 1) The list
( 1) The Pycon Weblog
( 1) The Internet
( 1) Steve Alexander
( 1) Python411
( 1) Python community
( 1) Python announcements list
( 1) Previous attendance
( 1) Planet Python RSS 
( 1) Organizer
( 1) N/A
( 1) Mail lists and blog discussion
( 1) Local Python User Group
( 1) Last year's PyCon
( 1) Known from python community
( 1) Known about it forever
( 1) Known about PyCon's for a long time. python.org, friends.
( 1) Internship
( 1) I've been involved with Python for years - can't remember exctly.
( 1) I've been involved in Python for a long time.
( 1) I've been attending since 2003 (?). The company I worked for was a sponsor in 2003.
( 1) I'm an organizer. First heard on c.l.py probably
( 1) I don't remember
( 1) From the Python community -- it's been long enough I don't remember how.
( 1) From the Django project
( 1) From python.org link
( 1) Everywhere!
( 1) Event aggregator website
( 1) Eurpython and various sources on the web
( 1) Email announcement to local user groups
( 1) Don't recall
( 1) Daily Python URL IIRC
( 1) DFW Python user group
( 1) Co-workers had attended in previous years.
( 1) Co-workers
( 1) Chicago User's Group
( 1) CLPA
( 1) Been there the last 3 years now
( 1) Ages ago... forget.
( 1) A few weeks before PyCon 2006
}}}

== Please rate ... ==

{{{
	very low 	low	high	very high	N/A	Response Average
your overall satisfaction with PyCon 2007 in general	
	1% (1)	0% (0)	36% (53)	63% (94)	1% (1)	3.62
your overall satisfaction with the keynotes	
	2% (3)	6% (9)	53% (78)	37% (55)	2% (3)	3.28
your overall satisfaction with the talks	
	0% (0)	11% (16)	66% (96)	23% (33)	1% (1)	3.12
your overall satisfaction with the network	
	1% (1)	20% (30)	48% (70)	22% (33)	9% (13)	3.01
your overall satisfaction with the food	
	3% (4)	17% (25)	57% (85)	22% (33)	1% (1)	3.00
your likelihood of attending next year	
	1% (2)	8% (12)	40% (59)	51% (76)	0% (0)	3.40
}}}

== Would you prefer a conference that took place ==


Only on weekdays 19.4%	(27)

Includes one weekend day (starts on Sunday or ends on Saturday)
20.9%	(29)

Includes two weekend days   59.7%	(83)

= Talks =

== What were your favorite talks? ==

{{{
(77) Keynote: Ivan Krstic
(66) Keynote: Robert M. Lefkowitz
(43) Lightning Talks
(40) Keynote: Guido van Rossum
(27) (#5)  twill, scotch, and figleaf -- tools for testing
(23) (#47)  SQLAlchemy -- the Front-to-Back database toolkit
(22) (#50)  Interactive Parallel and Distributed Computing with IPython
(22) (#60)  IPython: getting the most out of working interactively in Python
(21) (#36)  Web Frameworks Panel
(18) (#77)  IronPython: Present and futures
(17) (#76)  Using Stackless
(16) (#55)  Towards and Beyond PyPy 1.0
(16) (#66)  WSGI: An Introduction
(14) (#103)  Weaving Together Women and IT
(13) (#52)  Understanding and Using NumPy
(11) Keynote: Dr. Adele Goldberg
(11) (#2)  Python inside Imageworks
(11) (#21)  Testing Tools Panel
(11) (#67)  Good-bye Hello World:  Rethinking Teaching with Python
(11) (#87)  Scaling Python for High-Load Web Sites
(11) (#88)  Dateutil to the Rescue!
(10) (#13)  Developing Desktop Applications with Dabo
(10) (#31)  The Wonderful World of Widgets for the Web
( 9) (#51)  Why and when to use ctypes?
( 8) (#7)  The State of Python Advocacy
( 8) (#20)  Becoming an Open Source Developer: Lessons from the Django Project
( 7) (#49)  Iterators in Action
( 7) (#64)  How I Wrote a Python App and Got $5 Million
( 7) (#102)  Python for Students of the Modern World
( 6) (#25)  The Absolute Minimum an Open Source Developer Must Know About Intellectual Property
( 6) (#39)  Studying Internet Censorship: a Python case study
( 6) (#41)  Securing Python: 'Protecting the interpreter from code wielding fresh fruit'
( 6) (#100)  Visual Python in a Computational Physics Course
( 5) (#96)  PyDX: mathematics is code
( 5) (#3)  Test Automation for a Complex System: Technology and Social Aspects
( 5) (#4)  Pybots: Testing Python Projects in Real Time
( 5) (#42)  Python-Dev Panel: 'We make the things that make Python work.'
( 5) (#56)  Using Python Eggs
( 5) (#69)  Python on Parrot -- under the hood
( 5) (#101)  Embedding Jython applications in a Firefox Extension
( 4) (#19)  Writing Parsers and Compilers with PLY
( 4) (#29)  Introduction to Zope 3 - The Component Architecture
( 4) (#46)  Packaging Python apps for Linux Distributions
( 4) (#6)  Developing with IronPython and Windows Forms
( 4) (#63)  Creating the WhatWhat Project with TurboGears
( 4) (#70)  Accessing and serving scientific datasets with Python
( 4) (#79)  Python and vim: Two great tastes that go great together.
( 4) (#80)  Galaxy: A Python based web framework for comparative genomics
( 4) (#94)  Software Development with Trac
( 3) (#12)  The Star Schema in Python - Analysis and Reporting without Overheads
( 3) (#38)  Python, Unicode, and Internationalization
( 3) (#57)  State of Zope Panel
( 3) (#61)  Easy Creation of Interactive Tutorials
( 3) (#85)  The Essentials of Stackless Python
( 3) (#93)  Jython for Python Developers
( 2) (#32)  pyweek: making games in 7 days
( 2) (#34)  Python and wxPython for Experimental Economics
( 2) (#40)  Embedding Little Languages in Python
( 2) (#72)  SQLSoup
( 2) (#78)  soaplib: an easy-to-use python soap library 
( 2) Tutorial: code like a pythonista
( 1) (#16)  Python In Open Pit Mining Operations
( 1) (#17)  Topographica: Python used for Computational Neuroscience
( 1) (#27)  Distributing your project with Python Eggs
( 1) (#45)  Writing a Python Extension module in C++ using Swig
( 1) (#90)  Developing Python applications in Komodo 4.0
( 1) (#91)  Unit testing with mock objects using PyMock
( 1) (#92)  Write Less Code with XRC for wxPython
( 1) (#97)  Parsing revisited: a grammar transformation approach to parsing
( 1) pvm
( 1) lunch!
( 1) Twisted BoF
( 1) Tutorial: Testing Tools
( 1) Tutorial: Database API
( 1) The program was excellent. I wanted to 'waste' this vote to make that point. I had a hard time limiting my selections as I gained in so many areas! Treating lightning talks as a premium event was a WONDERFUL change. IMO, it is a KEEPER!
( 1) Openspace sessions
( 1) Might want to distinguish between favourite (well-presented), useful. 
( 1) Lefkowitz was really in a league of his own!
( 1) It was extremely difficult to narrow down to 5.
( 1) Ian Bicking's lightning in particular
( 1) Django BoF
( 1) BOFs
( 1) - The two open space presentations given by Enthought  - Japan usergroup lightening talk  - Another lightning talk that same period on human user interface development (or something).  The funny AE web development.
}}}


== What 5 topics should have been covered at PyCon? ==

{{{
(12) Twisted
( 4) Testing
( 4) SciPy
( 4) Optimization
( 3) web frameworks
( 3) system administration
( 3) pygame
( 3) libraries
( 3) Python Internals
( 3) Pylons
( 3) PyPy
( 2) python idioms
( 2) more of same
( 2) games
( 2) Python in embedded systems
( 2) Plone
( 2) OOP/Design Patterns
( 2) Future of the Python language
( 2) Embedding Python in other apps
( 2) Embedded Python
( 2) Databases
( 1) web services
( 1) web developement
( 1) tracks of topics to dig deeper
( 1) text processing
( 1) sub-sonic avionics
( 1) soap programming
( 1) setuptools
( 1) real-world iterator examples
( 1) real-world ctypes examples
( 1) qt3 and qt4
( 1) pvm
( 1) profiling & optimization
( 1) practical data structures
( 1) performance
( 1) panel on setuptools vs distutils
( 1) other language changes (pypy, stackless, py3k, etc.)
( 1) multimedia
( 1) more panels in general on advanced development alternatives
( 1) more advanced web framework panel like last year
( 1) mod_python
( 1) meta programming
( 1) longer tutorials on sqlalchemy
( 1) limits of the python interpreter
( 1) http://pypi.python.org/pypi/Construct/2.00
( 1) how to use distutils
( 1) freevo
( 1) extension development
( 1) extending komodo 4.0 with firefox technology
( 1) everything else was covered
( 1) evangelism primer
( 1) enterprise web
( 1) enterprise topics
( 1) docutils
( 1) distutils
( 1) development in a team environment
( 1) decorators
( 1) cheetah
( 1) boot.python
( 1) better code commenting
( 1) ajax
( 1) advocacy
( 1) XML Processing with ElementTree
( 1) Writing a Trac plugin
( 1) Wrapping your brain around PIL
( 1) Worst things a python programmer can do (speed, style, etc.)
( 1) Wing IDE plugins, creating
( 1) What is Pypi?
( 1) What Python could learn from Ruby
( 1) Web architecture, performance, and scaling
( 1) Web applications
( 1) Web application deployment/management
( 1) Using Apache
( 1) Travel arrangements wiki/blog page
( 1) Threaded python
( 1) Text processing (NLP)
( 1) Test Driven Development
( 1) Systems/Network management tools
( 1) Systems Administration
( 1) State of Python Distributions (list - show differences)
( 1) Standardisation efforts
( 1) Speech recognition
( 1) Software engineering
( 1) Smackdown of the top 3 web frameworks
( 1) Smackdown of the top 3 Python implementations
( 1) SimPy
( 1) ShedSkin
( 1) Scientific computing
( 1) Rule dispatch (from PEAK)
( 1) Room sharing wiki/blog page
( 1) Refactoring
( 1) RSS feed for schedule changes
( 1) RDF
( 1) Python/Objective-C bridge
( 1) Python vs and using Python with  Java, C#, Ruby, etc
( 1) Python tips and tricks
( 1) Python predictions (where it has been and where is it going to be as far as in companies and in projects)
( 1) Python on Nokia N800
( 1) Python in integration efforts
( 1) Python in education
( 1) Python best practices
( 1) Python 3.0 Demo (compiled)
( 1) Python 2.5
( 1) Python 2.3 compatibility and how it affects you (most compat modules I've seen don't work right)
( 1) Python - write once - run on many
( 1) Pyrex
( 1) Pyjamas
( 1) PyUSB/PySerial
( 1) PyOpenGL/PyGame
( 1) Project management with Python
( 1) Profiling
( 1) Predictive dispatch
( 1) Plugins
( 1) Parallelism, concurrency
( 1) Parallel computing (multicore etc.)
( 1) OS X and Python
( 1) OLPC Machine Python Internals
( 1) Not much else, really well done!
( 1) Nose
( 1) New projects unknown to me (they were)
( 1) Nevow
( 1) Networking apps
( 1) Network distributed systems in python
( 1) More technical talks on *how* to accomplish things
( 1) More social interactions
( 1) More room in Django tutorial
( 1) More advanced topics!
( 1) Mobile devices
( 1) Mercurial
( 1) Large-scale Python deployments & projects
( 1) Kamalia
( 1) IronPython and ASP
( 1) IronPython
( 1) Intro to Sugar (from OLPC)
( 1) Intro for people new to programming
( 1) Internationalization
( 1) Integrating Zope 3 Components
( 1) Industry case studies
( 1) IP law
( 1) I was there only for the morning tutorial, therefore cannot suggest anything, besides the fact that I am still in the early phases of learning python....
( 1) How to add new numpy types
( 1) How YouTube runs on Python
( 1) HOW to use ctypes
( 1) Graphics
( 1) Generic Agile Testing Methods
( 1) General python programming talks, e.g. python magic (descriptors and metaclasses) python idioms, or 'gettings more out of python', or optimizing python
( 1) GIL
( 1) Fun with generators (and how to make them look like lists)
( 1) Frameworks
( 1) FormEncode
( 1) FUSE & python
( 1) Encryption technologies
( 1) Elixir
( 1) Eggs-yes there were two but they didn't work well
( 1) Django
( 1) Development strategies
( 1) Cryptography
( 1) Creating extensions with pyrex
( 1) Coverage of editors and IDEs
( 1) Conducting code reviews in Python
( 1) Concurrency in Python
( 1) Community Building
( 1) Command-line parsing
( 1) Code coverage
( 1) Building a Zope3 app
( 1) Best practice
( 1) BOF talk wiki page
( 1) Artificial Intelligence
( 1) Applications of Python
( 1) Advanced topics
( 1) Advanced eggs
}}}


= Accommodations =


== Where did you stay? ==

Hotel 81.1%	(120)

Hostel 0%	(0)

With friends 4.1%	(6)

Am local resident 10.8%	(16)

Other: 

{{{
1. I actually drove all night to get to the conference. Then I drove back
   after the tutorial (around 5 hours each direction), but I am very
   happy I came there...
2. 	Marriott Residence
3. 	residence inn
4. 	different hotel (keep price down)
5. 	hotel other than the host hotel
6. 	In-laws
}}}

== What is your maximum per-person nightly room budget for accommodations? ==


$75 or less 16%	(23)

$100 38.2%	(55)

$125 21.5%	(31)

$150 12.5%	(18)

$200 6.9%	(10)

More than $200
4.9%	(7)

== How are you paying for your PyCon trip? ==


100% self-funded 35.1%	(52)

100% employer-funded? 54.7%	(81)

Shared expense 10.1%	(15)

If shared, how?

{{{
1.    	  Employer paid registration, I paid travel
2. 	$500 from employer, rest from me
3. 	50-50
4. 	Employer paid for flight, hotel, and registration. I paid the rest.
5. 	some discretionary research money
6. 	paid travel/hotel expenses for some
7. 	Press admission.  I don't have money for accomodations, so I commuted.
8. 	Employer covers hotel and travel; I cover food and entertainment.
9. 	I pay expenses and for the conference, company pays for airfare and hotel
10. 	I am my employer
}}}

= Location =

== If PyCon were not to be in Dallas,TX or Chicago, IL, what 3 cities/regions would you prefer? ==

{{{
(27) Boston MA
(26) Washington DC
(24) San Francisco CA
(16) New York NY
(14) Denver CO
(13) Bay area
(12) Seattle WA
(10) Atlanta GA
( 9) Portland OR
( 8) san diego CA
( 8) Austin TX
( 6) Montreal QC
( 6) Los Angeles CA
( 6) Las Vegas NV
( 6) Chicago IL
( 5) Miami FL
( 5) East Coast
( 5) Cleveland OH
( 5) California
( 4) Silicon Valley
( 4) Orlando FL
( 4) New Orleans LA
( 4) Baltimore MD
( 3) hawaii
( 3) Vancouver BC
( 3) St. Louis MO
( 3) SouthEast
( 3) San Jose CA
( 3) Philadelphia PA
( 3) Northeast
( 3) Nashville TN
( 3) Midwest
( 3) Florida
( 3) Dallas TX
( 2) West Coast
( 2) Washington
( 2) Toronto ON
( 2) Tampa FL
( 2) Southern CA
( 2) Santa Fe NM
( 2) Phoenix AZ
( 2) Mountain View CA
( 2) Memphis TN
( 2) London
( 2) Kansas City MO
( 2) Houston TX
( 2) Honolulu HI
( 2) Denver/Boulder CO
( 2) Colorado
( 2) Boulder CO
( 1) southern california
( 1) somewhere mountainous
( 1) milwaukee wi
( 1) huntsville AL
( 1) el paso tx
( 1) don't care - just good airline connections, and central location
( 1) detroit MI
( 1) colorado springs CO
( 1) central oklahoma
( 1) buffalo ny
( 1) anyplace with good public transportation
( 1) anyplace warm in winter
( 1) any place not extremely challenging, expensive to visit
( 1) Washington/Oregon
( 1) Warm
( 1) Southwest
( 1) South Central US
( 1) Somewhere with good transportation
( 1) Somewhere in Colorado
( 1) Somewhere I'd like to visit anyway
( 1) Savannah GA
( 1) Sao Paulo
( 1) Sandusky OH
( 1) San Antonio TX
( 1) Salt Lake City UT
( 1) SF
( 1) Rio de Janeiro
( 1) Raleigh NC
( 1) Portland/Seattle WA
( 1) Pacific Northwest
( 1) Pacific North East
( 1) Other Midwest city
( 1) Oregon
( 1) Omaha NE
( 1) Northwest
( 1) North Midwest
( 1) North East
( 1) North Carolina
( 1) Newport Beach CA
( 1) NE
( 1) Montreal (Canada)
( 1) Mobile AL
( 1) Mid West
( 1) Los Angeles (CA in general, San Fran too)
( 1) Long Beach CA
( 1) Lawrence KS
( 1) Las Vegas
( 1) Indianapolis IN
( 1) Hartford CT
( 1) Ft. Worth TX
( 1) Elsewhere on West Coast (Seattle, Vancouver, etc)
( 1) Doesn't really matter, if I can go, I will go where ever!!!
( 1) Columbus OH
( 1) Cleburne TX
( 1) Charlotte NC
( 1) Central US
( 1) Canada, Mexico, Brazil, Argentina
( 1) Canada
( 1) CA or WA would be good sometime
( 1) Burlington MA
( 1) Bay Area/LA  or other warm cali region with a beach and a major city
( 1) Arlington TX
( 1) Arizona
( 1) Anywhere with int'l airport
}}}


= Tutorials =

== Would you be interested in attending half-day (3-hour) tutorials next year? ==

Yes 56.4% (79)

No 43.6%	(61)

== If yes, please list 3 tutorial subjects you would like to attend. ==

{{{( 8) twisted
( 6) Django
( 4) wxPython
( 4) SQLAlchemy
( 4) PyGame
( 3) testing
( 3) ctypes
( 3) Optimization
( 3) Advanced Python
( 2) pylons
( 2) Zope 3
( 2) Testing Tools
( 2) Stackless Python
( 2) Parallel Programming
( 2) Object Oriented Programming and overall program structure
( 2) Database
( 2) Dabo
( 2) Advanced SQLAlchemy
( 2) zope programming
( 1) writing maintainable code
( 1) web frameworks
( 1) web application development
( 1) using matplotlib
( 1) unicode
( 1) turbogears and NVU or like
( 1) test automation
( 1) secure programming
( 1) qt4
( 1) paste
( 1) numpy
( 1) nokia python
( 1) network utilities
( 1) beginner's python
( 1) metaclasses
( 1) jython
( 1) intro to turbogears
( 1) intermediate data structures
( 1) formencode
( 1) eric3 and svn
( 1) eggs
( 1) don't know yet
( 1) debugging
( 1) classes
( 1) advice for people new to programming/python
( 1) advanced anything -- all tutorials seem mostly beginner/intro level
( 1) advanced advanced
( 1) Zope3 Site Deployment and scaling
( 1) WxPython / Graphing
( 1) Writing unit tests
( 1) Writing c extensions
( 1) Writing a Twisted Server
( 1) Web Framework (TurboGears/Django/etc)
( 1) Web Application Programming
( 1) WSGI
( 1) Using the Natural Language Tool Kit
( 1) Using setuptools
( 1) Using SSL in Python
( 1) Using Python modules
( 1) Using Pyrex to write C extensions
( 1) Understanding generic functions
( 1) Twisted client-server development
( 1) TurboGears hands on programming
( 1) TurboGears
( 1) Trac Plugin development
( 1) Testing frameworks
( 1) Talking to hardware with Python
( 1) TCP/IP network programming
( 1) Scientific Computing with Python 
( 1) Scientifc Python, Numpy etc.
( 1) Scaling Python
( 1) SQLAlchemy (or similar)
( 1) SQL Alchemy
( 1) RAD wxpython
( 1) PythonCard/wxPython/GUIs
( 1) Python optimization
( 1) Python metaprogramming: metaclasses and related stuff
( 1) Python internals (e.g. bridging the Python -> C API gap)
( 1) Python idioms
( 1) Python code transformations using parsing modules
( 1) Python and SOA
( 1) Python Programming
( 1) Python Institute (a new 'continuing' past PyCon idea - face2face) 
( 1) Python 101
( 1) PyPy transformations (build your own language)
( 1) Porting to Python 3000
( 1) Patterns in Python
( 1) Parsing data from the Web (screen scraping)
( 1) Optimizing Python for Smarties
( 1) Optimisation
( 1) ORMs
( 1) OOP
( 1) OLPC
( 1) Module writing in C (CPython) or C# (IronPython)
( 1) Meta-programming
( 1) Managing large projects (testing/tricks/...)
( 1) Making Best Use of ZODB/Durus
( 1) Libraries
( 1) Leveraging Python 3.0
( 1) Komodo hands on training
( 1) Jython/WxPython/IPython
( 1) Iterators, Decorators
( 1) Intro to agile programming; testing frameworks
( 1) Intro to Web Frameworks & Python
( 1) Intro to SQL & Python
( 1) Intermediate to Advanced Python
( 1) Interfaces in application integration
( 1) Int./adv. programming techniques
( 1) IPython
( 1) IP law
( 1) How to not mess up using setuptools (+cheeseshop, etc)
( 1) Hard-CS topics (i.e. formal languages)
( 1) Giving Talks about Python
( 1) Game Programming
( 1) Framework (Django/TG/etc)
( 1) FFT audio analysis and filtering using Numeric (or something)
( 1) Extensions, optimization
( 1) Extension writing (ctypes, SWIG, etc.)
( 1) ElementTree (or XML Processing)
( 1) Eggs, distutils, etc.
( 1) Documentation and Testing
( 1) Django or TurboGears tutorial
( 1) Django for beginners (101 level, hands on examples)
( 1) Deploying a Python web app
( 1) Depends on what I'm doing next year
( 1) Decorators
( 1) Debugging Python Programs
( 1) Debian Python policy
( 1) Creating a SWIG .i file
( 1) Cool Things You Didn't Know about Python
( 1) Compiler Writing
( 1) Building a web gallery using Python
( 1) Basics of network programming
( 1) Anything about numpy or scipy
( 1) Anything David Goodger does
( 1) Advanced Web UI design/Development with Zope3
( 1) Advanced Python Programming
( 1) Advanced Python Networking
( 1) Actor Gaming Using Stackless and PyGame
}}}


----
CategoryPyCon2007
