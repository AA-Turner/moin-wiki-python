##master-page:HelpTemplate
##master-date:2007-02-25 (изм.2007-03-14)
#format wiki
#language ru
#pragma keywords Moin
 '''Вики''' — гипертекстовая среда (обычно веб-сайт) для сбора и структурирования письменных сведений. Характеризуется следующими признаками:
  * '''Множество авторов'''. Некоторые вики могут править все посетители.
  * '''Возможность многократно править текст''' посредством самой вики-среды (веб-сайта), без применения особых приспособлений на стороне редактора.
  * '''Проявление изменений''' сразу после их внесения.
  * '''Разделение''' информации '''на страницы''', где у каждой своё название.
  * '''Особый язык разметки''', позволяющий легко и быстро размечать в тексте структурные элементы, форматирование, гиперссылки и т. п.
  * '''Учёт изменений (учёт версий) текста''' и возможность отката к ранней версии.
----
 '''~+Содержание+~'''
   * [[#1|Текст]]
   * [[#2|ВикиИмена и ссылки]]
   * [[#3|Таблицы]]
   * [[#4|Списки]]
   * [[#5|Макросы]]

----

<<Anchor(1)>>
=== 1. Текст ===
   * [[#2|ВикиИмена и ссылки]]
   * [[#3|Таблицы]]
   * [[#4|Списки]]
   * [[#5|Макросы]]

 ~+К+~ак видно из определения в Вики хранится в основном текстовая информация, которую надо научиться оформлять с помощью '''''особого языка разметки'''''.
 <<BR>>Этим мы и займемся.
 <<BR>>Как и в любом текстовом редакторе на подобие ~+`MSWord`+~ или ~+`OpenOfficeWriter`+~ текст можно разбивать на абзацы. Это можно выполнить с помощью специального тега ~+`[[BR]]`+~.
----
__''Пример'' 1.1__:
 ~+`Первый абзац`+~<<BR>>
 ~+`[[BR]][[BR]]`+~<<BR>>
 ~+`Второй абзац`+~
__''Результат''__:
 Первый абзац
 <<BR>><<BR>>
 Второй абзац
----
 ~+Т+~егов ~+`[[BR]]`+~ можно вставлять неограниченное количество. Чем их больше, тем больше расстояние между абзацами.<<BR>>Чем больше пробелов Вы поставите перед первым предложением абзаца, тем больше будет отступ у абзаца.
<<BR>>
 ~+Е+~сли сравнивать дальше возможности языка Вики и текстовых редакторов то, для большей выразительности текста, Вы возможно, захотите выделить слова '''жирным''', ''курсивом'' или даже __подчеркнуть__. Посмотрим сразу на пример и Вам станет понятно, как все это работает:
----
__''Пример'' 1.2__:
 . ~+`'''жирный текст'''`+~
 . ~+`''курсив''`+~
 . ~+`__подчеркнутый текст__`+~
 . ~+`--(зачеркнутый текст)--`+~
__''Результат''__:
 . '''жирный текст'''
 . ''курсив''
 . __подчеркнутый текст__
 . --(зачеркнутый текст)--
----
 ~+П+~отренируемся объединять различные стили. Для удобства сначала старайтесь обрамлять тегами бОльшие участки текста, потом переходите к меньшим участкам или словам. Тогда Вы не запутаетесь с тегами.
----
__''Пример'' 1.3__:
 . ~+`'''''Пример текста''' с различными стилями''`+~
 . ~+`'''''Пример текста'' с различными стилями'''`+~
 . ~+`'''Пример текста с различными ''стилями'''''`+~
 . ~+`''Пример текста с различными '''стилями'''''`+~
__''Результат''__:
 . '''''Пример текста''' с различными стилями''
 . '''''Пример текста'' с различными стилями'''
 . '''Пример текста с различными ''стилями'''''
 . ''Пример текста с различными '''стилями'''''
----
 ~+В+~ меньшей степени Вам понадобится следующие возможности работы с текстом:
----
__''Пример'' 1.3__:
 . ~+`~-маленкий-~ шрифт`+~
 . ~+`~+большой+~ шрифт`+~
 . ~+`^верхний^индекс`+~
 . ~+`,,нижний,,индекс`+~
__''Результат''__:
 . ~-маленкий-~ шрифт
 . ~+большой+~ шрифт
 . ^верхний^индекс
 . ,,нижний,,индекс
 . Или такие  примеры: ''a''x^2^+''b''x+''c''=0, C,,2,,H,,5,,OH.
----
 ~+И+~ лучше обособленно рассказать о двух возможностях редактирования текста. Почему я выделил их в отдельную группу? Потому что внутри этих тегов теги оформления текста (которые мы уже рассмотрели выше) __не работают__.
----
__''Пример'' 1.4__:
 . ~+`{{{`+~
  . ~+`код`+~
 . ~+`}}}`+~
 . ~+{{{`моноширный текст`}}}+~
__''Результат''__:
 {{{
  код
 }}}
 `моноширный текст`
----
 ~+К+~ак уже было сказано ранее, что внутри тега "моноширный текст" другие теги оформления текста не работают. Но ни кто нам не мешает сделать так ;) :
----
__''Пример'' 1.5__:
 . ~+{{{'''`жирный моноширный текст`'''}}}+~
 . ~+{{{''`моноширный текст курсивом`''}}}+~
 . ~+{{{~+`большой моноширный текст`+~}}}+~
 . и так далее, как подскажет Вам фантазия
__''Результат''__:
 . '''`жирный моноширный текст`'''
 . ''`моноширный текст курсивом`''
 . ~+`большой моноширный текст`+~
----
 ~+Е+~сли Вы программист, то Вам наверно будет интересно не просто вывод кода программы, а вывод с подсветкой синтаксиса. Для этого необходимо использовать теги в виде трех фигурных скобок, но записать так -  `{{{#!язык_программирования`. В стандартной поставке поддерживаются следующие языки программирования: C/C++, Java, Pascal, Python, XML/XSLT/!DocBook.
----
__''Пример'' 1.6__:
 . ~+`{{{#!python`+~
 . ~+`from colors import palette`+~
 . ~+`palette.colorize('python')`+~
 . ~+`}}}`+~
__''Результат''__:
 {{{#!python
 from colors import palette
 palette.colorize('python')
 }}}
----
  ~+Л+~юбой большой текст стилистически принято разбивать на главы. Вы можете использовать пять уровней оформления заголовков:
----
__''Пример'' 1.7__:
 . ~+`= Первый уровень =`+~
 . ~+`== Второй уровень ==`+~
 . ~+`=== Третий уровень ===`+~
 . ~+`==== Четвертый уровень ====`+~
 . ~+`===== Пятый уровень =====`+~
__''Результат''__:
= Первый уровень =
== Второй уровень ==
=== Третий уровень ===
==== Четвертый уровень ====
===== Пятый уровень =====
----
 ~+А+~ также красиво :) отделять главы одна от другой с помощью горизонтальных линий разной толщины (как это сделано в этом документе для отделения примеров):
__''Пример'' 1.8__:
 . ~+`---`+~ не является горизонтальной линией
 . ~+`----`+~
 . ~+`-----`+~
 . ~+`------`+~
 . ~+`-------`+~
 . ~+`--------`+~
 . ~+`---------`+~
 . ~+`----------`+~
 . ~+`--------------------`+~ толщины свыше 10 тире не существует
__''Результат''__:
 --- не является горизонтальной линией
 ----
 -----
 ------
 -------
 --------
 ---------
 ----------
 -------------------- толщины свыше 10 тире не существует

<<Anchor(2)>>
=== 2. ВикиИмена и ссылки  ===
   * [[#1|Текст]]
   * [[#3|Таблицы]]
   * [[#4|Списки]]
   * [[#5|Макросы]]

 "~+В+~икиИмена" — слова специального вида, используемые для создания ссылок на страницы сайта. Их структура – Большая буква, одна или более маленьких букв, снова большая буква (или цифра), далее любое количество других букв или цифр.
 <<BR>>~+Е+~сли такая страница с таким именем есть в системе, то имя автоматически станет ссылкой на эту страницу; если нет то написанное имя "подкрасится" серым цветом, по клику на которое, Вам будет предложено создать новую страницу с названием, совпадающим с !ВикиИменем. Есть еще один способ записи ссылок на страницы, рассмотрим оба:
----
__''Пример'' 2.1__:
 . ~+`Моя первая ссылка на ВикиСтраницу`+~
 . ~+`Моя первая ссылка на ["ВикиСтраницу"]`+~
__''Результат''__:
 . Моя первая ссылка на ВикиСтраницу
 . Моя первая ссылка на [[ВикиСтраницу]]
----
<!> ~+Вики Имена можно записывать как русскими буквами, так и латиницей, но проконсультируйтесь с системным администратором, которой устанавливал Вики, как лучше записывать в Вашей системе.+~
 <<BR>>~+Е+~ще существeт такое понятие как "Вложенная Страница". Рассмотрим пример ссылки ~+`http://имя_сайта/страница/страница1`+~. "Страница1" является вложенной ссылкой по отношению к "Страница". Эта вложенность может быть настолько глубокой, насколько это Вам необходимо. Рассмотрим пример записи вложенных ссылок:
----
__''Пример'' 2.2__:
 . ~+`Моя первая ссылка на ВикиСтраница/ВложеннаяСтраница`+~
 . ~+`Моя первая ссылка на ["ВикиСтраница/ВложеннаяСтраница"]`+~
__''Результат''__:
 . Моя первая ссылка на ВикиСтраница/ВложеннаяСтраница
 . Моя первая ссылка на [[ВикиСтраница/ВложеннаяСтраница]]
----
 ~+Е+~сли Вы нашли интересный материал на просторах интернета и хотите поделиться с ним в своей статье, то можно дать ссылку на него следующим образом:
----
__''Пример'' 2.3__:
 . ~+`Моя первая внешняя ссылка http://gcc.gnu.org`+~
__''Результат''__:
 . Моя первая внешняя ссылка http://gcc.gnu.org
----
 ~+В+~икиИмена ограничивают Вас в названиях, для того чтобы можно было аперировать именами ссылок понятными для человека можно использовать следующий их вид:
----
__''Пример'' 2.4__:
 . ~+`[:ХайджинКинOla:Отчет по поставщику Хайджин Кинетикс - остатки Ola]`+~
__''Результат''__:
 . [[ХайджинКинOla|Отчет по поставщику Хайджин Кинетикс - остатки Ola]]
----
 ~+Н+~аведите курсор на ссылку в примере и посмотрите какой реальный адрес у этой ссылки.<<BR>>Тоже применимо и к внешним ссылкам на другие сайты:
----
__''Пример'' 2.5__:
 . ~+`[http://gcc.gnu.org Пример ссылки на внешний сайт]`+~
__''Результат''__:
 . [[http://gcc.gnu.org|Пример ссылки на внешний сайт]]
----
 ~+Е+~сли Вы хотите вставить какой либо файл в Вашу статью, будь то картинка или созданный в иной программе, то используйте ссылки следующего вида:
----
__''Пример'' 2.6__:
 . ~+`attachment:kartinka.png`+~
__''Результат''__:
 . {{attachment:kartinka.png}}
----
 ~+В+~ Вашей статье так же можно дать ссылку на файл, находящийся на внешнем сайте:
----
__''Пример'' 2.7__:
 . ~+`http://gcc.gnu.org/img/gccegg-65.png`+~
__''Результат''__:
 . {{http://gcc.gnu.org/img/gccegg-65.png}}
----
 ~+И+~ напоследок, про Вики Имена, если Вы хотите написать слово похожее на !ВикиИмя, но не хотите, что была создана ссылка на страницу с данным именем, то напишите следующим образом:
----
__''Пример'' 2.8__:
 . ~+`!ВикиСтраница`+~
__''Результат''__:
 !ВикиСтраница
----

<<Anchor(3)>>
=== 3. Таблицы ===
   * [[#1|Текст]]
   * [[#2|ВикиИмена и ссылки]]
   * [[#4|Списки]]
   * [[#5|Макросы]]

 ~+Л+~юбая информация будь то цифры или какая-нибудь текстовая информация лучше воспринимается если преподносится в виде таблицы. Таблица состоит из ячеек, которые в свою очередь расположены в строках и столбцах. Рассмотрим простейший пример таблицы:
----
__''Пример'' 3.1__:
 . ~+`||столбец1_строка1||столбец2_строка1||`+~
 . ~+`||столбец1_строка2||столбец2_строка2||`+~
__''Результат''__:
 ||столбец1_строка1||столбец2_строка1||
 ||столбец1_строка2||столбец2_строка2||
----
 ~+Т+~аблица в примере 3.1  смотрится как-то "куцо" не правда ли? Ширина ячеек и таблицы в целом зависит от текста, находящегося в ячейках. А если у Вас не дай бог будет такая таблица ?
----
__''Пример'' 3.2__:
 . ~+`||абра кадабра||три||`+~
 . ~+`||0||еще одна абра кадабра записанная в данной ячейке||`+~
__''Результат''__:
 ||абра кадабра||три||
 ||0||еще одна абра кадабра записанная в данной ячейке||
----
 ~+Ч+~тобы Ваши таблицы выглядели более менее достойно есть параметры управления: шириной таблицы, шириной ячейки, и расположением текста в ячейках (выравнивание по левому / правому / верхнему / нижнему краю, по центру). Рассмотрим все по порядку.
 <<BR>>Ширина таблицы указывается __всегда__ в первой ячейки таблицы в процентном соотношении ко всей странице, при этом ширина столбцов будет рассчитываться из максимальной ширины текста расположенного в ячейке столбца:
----
__''Пример'' 3.3__:
 . ~+`||<tablewidth="100%">абра кадабра||три||`+~
 . ~+`||0||еще одна абра кадабра записанная в данной ячейке||`+~

 . ~+`||<tablewidth="100%">еще одна абра кадабра записанная в данной ячейке||три||`+~
 . ~+`||0||абра кадабра||`+~
__''Результат''__:
 ||<tablewidth="100%">абра кадабра||три||
 ||0||еще одна абра кадабра записанная в данной ячейке||

 ||<tablewidth="100%">еще одна абра кадабра записанная в данной ячейке||три||
 ||0||абра кадабра||
----
 <!> ~+Помните в первой части про теги форматирования текста говорилось "чем больше пробелов Вы поставите перед первым предложением абзаца, тем больше будет отступ у абзаца." Тоже распространяется и на таблицы: чем больше вы поставите пробелов, тем больше отступ будет у таблицы. При этом общая (полезная) площадь таблицы уменьшается !!!+~
----
__''Пример'' 3.4__:
 . ~+`||таблица1||`+~
   . ~+`||таблица2||`+~
__''Результат''__:
 ||таблица1||
   ||таблица2||
----
 ~+Н+~о перейдем к дальнейшему облагораживанию таблиц :-) Если Вам необходимо, чтобы столбцы имели определенную ширину, то необходимо поступить точно также как при определении ширины таблицы. Ширина ячейки рассчитывается в процентном соотношении, но уже по отношению к ширине всей таблицы.
 <<BR>>Естественно ширина остальных столбцов будет исходить из ширины таблицы за вычетом тех столбцов, где ширина указана непосредственно.
 <<BR>>Ширина столбцов, где ширина не будет указана явно также рассчитываются из ширины текста заполняющего ячейки столбцов. Лучше всего записывать "константу ширины столбца" в первой ячейке столбца.
----
__''Пример'' 3.5__:
 . ~+`||<tablewidth="100%" width="50%">абра кадабра||три||`+~
 . ~+`||0||еще одна абра кадабра записанная в данной ячейке||`+~
__''Результат''__:
 ||<tablewidth="100%" width="50%">абра кадабра||три||
 ||0||еще одна абра кадабра записанная в данной ячейке||
----
 ~+К+~ак Вы уже заметили что все "указания" для форматирования таблицы записываются между символами "<...>". Если Вы хотите записать несколько тегов форматирования в одной ячейке, то, как показано в примере 3.5 это выполняется только в одних "скобках".
 <<BR>><<BR>>Рассмотрим теги форматирования текста внутри ячейки:
----
__''Пример'' 3.6__:
 . ~+`||<tablewidth="100%" width="30%" (>слева||<^>сверху||<v>снизу||`+~
 . ~+`||<width="30%" )>справа||`+~
 . ~+`||<width="30%" :>по центру||`+~
__''Результат''__:
 ||<tablewidth="100%" width="30%" (>слева||<rowspan=3 ^>сверху||<rowspan=3 v>снизу||
 ||<width="30%" )>справа||
 ||<width="30%" :>по центру||
----
 ~+Т+~.е. тег <(> - указывает расположение текста слева, <)> - справа, <:> - по центру, <^> - сверху, <v> - снизу (по умолчанию текст всегда расположен по левому краю в середине ячейки). Внутри ячейки также можно использовать любые теги форматирования текста (рассмотренные в первой части) включая разделитель ~+`[[BR]]`+~.
 <<BR>>Но как, Вы спросите, мне удалось объединить ячейки? Чтобы Вас не вводить в заблуждение я в примере убрал некоторые теги __намеренно__. Теперь как раз наступило время рассмотреть их, применив, что мы уже знаем:
----
__''Пример'' 3.7__:
 . ~+`||<tablewidth="60%" colspan=2 :>'''Заголовок таблицы'''||`+~
 . ~+`||<width="5%" rowspan=2>1[[BR]]2||первая ячейка||`+~
 . ~+`||вторая ячейка||`+~
__''Результат''__:
 ||<tablewidth="60%" colspan=2 :>'''Заголовок таблицы'''||
 ||<width="5%" rowspan=2>1<<BR>>2||первая ячейка||
 ||вторая ячейка||
----
 ~+Т+~.е. тег <colspan=x> объединяет ячейки по горизонтали, <rowspan=x> по вертикале, число указывает количество объединяемых ячеек, начиная с той где расположен тег.
 <<BR>><<BR>> {i} Но можно поступить немного по другому - записать так "||||" (без пробела), при этом произойдет автоматическое объединение двух ячеек. В справочнике по Вики показано как объединять две ячейки, но кто сказал, что так нельзя поступить и с большим количеством ;-) Записать текст необходимо в последней объединяемой ячейке. Текст выставляется по умолчанию __по центру ячейки__ (что для меня остается загадкой :\ , но удобно для заголовков). Так, на мой взгляд, будет более наглядно:
----
__''Пример'' 3.8__:
 . ~+`||||||||<tablewidth="50%">'''Заголовок таблицы'''||`+~
 . ~+`||1||2||3||`+~
 . ~+`||4||5||6||`+~
__''Результат''__:
 ||||||||<tablewidth="50%">'''Заголовок таблицы'''||
 ||1||2||3||
 ||4||5||6||
----
 ~+Ч+~тобы Ваши таблицы выглядели еще красивее можно определенные ячейки закрасить цветом. Для этого необходимо использовать тег ~+`<bgcolor="#XXXXXX">`+~
----
__''Пример'' 3.9__:
 .~+`||<bgcolor="#FF0000">красный||<bgcolor="#00FF00">зеленый||<bgcolor="#0000FF">синий||`+~
__''Результат''__:
 ||<bgcolor="#FF0000">красный||<bgcolor="#00FF00">зеленый||<bgcolor="#0000FF">синий||
----
 ~+В+~ теге ~+`<bgcolor="#XXXXXX">`+~ запись #XXXXXX - это цвет в шестнадцатеричной системе счисления в формате RGB (Red-Красный Green-Зеленый Blue-Синий). Цвет может изменяться от 0 до 255 в десятичной системе счисления или от 00 до FF в шестнадцатеричной системе счисления.
 <<BR>>Для простого перевода используйте Калькулятор, в ОС MS Windows (поменяв его Вид->Инженерный). Для того чтобы перевести число выставьте систему счисления Десятичную (Dec, горячая клавиша F6) и наберите число, затем поменяйте систему счисления на Шестнадцатеричную (Hex, горячая клавиша F5).
 <<BR>>Существую еще тег для заливки всей таблицы. Он очень удобен для оттенения всей таблицы по отношению к тексту.
----
__''Пример'' 3.10__:
 .~+`||<tablebgcolor="#FFFFE0">ячейка1||ячейка2||ячейка3||`+~
 .~+`||||||ячейка4||`+~
__''Результат''__:
 ||<tablebgcolor="#FFFFE0">ячейка1||ячейка2||ячейка3||
 ||||||ячейка4||
-----
<<BR>>
 <!> Расскажу Вам по секрету что для меня создание таблиц было сплошной головной болью, пока я не разработал для себя методику, упрощающую эту процедуру. Для того чтобы нарисовать таблицу я сразу подсчитываю необходимое количество столбцов и строк (даже если мне потом объединять некоторые ячейки). На пример, мне необходимо создать таблицу 5х3, я сразу рисую пустые ячейки, разделяя их пробелом (можно даже для собственного удобства нумеровать ячейки):
----
 .~+`|| || || || || ||`+~
 .~+`|| || || || || ||`+~
 .~+`|| || || || || ||`+~
----
 Затем начинаю заполнять, так же при это стараясь не нарушить структуру наглядной таблицы:
----
 .~+`||ячейка1   ||0       ||три||пять||четыре||`+~
 .~+`||триста три||тридцать||4  ||6   ||456   ||`+~
 .~+`||356       ||10 руб. ||12 ||77  ||11    ||`+~
----
 После того как таблица заполнена и отредактирована как Вам необходимо, можно убрать лишние пробелы:
----
 .~+`||ячейка1||0||три||пять||четыре||`+~
 .~+`||триста три||тридцать||4||6||456||`+~
 .~+`||356||10 руб.||12||77 ||11||`+~

 ||ячейка1||0||три||пять||четыре||
 ||триста три||тридцать||4||6||456||
 ||356||10 руб.||12||77 ||11||
----
 Согласитесь что в последнем примере после того как убрали пробелы таблица трудно читаема.

<<Anchor(4)>>
=== 4. Списки ===
   * [[#1|Текст]]
   * [[#2|ВикиИмена и ссылки]]
   * [[#3|Таблицы]]
   * [[#5|Макросы]]

 ~+С+~писки необходимы для улучшения восприятия перечисляемых типов. Они в Вики разделяются на: не нумерованные, нумерованные, буквенные.
 <<BR>>Пример не нумерованных списков:
----
__''Пример'' 4.1__:
 .~+`Купить:`+~
  .~+`. хлеб`+~
  .~+`. молоко`+~
 .~+`Купить:`+~
  .~+`* колбасу`+~
  .~+`* яйца`+~
__''Результат''__:
 Купить:
  . хлеб
  . молоко
 Купить:
  * колбасу
  * яйца
----
 (!) ~+Н+~енумерованные списки выглядят как то скучно, можно немного оживить их:
----
__''Пример'' 4.2__:
 .~+`Купить:`+~
  .~+`. (./) машину`+~
  .~+`. {*} квартиру`+~
  .~+`. {OK} билеты для отпуска`+~
__''Результат''__:
 Купить:
  . (./) машину
  . {*} квартиру
  . {OK} билеты для отпуска
----
 ~+П+~ерейдем к нумерованным спискам. Они могут быть пронумерованы: арабскими цифрами (которыми мы пользуемся в повседневной жизни), римскими цифрами (могут быть прописные и малые). При нумеровании списка можно задать значение, с которого будет начинаться список (естественно значение указывается в начале списка).
----
__''Пример'' 4.3__:
 .~+`Завоевать:`+~
  .~+`1. Понедельник`+~
    .~+`I. доверие близких`+~
    .~+`I. доверие друзей:`+~
    .~+`  ...`+~
     .~+`i.#10 Абрам`+~
     .~+`i. Гавриил`+~
     .~+`i. Евграф`+~
  .~+`2. Вторник`+~
    .~+`I. девушку:`+~
     .~+`* Агнесса`+~
     .~+`* Евгения`+~
     .~+`* Майя`+~
    .~+`I. весь мир`+~
    .~+`I. галактику (перед сном)`+~
__''Результат''__:
 Завоевать:
  1. Понедельник
    I. доверие близких
    I. доверие друзей:
      ...
     i.#10 Абрам
     i. Гавриил
     i. Евграф
  2. Вторник
    I. девушку:
     * Агнесса
     * Евгения
     * Майя
    I. весь мир
    I. галактику (перед сном)
----
 ~+К+~ак видно из примера 4.3 списки могут быть вложенными и объединяться в более сложные структуры.
 <<BR>> /!\ ~+Обязательно соблюдайте количество отступов для правильной нумерации списков.+~
 <<BR>><<BR>> ~+И+~ на последок рассмотрим списки пронумерованные буквами. Они могут быть прописными и малыми (используется только английский алфавит).
----
__''Пример'' 4.4__:
 .~+`Купить:`+~
  .~+`A. хлеб`+~
  .~+`A. молоко`+~
 .~+`Купить:`+~
  .~+`a. колбасу`+~
  .~+`a. яйца`+~
__''Результат''__:
 Купить:
  A. хлеб
  A. молоко
 Купить:
  a. колбасу
  a. яйца
----

<<Anchor(5)>>
=== 5. Макросы ===
   * [[#1|Текст]]
   * [[#2|ВикиИмена и ссылки]]
   * [[#3|Таблицы]]
   * [[#4|Списки]]

 Корректный перевод термина с английского — «макрокоманда», слово же «макрос» получило распространение благодаря использованию в локализованных продуктах американской корпорации Microsoft.
 <<BR>>Рассмотрим пока два макроса, облегчающих жизнь при создании статей в Вики.
 <<BR>>Первый макрос будет очень полезен, если Вы используете заголовки рассмотренные ранее. Вставьте ~+`[[TableOfContents([maxdepth])]]`+~ в начале текста, после строк начинающихся со знака "#" и у Вас появится автоматическое содержание.
 <<BR>>Если Вы, на пример, решили сами создать свое содержание, то Вам поможет второй макрос. С помощью данного макроса можно самим создавать ссылки внутри страницы на интересующий Вас текст.
----
__''Пример'' 5.1__:
 . ~+`[#1 Текст]`+~
 . ***
 . ~+`[[Anchor(1)]]`+~
 . ~+`=== 1. Текст ===`+~
__''Результат''__:
 [[#1|Текст]]
---- 
 Нажмите на ссылку "Текст" в примере 5.1 и Вы переместитесь в раздел 1. Текст.
 <<BR>><<BR>>Формат макроса: 
  . ~+`[#уникальный_идентификатор текст_ссылки]`+~ — сама ссылка  
  . ~+`[[Anchor(уникальный_идентификатор)]]`+~ — то куда Вы переместитесь
 <<BR>>Также можно использовать ссылки на другие страницы. Формат макроса будет практически идентичен:
  . ~+`[:ВикиИмя_страницы#уникальный_идентификатор:текст_ссылки]`+~ — сама ссылка
  . ~+`[[Anchor(уникальный_идентификатор)]]`+~ — то куда Вы переместитесь
