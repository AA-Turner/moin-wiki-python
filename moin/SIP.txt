= sip =

Sip is a tool for quickly writing Python modules that interface with C++ libraries. It's home page is at [http://riverbankcomputing.co.uk/sip/]. It was written by Phil Thompson who is still actively maintaining it.

There isn't much information on the 'net about sip -- see below for some hints on where you can find documentation. Your best bet is to read PyQt and PyKDE and ask Phil Thompson and Jim Bublitz for help.

Sip is used principally to support PyQt and ["PyKDE"]. Without it, it would be near impossible to manage the vast APIs these libraries provide.

Sip can be used to interface with C libraries. A simple wrapper written in C++ is usually necessary, although sip may become more C-friendly in the future. A proof of concept can be found with Jonathan Gardner's sipPQ, a python module that interfaces directly with libpq, which is the C library used to interface with PostgreSQL.

----
''Excerpt from [http://pegasus.rutgers.edu/~elflord/unix/siptute/ Programming With Sip]:''

'''Introduction'''

This is by no means an authoritative discussion about SIP. Rather, it is a chronicle of the adventures and misadventures of a bumbling newbie trying to learn to use a great tool with little documentation. Some references that are essential in conjunction to this include: 

 * PyQt: an implementation of Python bindings for Qt. Reading the Sip files for these classes is instructive.
 * [http://www.controlvideo.de/sip/ Sip documentation]. This is by no means complete, but it is currently the best available 

'''A Note About Versions'''

sip has changed from version to version. I'm using python 2.2 and sip 3.0pre7. Depending on the verion you're using, sip will behave a little differently. The most notable addition to the new version of sip is support for classes that are wrapped inside namespaces. 
-----
