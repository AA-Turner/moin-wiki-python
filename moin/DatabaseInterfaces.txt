[[TableOfContents]]

The contents of this page are being merged into the ChoosingDatabase page.

= Relational database =

Databases based on a relational model, with support for SQL.

== PostgreSQL ==

 * psycopg
  * psycopg1: http://initd.org/projects/psycopg1
  * psycopg2: http://initd.org/projects/psycopg2

 * pyPgSQL: http://pypgsql.sourceforge.net/

 * PyGreSQL: http://www.pygresql.org/

 * PoPy: http://sourceforge.net/projects/popy
  * PoPy and PyGreSQL are [http://www.zope.org/Members/tm/Full_Announce merging]

 * pg/python: http://python.projects.postgresql.org/
  * pg_proboscis: DB-API 2.0 and GreenTrunk Interfaces http://pypi.python.org/pypi?:action=display&name=pg_proboscis
  * pg_pqueue: PQ 3.0 Protocol elements http://pypi.python.org/pypi?:action=display&name=pg_pqueue

 * pgasync: http://jamwt.com/pgasync/
  * Asynchronous and pure Python. Speed comparable to C bindings. Special support for Twisted.

 * bpgsql: http://barryp.org/software/bpgsql/
  * Barebones pure-Python PostgreSQL client

 * ["sipPQ"]

 * mxODBC: http://www.egenix.com/products/python/mxODBC/
  * Supports the [http://www.postgresql.org/ftp/odbc/versions/ PostgreSQL ODBC driver] on both Windows and Unix. 
Note that you have to enable the advanced option "Use bytea for lo" in case you want to work with BLOBs.

== Oracle ==

 * cx_Oracle: http://www.python.net/crew/atuining/cx_Oracle/

 * DCOracle: http://www.zope.org/Products/DCOracle/
  * This is for old Oracle versions (7 and 8).

 * DCOracle2: http://www.zope.org/Members/matt/dco2
  * For Oracle 8i and up.

 * mxODBC: http://www.egenix.com/products/python/mxODBC/
  * Supports the [http://www.oracle.com/technology/tech/oci/instantclient/index.html Oracle Instant Client] which is available for Windows and many popular Unix platforms.

== IBM DB2 ==

 * More info on ["DB2"]

== Sybase ==

 * sybase: http://www.object-craft.com.au/projects/sybase/

 * mxODBC: http://www.egenix.com/products/python/mxODBC/
  * Supports Sybase ASE and Sybase Anywhere.

== MaxDB/SAPDB ==

 * sapdb: http://dev.mysql.com/doc/maxdb/interfaces.html

 * mxODBC: http://www.egenix.com/products/python/mxODBC/
  * MaxDB/SAPDB's native CLI is ODBC compatible and mxODBC can link directly against the CLI libs on Unix. It also supports the ODBC driver on Windows.

== Informix ==

 * InformixDB: http://informixdb.sourceforge.net/

 * mxODBC: http://www.egenix.com/products/python/mxODBC/
  * Note: The Informix ODBC drivers are included in the Informix CSDK.

== Ingres ==

 * ingresdbi: http://www.ingres.com

= Native Python Databases =

== buzhug ==

[http://buzhug.sourceforge.net/ buzhug] is a pure-Python database engine, using a Pythonic, no-SQL syntax.

The data is stored and accessed on disk (it is not an in-memory database). The implementation has been designed to make all operations, and especially selection, as fast as possible with an interpreted language.

A limited benchmark using the same use cases as SQLite's author shows that buzhug is much faster than other pure-Python modules (KirbyBase, gadfly). SQLite, which is implemented in C, is faster, but only less than 3 times on the average.

== SnakeSQL ==

[http://www.pythonweb.org/projects/snakesql/ SnakeSQL] is a pure Python SQL database written to remove the dependence of the Python Web Modules on 3rd party drivers for non-Python databases like MySQL but designed to be a useful database in its own right.
