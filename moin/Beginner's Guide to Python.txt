= Beginner's Guide to Python =

New to programming? Python is free, and easy to learn if you know where to start! This guide will help you to get started quickly.

没玩过编程？ Python语言是免费的，如果你知道从何处开始，它很容易上手！ 本指南将帮助你快速入门。

== New to Python? ==
== 不了解Python？ ==

Read [[BeginnersGuide/Overview]] for a short explanation of what Python is.

先读一下[[BeginnersGuide/Overview]]：关于Python是什么的一个简短介绍。

== Getting Python ==
== 获取Python ==

Next, install the Python interpreter on your computer.

接下来，在你的电脑上安装Python的编译器。

This is the program that reads Python programs and carries out their
instructions; you need it before you can do any Python programming.

它用来读取Python程序并执行其命令：在进行任何Python编程前你都离不开它。

There are currently two major versions of Python available: Python 2 and Python 3. The [[Python2orPython3]] page provides advice on how to decide which one will best suit your needs. At the time of writing (21 Jun 2010), the rest of this page assumes you've decided to use Python 2.

目前Python有两个主要版本：Python 2和Python 3.通过[[Python2orPython3]] 页面提供的建议，你可以决定哪个版本最适合你。在撰写本文时（2010年6月21号），以下内容假设你决定使用Python 2。

See [[BeginnersGuide/Download]] for instructions for downloading the correct version of Python.

查看文章 [[BeginnersGuide/Download]]，按步骤下载正确的Python版本。

At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations.

在某些阶段，你想编辑并保存你的程序代码。看一下 HowToEditPythonCode 以听取一些意见和方法推荐。

== Learning Python ==
== 学习Python ==

Next, read a tutorial and try some simple experiments with your new Python interpreter.

接下来，阅读教程，并尝试用你的新Python编译器做一些简单的练习。

      * If you've never programmed before, see [[BeginnersGuide/NonProgrammers]] for a list of suitable tutorials.
      * 如果你之前没有编程经验，读一下 [[BeginnersGuide/NonProgrammers]， 里面有适合你的教程列表。
      * If you have previous programming experience, consult [[BeginnersGuide/Programmers]], which lists more advanced tutorials.
      * 如果你之前有编程经验，参考 [[BeginnersGuide/Programmers]], 里面列出了更多高级教程。
      * If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's [[http://wiki.python.org/moin/Languages|list of Non-English resources]].
      * 如果英语不是你的母语，阅读翻译好的教程更适合你。参考 python.org's [[http://wiki.python.org/moin/Languages|非英语资源列表]].
Most tutorials assume you know how to run a program on your computer.

绝大部分教程都假设你掌握如何在你的电脑上运行程序。

If you are using Windows and need help with this, see [[http://www.python.org/doc/faq/windows/#how-do-i-run-a-python-program-under-windows|How do I Run a Program Under Windows]].

如果你使用Windows操作系统，可以参考[[http://www.python.org/doc/faq/windows/#how-do-i-run-a-python-program-under-windows|我如何在Windows平台上运行程序]]以获得帮助

Once you've read a tutorial, you can browse through
[[http://docs.python.org|Python's online documentation]].
It includes [[http://docs.python.org/tut/|a tutorial]]
that may be helpful, [[http://docs.python.org//lib/|a Library Reference]] that lists all of the modules that come
standard with Python, and [[http://docs.python.org/ref/|the Language Reference]] for a complete (if rather dry) explanation of Python's syntax.

当你读完教程后，可以浏览[[http://docs.python.org|Python在线文档]]。它包括：有用的[[http://docs.python.org/tut/|a tutorial]]，[[http://docs.python.org//lib/|a Library Reference]]详列了Python的标准库中的模块和[[http://docs.python.org/ref/|the Language Reference]介绍了Python语法的完整解释（有些枯燥）

When you are ready to write your first program you will need a text
editor. To get started you can use any editor you are familiar with - even something like Notepad - but as you gain experience you may want to use a text editor with features that help you write Python programs. See PythonEditors for a list of programs friendly to Python code editing.

在准备写第一个程序前，你需要一个文本编辑器。开始时使用你任何你熟悉的编辑器-即使像Notepad记事本-但当你有经验后，你会想使用带有Python编程辅助功能的文本编辑器。参考 PythonEditors 包含了一个带有友好的Python代码编辑功能的程序列表。

== Need Help? ==
== 需要帮助吗? ==

Need help with any of this? Read [[BeginnersGuide/Help]] for mailing lists and newsgroups.

需要以下帮助吗？阅读 [[BeginnersGuide/Help]]，加入邮件列表和新闻组。

Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles.

绝大多数的Python书会包含本编程语言的介绍：查看 IntroductoryBooks中的建议标题。

Consult [[BeginnersGuide/Examples]] for small
programs and little snippets of code that can help you learn.

参考[[BeginnersGuide/Examples]]，里面的小程序和小代码段会对你的学习有帮助。

Or, if you prefer to learn Python through listening to a lecture, you can attend
a training course or even hire a trainer to come to your company.

或者，如果你喜欢通过听课的方式学习Python，你可以参加培训课或请一位培训人员到你公司上课。

Consult the PythonEvents page to see if any training courses are scheduled in your area, and the PythonTraining page for a list of trainers.

参考 PythonEvents 页面看在当地有无定期的培训课程，在PythonTraining页面有培训人员列表。

Teachers can join the [[http://www.python.org/sigs/edu-sig/|EDU-SIG]], a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university.

老师可以加入 [[http://www.python.org/sigs/edu-sig/|EDU-SIG]]，在该邮件列表中讨论从K-12到大学的各级别中的Python应用。

== Complete list of Beginner's Guide pages ==

<<PageList(BeginnersGuide/)>>

== Quiz and Exercises ==
== 测试和练习 ==
 * Pyschools - [[http://www.pyschools.com|A Collection of Python Quiz and Exercise Questions]]
 * CheckIO - [[http://www.checkio.org|Online learning, testing and improving your python skills]]
 

== Looking for a particular Python module or application? ==
== 如果查看Python模块或程序？ ==

 * The first place to look is the [[http://pypi.python.org/pypi|Python Package Index]].

 * If you can't find anything relevant in the Package Index,
 try [[http://www.python.org/search/|searching python.org]] - you can
 find anything mentioned on the Python site, in the [[http://www.python.org/doc/faq/|FAQs]], or in the
 newsgroup. More info: [[http://www.python.org/search/|where to search]].

 * Next, try [[http://www.google.com|Google]] or other
 search engine of your choice. Searching for "python" and some relevant keywords will usually find something helpful.

 * Finally, you can try posting a query to the comp.lang.python Usenet group.



== Want to contribute? ==

 * Python is a product of the [[http://www.python.org/psf/|Python Software Foundation]], a non-profit organization that holds the copyright. [[http://www.python.org/psf/donations/|Donations to the PSF]] are tax-deductible in the USA, and you can donate via credit card or PayPal.

 * To report a bug in the Python core, use the [[http://bugs.python.org/|Python Bug Tracker]].

 * To contribute a bug fix or other patch to the Python core, read the [[http://www.python.org/dev/|Python Developer's Guide]] for more information about Python's development process.

 * To contribute to the official [[http://www.python.org/doc/|Python documentation]], join the [[http://www.python.org/sigs/doc-sig/|Documentation SIG]], write to docs@python.org, or use the [[http://bugs.python.org/|Issue Tracker]] to contribute a documentation patch.

 * To announce your module or application to the Python community, use [[news:comp.lang.python.announce|comp.lang.python.announce]]. See [[http://www.python.org/community/lists/#comp-lang-python-announce|the guide to Python mailing lists]] for more information.

 * To propose changes to the python core, post your thoughts to [[news:comp.lang.python|comp.lang.python]]. If you have an implementation, follow the [[http://www.python.org/patches/|Python Patch Guidelines]].

----
CategoryDocumentation
r's Guide to Python。
