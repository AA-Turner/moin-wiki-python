## page was renamed from PythonDebuggers
Add your useful tools here -- editors, debuggers and other utils that really help with the process.

<<TableOfContents>>

=== Debuggers ===
||<tablewidth="&quot" tablestyle="&quot; &amp; quot;  &amp; amp;  quot;   &amp; amp;  amp;   quot;    &amp; amp;  amp;   amp;    quot;     &amp; amp;  amp;   amp;    amp;     quot;      &amp; amp;  amp;   amp;    amp;     amp;      quot;       &amp; amp;  amp;   amp;    amp;     amp;      amp;       quot;        100%&amp; amp;  amp;   amp;    amp;     amp;      amp;       amp;        quot&amp; amp;  amp;   amp;    amp;     amp;      amp;       quot;        ;       &amp; amp;  amp;   amp;    amp;     amp;      amp;       amp;       quot&amp; amp;  amp;   amp;    amp;     amp;      amp;       quot&amp; amp;  amp;   amp;    amp;     amp;      quot;       ;      &amp; amp;  amp;   amp;    amp;     amp;      amp;      quot&amp; amp;  amp;   amp;    amp;     amp;      quot&amp; amp;  amp;   amp;    amp;     quot;      ;     &amp; amp;  amp;   amp;    amp;     amp;     quot&amp; amp;  amp;   amp;    amp;     quot&amp; amp;  amp;   amp;    quot;     ;    &amp; amp;  amp;   amp;    amp;    quot&amp; amp;  amp;   amp;    quot&amp; amp;  amp;   quot;    ;   &amp; amp;  amp;   amp;   quot&amp; amp;  amp;   quot&amp; amp;  quot;   ;  &amp; amp;  amp;  quot&amp; amp;  quot&amp; quot;  ; &amp; amp; quot&amp; quot&quot; ;&amp;quot&quot">'''Name''' ||'''Platform''' ||'''   Notes   ''' ||
||[[https://docs.python.org/2/library/pdb.html|pdb]] ||All ||The standard library debugger, part of all Python installations. ||
||[[http://pypi.python.org/pypi/pudb|pudb]] ||Unix,Mac OS X ||A visual, console-based, full-screen debugger, designed as a more comfortable drop-in replacement for pdb. (also supports IPython) ||
||PdbRcIdea ||All ||A .pdbrc for Python's standard debugger, pdb,  which allows you to run arbitrary Python commands on pdb startup. ||
||[[http://sourceforge.net/projects/hapdebugger/|HAP Python Remote Debugger]] ||Windows ||A python IDE with remote debugging capability. ||
||[[http://winpdb.org/|Winpdb and Rpdb2]] ||Unix,Linux,Windows ||An advanced python debugger, with support for smart breakpoints, multiple threads, namespace modification, embedded debugging, encrypted communication and speed of up to 20 times that of pdb. ||
||[[https://pypi.python.org/pypi/rpdb/|rpdb]] ||Unix, Windows,Mac OS X ||(Predecessor of rpdb2 and winpdb) rpdb.py improves pdb's usability and adds support for remote debugging, multiple threads debugging, post mortem of unhandled exceptions, and for debugging of embedded scripts. ||
||[[http://jpydbg.sourceforge.net/|JpyDbg]] ||Mac OS X, OS/2, Unix, VMS and Windows ||Both a CPYTHON and a JPYTHON(JYTHON) debugging framework which has been integrated inside Jedit as a standard jedit pluggin. ||
||[[http://bashdb.sourceforge.net/pydb|pydb]] ||Unix, Windows, OS X ||An expanded version of pdb loosely based on the gdb command set. The debugger supports thread debugging, signal handling, non-interactive tracing, and much more. ||
||[[http://heather.cs.ucdavis.edu/~matloff/xpdb.html|Xpdb]] ||Unix ||pdb extension with '''curses''' module that adds console window with source code. ||
||[[http://sourceforge.net/projects/ddd/|DDD]] ||Unix ||Graphical front-end for command-line debuggers such as GDB, DBX, WDB, Ladebug, JDB, XDB, the Perl debugger, the bash debugger, GNU Make debugger, or the Python debugger. DDD displays data structures as graphs and plots. A deprecated version of pydb comes with this package. For GNU make debugging, use [[http://sourceforge.net/project/showfiles.php?group_id=61395&package_id=65341|ddd-test5]] ||
||[[http://web.archive.org/web/20040331032128/home.t-online.de/home/Ulrich.Herold/pydebug.py|pyDebug]] ||Unix,Windows ||Debugger for Python programs with a graphical user interface. It uses bdb (part of stdlib) but adds a GUI and has some powerful features like object browser, windows for variables, classes, functions, exceptions, stack, conditional breakpoints, etc. ||
||gdb ||*nix ||See DebuggingWithGdb ||
||[[http://pyclewn.sourceforge.net/|Pyclewn]] ||*nix, Windows ||Pyclewn allows you to use [[http://www.vim.org/|Vim]] as a front end to a debugger. Pyclewn currently supports gdb and pdb. ||
||[[http://code.google.com/p/pydbgr|trepan2]], [[http://code.google.com/p/python-trepan|trepan3k]] ||Unix, Windows, Mac OS X ||A rewrite of pydb with closer compliance to gdb . In addition to the  features of pydb, the debugger supports syntax coloring (via pygments),  has extensive on-line help (in rendered [[reStructuredText]]), command completion, a smarter eval, debugger macros written in Python, and more. ||


=== IDEs with Debug Capabilities ===
||[[http://thonny.org|Thonny]] ||Mac OS X, Linux, Windows ||For teaching/learning programming. Focused on program runtime visualization. Provides stepping both in statements and expressions, no-hassle variables view, separate mode for explaining references etc. ||
||[[http://pydev.org|PyDev]] ||Mac OS X, Linux, Windows ||Allows debugging multiple threads in Jython and Python (It is featured as a 'Python IDE' plugin for Eclipse). ||
||[[http://wingware.com/|Wing IDE]] ||Mac OS X, Linux, Windows ||An IDE that can debug multiple threads and multiple processes, including code launched from the IDE or code launched externally, running under CPython and Stackless Python.  The GUI includes a Debug Probe, which is a Python shell running in the context of the paused debug process.  The IDE's debugger also features value watching (by symbolic path, object reference, or a combination), conditional breakpoints, move program counter, debugging of tests running in the integrated unit testing tool, special support for Django, and How-Tos for debugging code running under Flask, web3py, Django, Google App Engine, wxPython, PyQt, Tkinter, Blender, Maya, NUKE, and many other packages. ||
||[[http://activestate.com/komodo/features/|Komodo IDE]] ||Mac OS X, Linux, Windows || ||
||[[http://jetbrains.com/pycharm/features/|PyCharm IDE]] ||Mac OS X, Linux, Windows ||PyCharm's integrated debugger works for Python and Jython, supports debugging of multiple threads, remote debugging, allows debugging Django, Google App Engine applications and unit tests. The debugger features various breakpoints, stepping modes, frames view, watches, evaluate expression tool and a debug console. Conditional and Exception breakpoint types are available for more precise control. Debug console allows executing any Python statements in the context of the process being debugged while stopped at a breakpoint. ||
||[[http://code.google.com/p/pyscripter/|PyScripter]] ||Windows || ||
||[[http://dashingsoft.com/products/pyshield.html|Pyshield]] ||Linux, Windows ||An IDE tool used to edit, debug Python scripts, publish encrypted scripts, build a standalone executable file, and make installation in various forms(.msi, .tar.gz, .rpm, .zip, .tar.bz2).  It includes an editor simulating Emacs python-mode, a GUI debugger simulating GDB, a project view used to manage scripts, modules, extensions, packages and platform specific data files. ||
||[[http://pytools.codeplex.com|Python Tools for Visual Studio]] ||Windows ||Supports Python (any implementation with sufficient sys.settrace capabilities) and IronPython .NET debugging.  Includes MPI cluster debugging, breakpoints, conditional breakpoints, locals, watch, and immediate windows, step into/out/over, break on exception, and break on unhandled exception. ||
||[[https://code.visualstudio.com|Visual Studio Code]] ||Mac OS X, Linux, Windows || Visual Studio Code is a source code editor developed by Microsoft for Windows, Linux and MacOS. It includes support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring. It is free and [[https://github.com/Microsoft/vscode|open-source]], although the official [[https://code.visualstudio.com/download|download]] is under a proprietary license. Supports Python debugging via [[https://code.visualstudio.com/docs/languages/python#_debugging|extensions]]. ||


=== Special-purpose tools ===
||[[http://github.com/darwin/firepython|FirePython]] ||GoogleAppEngine + Firefox ||"FirePython is a python logger console integrated into Firebug (similar to FirePHP)". See http://appengine-cookbook.appspot.com/recipe/firepython-logger-console-inside-firebug/ ||
||[[https://github.com/ionelmc/python-manhole/|manhole]] ||Mac OS X, Linux ||Remote process inspector (using an active component, using a thread or a plain simple signal handler). ||
||[[https://pypi.python.org/pypi/pdb-clone|pdb-clone]] || ||Remote process inspector. Uses GDB to inject code. ||
||[[http://www.aminus.net/wiki/PyConquer|PyConquer]] ||Any ||Trace hook logger which outputs each thread in its own "swimlane" to make multithreaded analysis easier. Can also time calls (naively) and watch variables. ||
||[[https://github.com/albertz/pydbattach|pydbattach]] || ||Remote process inspector. Uses GDB to inject code. ||
||[[http://pypi.python.org/pypi/pyrasite|pyrasite]] ||Mac OS X, Linux ||Library and a set of tools for injecting code into running Python programs to monitor, analyze, introspect, and alter running Python programs easily. Uses GDB to inject code. ||
||[[https://github.com/google/pyringe|pyringe]] || ||Remote process inspector. Uses GDB to inject code. ||
||[[https://github.com/alonho/pystuck|pystuck]] || ||Remote process inspector. Uses GDB to inject code. Uses [[https://github.com/tomerfiliba/rpyc|rpyc]] for communication. ||
||[[http://code.google.com/p/pythontracer/|pythontracer]] || || ||
||[[https://github.com/GrahamDumpleton/wsgi-shell|wsgi-shell]] || ||Remote process inspector (using an active component, a thread). ||
||[[https://github.com/ionelmc/python-hunter|hunter]] || ||A flexible code tracing toolkit. Can print out code and variables, and filter the events. ||
