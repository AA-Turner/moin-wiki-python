
== Bash-like Global Substitution ==

{{{
#!python

globals().update(os.environ)  # Import environment


def replace_w_global_value(mo):
    key = mo.group(0)
    without_dollar = key[1:]
    return str(globals().get(without_dollar, key))


def subs(input):
    """Perform Bash-like substitutions.

    Any "$FOO" in a string will be replaced with the value of FOO.
    If it's not defined, it stays as it was: "$FOO".
    """
    return re.sub('[$][A-Za-z_]+', replace_w_global_value, input)
}}}

= Discussion =

The only question I have is: Is there a way to make all assignments within the module, automatically call {{{os.putenv}}}?

So, intercept assignment with __setattr__ or something, on the module.

I don't know how to get a handle to the current module, though.

-- LionKimbro [[DateTime(2005-12-16T20:37:07Z)]]
