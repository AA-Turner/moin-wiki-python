= Graphical Representations of Data =

   The problem of how to display data in graphs and other visual representations is
   one of the most difficult ones, because of the wide variety of requirements from
   each user. As a result, no one solution has emerged, but many different packages
   are available. There are interfaces to existing plotting libraries, as well as
   Python-centered solutions.

== Image Processing and Analysis ==
    * The [http://www.pythonware.com/downloads.htm#pil PIL Toolkit] provides a very powerful set of tools for manipulating
    images.  [http://www.pythonware.com/library/pil/handbook/index.htm Documentation]

== Plotting Tools ==

     * [http://old.scipy.org/site_content/chaco Chaco] is a device-independent 2D plotting package based on the DisplayPDF API
     being developed for Python by [http://www.enthought.com/ Enthought] with support from the [http://www.stsci.edu/resources/ Space Science Telescope Institute].
     * Konrad Hinsen has some plotting support in his [http://starship.python.net/~hinsen/ScientificPython/ ScientificPython] package, for
     example TkPlotCanvas.
     * Michael Haggerty has [http://monsoon.harvard.edu/~mhagger/download/ a Gnuplot module] which interfaces with [http://www.gnuplot.info the GNUPLOT package].
     * [http://php.iupui.edu/~mmiller3/python/#plotwrap plot_wrap] A
     module by Mike Miller which wraps the functions in
     [http://www.gnu.org/software/plotutils/plotutils.html the GNU plotutils] package.  
     * [http://www.tcltk.com/blt/ BLT] BLT is an
     extension to the tk widgets that can produce X/Y plots and bar
     charts. The BLT package can be used through
     [http://pmw.sourceforge.net/ the Pmw package], a framework for
     the creation of megawidgets built on top of Tkinter.  
     * [http://pyqwt.sourceforge.net/ PyQwt] is a set of Python bindings for the
     Qwt C++ class library which extends the Qt framework with widgets
     for scientific and engineering applications.

== Also of Note ==

     * Janko Hauser maintains a list similar to this one of [http://starship.python.net/crew/jhauser/plot-res.html "Plotting with Python"]
     tools, from which much of the above was stolen (with permission).
     * There is an interface to the OpenGL library called [http://starship.python.net/~da/PyOpenGL/ PyOpenGL] that can be
     used to write sophisticated visualization tools from scratch.
     * The [http://fxpy.sourceforge.net/ FXPy] bindings to [http://www.cfdrc.com/FOX/fox.html the FOX GUI library] support OpenGL, so might be a good
     starting point for new applications.
