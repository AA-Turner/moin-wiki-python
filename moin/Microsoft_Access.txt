#pragma section-numbers off

= Microsoft Access mdb and accdb Database =
  URL::  http://office.microsoft.com/en-us/access/
  Licence:: Commercial/Proprietary software
  Platforms:: Windows

== Pros ==
 * Widely used by end users. 
 * It comes with the GUI tools,and very user friendly.
== Cons ==
 * Windows only.

----

== DB API 2.0 Drivers ==


=== PyPyODBC ï¼ˆPure Python) ===

 URL::
 http://code.google.com/p/pypyodbc

 License:: MIT
 Platforms:: Windows, Linux
 Python versions:: 2.4 - 3.3


PyPyODBC is a pure Python script module providing ODBC interfacing functions, it runs on CPython / IronPython / PyPy , Version 2.4 / 2.5 / 2.6 / 2.7 , Win / Linux , 32 / 64 bit. 

However, '''''on Windows Platform''''', PyPyODBC also provides a set of methods bringing [[https://code.google.com/p/pypyodbc/wiki/pypyodbc_for_access_mdb_file | PyPyODBC's extra support for Access on Windows Platform]]

=== mxODBC ===

  URL:: http://www.egenix.com/
  License:: eGenix.com Commercial License
  Platforms:: Windows, Unix
  Python versions:: 2.4 - 2.7

On Windows, you can use mxODBC with the ODBC driver that comes with MS Access, or use the ODBC driver that comes with the [[http://www.microsoft.com/downloads/details.aspx?familyid=78CAC895-EFC2-4F8E-A9E0-3A1AFBD5922E&displaylang=en|MDAC 2.8 SP1 database access package]], if you don't have MS Access installed on the machine.

On Unix platforms, you can use one of the ODBC drivers available from commercial ODBC vendors. If you only need to query data from MS Access files, you can also have a look at the very limited ODBC driver that comes with the [[http://mdbtools.sourceforge.net/|MDBTools]]. This works reasonably well to extract data from the MS Access files.
