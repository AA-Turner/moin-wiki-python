This page will collect information about the Python Software Foundation, and its committees.

Documents (these will eventually have to be moved elsewhere):

 * PythonSoftwareFoundationLicenseV2Revised -- minor revision of the following, incorporating feedback.

 * PythonSoftwareFoundationLicenseV2 -- Python Software Foundation License Version 2

 * PythonSoftwareFoundationContribAgreements -- Python Software Foundation Contribution Agreement(s)

Older wiki materials can be found here:

 * http://zope.org/Members/lemburg/psc-wiki/FrontPage/view

== Discussion ==

I've always wondered:

How do modules become part of the Python distribution? What kind of process do you follow, what groups do you participate in, to become a part of that?

I've looked around, but haven't found any web pages on the subject.

-- LionKimbro [[DateTime(2004-06-28T21:22:21Z)]]

Answer: The final decision is by BDFL pronouncement, but the usual process is that the module is first written as a stand-alone module, and released. After it's been in use for some time, the author makes the suggestion in comp.lang.python or python-dev (both are used, I'm not sure which is preferred) that it be adopted into the standard distribution. This gets discussed by the usual crowd and usually the answer is obvious long before it ever gets to Guido. Certain modules skip the stand-along stage and are adopted directly into the standard library, but that is usually because the module was written in response to requests, and frequently by an experienced python core developer. If you are interested in getting your module adopted into the core, the #1 question you are sure to be asked is "are you willing to commit to supporting this module for at least the next 5 years?", because unless SOMEONE is willing to volunteer to provide that support the module can't be accepted.

-- MichaelChermside
