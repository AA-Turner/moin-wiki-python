Yapps (Yet Another Python Parser System) is an easy to use parser generator that is written in Python and generates Python code. Yapps is simple, is easy to use, and produces human-readable parsers. It is not fast, powerful, or particularly flexible. Yapps is designed to be used when regular expressions are not enough and other parser systems are too much: situations where you may write your own recursive descent parser.  Yapps 1 is more like a functional language (concise grammars of the form: when you see A B C, return P), while Yapps 2 is more like an imperative language (more verbose grammars of the form: if/while you see X, do Y). Both are completely free.

Something that may be of interest is that Yapps can use a context-sensitive scanner.  If there are tokens num = '\d+' and name = '\w+', then there's an ambiguity -- '123' could match either.  In Yapps, the parser drives the scanner, and can tell the scanner what tokens to look for.  So if there's a context where only names are allowed, then the Yapps scanner would treat '123' as a name.
