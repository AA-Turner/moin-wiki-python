||<tableborder=0> [[Icon(Odi.jpg)]] || Python is a great object-oriented, interpreted, interactive programming language. It is often compared (favorably ;-) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. ||

Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typings. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++. Python is also usable as an extension language for applications that need a programmable interface (more at PythonAdvocacy).

Feel free to add more useful stuff (see HelpContents and HelpOnEditing to learn how), but do us a favour and do tests in the WikiSandBox if you're not accustomed to Wiki technologies. If you're new to wikis, please read WikiWikiWeb. WikiGuidelines contains a few hints on the rules we choose to follow in this wiki.

Starting points:
  * PythonDocumentation - A guide and a discussion page for Python Documentation.
  * PythonSoftware - Software for every purpose, user contributed as well as commercial !
  * PythonCommunity - Community Resources, Conferences, other wikis, ...
  * PythonServices - Commercial Products and Services, Python at play!
  * PythonAdvocacy -  Python Advocacy Community, Executive Summary, Advocacy Howto
  * UsefulCode - Contributions that are not their own projects but still useful
  * CategoryJython - Resource Pointers, Stories, and Help on Jython
  * GoogleTips -  How to find stuff on the Python websites without trouble

Experienced Python programmers may be interested in HiddenJewels - Python capabilities of general interest that people don't know about, even long-time Python programmers...

