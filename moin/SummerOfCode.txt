These are the [http://code.google.com/soc/ Google "Summer of Code"] projects involving Python and mentored by the Python Software Foundation.

For information on the accepted projects for 2005, see ["SummerOfCode/2005"].

= How to apply as a mentor =

[http://code.google.com/soc/mentor_step1.html "Apply through Google's online form."]

 * [http://code.google.com/soc/mentorfaq.html Mentor FAQ]

= How to submit a proposal =

 * [http://code.google.com/soc/studentfaq.html Student FAQ]

= Proposal ideas =

The following ideas are just suggestions.  You're free to invent your own ideas, or to use their suggestions as starting points.

 * Some ideas to help get you started: look at the SimpleTodo and CodingProjectIdeas pages.  [http://www.python.org/dev/peps/pep-0042/ PEP 42] also lists feature ideas.
 * Revive restricted Python -- inspired by a recent thread on the py3k list.
 * Create a bunch of modules like what Squeak has for 3D modeling,
 events etc. (the exact list may be somewhat different, I haven't
 researched this in any depth). This is inspired by a recommendation
 from Alan Kay made at the Shuttleworth workshop.
 * Add a web-based admin interface and/or user-oriented views to [http://www.third-bit.com/drproject DrProject], a lightweight project management portal intended for use in software engineering courses.
 * Help improve the www.python.org web site production system (pyramid) and write documentation to prepare it for open source release.
 * Since Django is now a separate sponsor, maybe some work can be done on turbogears or on its components (sqlobject, cherrypy, kid)?
 * Help move www.python.org towards dynamic content generation techniques.
 * Improve Buildbot for python use and/or in general.
 * Add regular code-coverage (both C and Python) to the build system (maybe even to Buildbot?)
 * The PyPy project has lots of SoC sized tasks.  Ask on the pypy-dev mailing list.
 * Improve Jython
 * Write a new and useful application in Python.
 * Improve an existing Python application (e.g. Mailman, BitTorrent, Zope).  Some Python-based projects are SoC mentoring organizations in their own right, so you might end up being mentored by them, not the PSF.
 * Write an IPC or RPC package to allow for concurrent Python execution.
 * Work on unit test suite.  This includes not only developing support code (such as decorators to flag tests that are implementation-specific, known to fail, etc.), but also to have more code coverage in the unit tests.

= Related sponsors =

Those interested in working in [http://www.djangoproject.com Django] may do so [http://code.djangoproject.com/wiki/SummerOfCode2006 under the auspices of the Django group].

= Accepted proposals =

Note: if a project is listed as having two mentors, the first mentor listed is the ''primary'' mentor, and the second one is the ''back-up'' mentor.

 * None yet.
