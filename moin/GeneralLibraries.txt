''' Basic and General Resources '''

 * CmdModule - tool for creating command line oriented user interface
 * VenomPackage - nonspecific functions useful for any project, with extensive docs and unit tests.

''' Visualization, Graphics and Games Stuff '''

 * [[http://mayavi.sourceforge.net/|MayaVi]] A library and application for scientific visualization based on VTK.
 * [[http://vpython.org|VPython]] - 3D programming for ordinary mortals
 * [[http://www.alcyone.com/pyos/chess|Chess]] - a chess adjudicator module
 * [[http://home.gna.org/oomadness/en/soya/|Soya]] - A high level 3d engine written mostly in pyrex
 * [[http://spineless.sourceforge.net/|spineless]] - Another high level 3d enginge but "Focus is on flexibility, clean design and ease of use, not pure speed."
 * [[http://togra.sourceforge.net/|togra]] - Another 3D high level 3D engine.
 * [[http://panda3d.org|Panda3D]] - 3D engine with short learning curve, rapid development.

''' Web, Security and Cryptography '''

 * [[http://www.freenet.org.nz/python/SSLCrypto/|SSLCrypto]] - package for adding encryption to Python programs.
 * [[http://undertow.ussg.indiana.edu/~samyron/pycbc.html|PyCBC]] - A CBC module for python (comes with PyBlowfish). This module is compatible with Perl's Crypt::CBC module.
 * [[http://www.amk.ca/python/code/crypto|PyCrypto]] - A collection of cryptographic algorithms and protocols.
 * ''Any good pointers to client-side web prog resources, anybody?''
   * Grail: but where can I find it? --[[lwickjr]]

''' Data compression '''

 * [[http://www.joachim-bauch.de/projects/python/pylzma/|PyLZMA]] - Python bindings for the LZMA compression algorithm.

''' Documenting  '''

 * [[http://epydoc.sourceforge.net|epydoc]] - API documentation generator for Python modules

''' Language Processing and Parsing '''

 * [[http://www.lemburg.com/files/python/mxTextTools.html|mxTextTools]] - a fast text manipulation toolkit for Python
 * [[http://simpleparse.sourceforge.net|SimpleParse]] - a parser generator for mxText``Tools v2.0.0
 * [[http://systems.cs.uchicago.edu/ply/ply.html|PLY]] - the '''lex''' and '''yacc''' compiler construction tools implemented in plain Python
 * [[http://pages.cpsc.ucalgary.ca/~aycock/spark|SPARK]] - '''S'''canning, '''Pa'''rsing and '''R'''ewriting '''K'''it
 * [[http://nltk.sourceforge.net|NLTK]] - Natural Language Tool``Kit
 * [[http://gnunet.org/libextractor/|libextractor]] - meta-data extraction library with Python binding

 See LanguageParsing  for more tools.
