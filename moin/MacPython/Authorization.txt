#pragma section-numbers off
= Authorization =
 Authorization is a Python wrapper for Apple's Authorization API.  Basically, it allows you to spawn arbitrary processes as root after successfully authenticating as an administrator.  This is useful for installers, twiddling kernel settings (via sysctl or the like), etc. 

= status =

Authorization is currently at its first public release, 0.1.

= examples =

{{{
#!python
import os, sys, struct, tempfile
from Authorization import Authorization, kAuthorizationFlagDestroyRights

AUTHORIZEDTOOL = "#!%s\n%s" % (sys.executable,
r"""
import os
print os.getuid(), os.geteuid()
os.setuid(0)
print "I'm root!"
""")

def main():
    auth = Authorization(destroyflags=(kAuthorizationFlagDestroyRights,))
    fd, name = tempfile.mkstemp('.py')
    os.write(fd, AUTHORIZEDTOOL)
    os.close(fd)
    os.chmod(name, 0700)
    try:
        pipe = auth.executeWithPrivileges(name)
        sys.stdout.write(pipe.read())
        pipe.close()
    finally:
        os.unlink(name)

if __name__=='__main__':
    main()
}}}


== Leopard ==

This will not compile directly on Leopard.  You will need to change line 14 of Authorization.pxi from "raise" to "raise _err"


= homepage =
