The key concept identified so far is '''Python is an Agile Programming Language'''.

We need to refine and target this message.

The next step is to craft two different messages, one for programmers and one for non-programmers.  We need to identify the areas of pain that Python eliminates through its agility.

For programmers, the pain will have to do with the inflexibility and tediousness of their current language, or lack of cross-platform support, or lack of an interactive mode, etc.  For non-programmers we need to identify other areas of pain, such as missing schedules because it takes too long to write the code, systems that are costly or difficult to maintain because nobody can comprehend the code, new
programmers taking too long to get up-to-speed and productive, development teams that are out of touch with the needs of the business, etc.

Nobody changes their behavior unless they have a big enough pain to motivate them, and a big enough potential reward to justify the transition costs (in terms of time, effort, short-term loss of productivity, etc.)
