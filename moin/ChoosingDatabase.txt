= Choosing a Database System =

This page should help in choosing the right database system.

== Relational Database Systems ==

Database systems employing a relational model, with support for SQL.

  * IBM ["DB2"]
  * ["Firebird"] (and Interbase)
  * ["Informix"]
  * ["Ingres"]
  * ["MySQL"]
  * ["Oracle"]
  * ["PostgreSQL"]
  * ["SAP DB"] (renamed to MaxDB)
  * Microsoft ["SQL Server"]
  * ["Sybase"]

The following database systems are more oriented towards embedded applications:

  * GadFly
  * ["SQLite"]
  * ["ThinkSQL"]

To add new entries (choose DatabaseTemplate when creating the page).

== Database Interfaces and APIs ==

  * Most databases have ODBC support; see the section below on ODBC modules.
  * Java databases usually support JDBC, and can be used from Jython.
  * See also DbApiModuleComparison

== ODBC Support ==

 * pyodbc: http://pyodbc.sourceforge.net

 * mxODBC: http://www.egenix.com/products/python/mxODBC : A commercial library that provides ODBC connectivity on Windows, Mac OS X, FreeBSD and most other Unix platforms.

 * ODBTPAPI: http://benjiyork.com/odbtp.html

== ADO Support ==

 * adodbapi (http://adodbapi.sourceforge.net/):  A Python module that makes it easy to use Microsoft ADO for connecting to databases and other data sources. 

== Non-Relational Databases ==

  * MetaKit
  * ["ZODB"]
  * ["BerkeleyDB"]
  * ["KirbyBase"]
  * ["Durus"]
  * ["atop"]
  * ["buzhug"]
