Comparing Python to various other languages[[http://pandawaindonesia.blogspot.com/2010/10/mobil-keluarga-ideal-terbaik-indonesia_17.html|:]]

Full Treatments:
 * PythonVsHaskell
 * PythonVsNice
 * PythonVsRuby
 * PythonVsPhp

External Articles:
 * Multiple Languages:
   * ''[[http://rosettacode.org/wiki/Main_Page|Rosetta Code]]'' is a [[http://en.wikipedia.org/wiki/Programming_chrestomathy|programming chrestomathy]] site. The idea is to present solutions to the same task in as many different languages as possible, to demonstrate how languages are similar and different, and to aid a person with a grounding in one approach to a problem in learning another. Rosetta Code currently has hundreds of tasks, and covers over 150 languages, though we do not have solutions to every task in every language, Python is very well represented. 
   * ''Several in 2006'', David Howard's ''[[http://www.dmh2000.com/cjpr/|C++ vs Java vs Python vs Ruby]]''.  This essay provides implementations of moderately simple algorithms, like Red-Black Trees in various languages.  The essay compares language features and renders fair verdicts.  It has a handy feature to scroll through the various implementations side by side.  A good, quick read.
   * ''Several in 2002'': GlyphLefkowitz wrote, and MikeConnell updated some ''very simple'' [[http://www.flat222.org/mac/bench/|performance benchmarks]]. This is no longer being updated.
   * [[http://twistedmatrix.com/users/glyph/rant/python-vs-java.html|Comparing Python to Java]] A subjective analysis of two high-level, object-oriented languages  - Comparing Python to Java
 
   * 2001:  "[[http://www.itworld.com/AppDev/4061/swol-0202-regex/|Which language is right for you?]]"
   * ''Several in 2000'': [[http://www.ipd.uka.de/~prechelt/Biblio/|Lutz Prechelt]]'s article ''[[http://page.mi.fu-berlin.de/~prechelt/Biblio/jccpprt_computer2000.pdf|An Empirical Comparison of C, C++, Java, Perl, Python, Rexx, and Tcl for a Search/String-Processing Program]] (pdf)'' is a little old, but it is REAL RESEARCH, comparing productivity and program performance for 80 different implementations of the same requirements, in seven languages.
   * ''Several in 1997'': Guido's essay ''[[http://www.python.org/doc/essays/comparisons.html|Comparing Python to Other Languages]]'' is an essay comparison of Python to Java, JavaScript, Perl, Tcl, SmallTalk, C++, CommonLisp, and Scheme.
   * erratically updated:  "[[http://phaseit.net/claird/comp.lang.misc/language_comparisons.html#scripting|Bilateral comparisons of scripting languages]]"
   * '''Important:'''  [[http://dfwpython.org/uploads/Forrester/forrester-survey.txt|this reply]] to Forrester Research's 2007 Survey on Dynamic Languages

   * The [[http://pleac.sourceforge.net/|PLEAC - Programming Language Examples Alike Cookbook.]]  This project aims to gather fans of programming, in order to implement the solutions  to the programming problems from the Perl Cookbook in other programming languages. 

   * [[http://merd.sourceforge.net/pixel/language-study/syntax-across-languages.html|"Syntax across languages."]]  A detailed comparison of syntax in different programming languages. 

 * Perl
   * ''Perl in 2000'': Eric Raymond's essay ''[[http://www.linuxjournal.com/article.php?sid=3882|Why Python]]'' describes how he discovered Python, how it compares to Perl, and why he was impressed.
   * ''Perl in 1999'': The humorous ''[[http://www.python.org/doc/humor/#python-vs-perl-according-to-yoda|Python vs. Perl according to Yoda]]''.

 * Lisp
   * ''Lisp'': Peter Norvig wrote ''[[http://www.norvig.com/python-lisp.html|Python for Lisp Programmers]]'' which includes a feature-by-feature comparison.
   * ''Lisp in 1999'': There is a pretty terrible comparison of Python and Lisp (in the sense of being uninformed about Lisp) at http://www.strout.net/python/pythonvslisp.html.  The only reason for mentioning it is to say, yes, it's old and inaccurate, and not to take it too seriously (you can seach comp.lang.lisp for more specific refutations if you really want).

 * Tcl
   * ''Tcl in 1998'': Frank Stajano's paper, ''[[http://www.python.org/workshops/1998-11/proceedings/papers/stajano/stajano.html|Implementing the SMS server, or why I switched from Tcl to Python]]'', was presented at the [[http://www.python.org/workshops/1998-11/proceedings.html|Seventh International Python Conference]] (in 1998). (Also available in [[http://www.python.org/workshops/1998-11/proceedings/papers/stajano/stajano.pdf|PDF]].)

 * Java
   * 2007:  here's a frequent dialogue:  Pythoneer:  "My Python source is a tenth the size of my Java programs"; Javaite:  "No way!  ''Maybe'' you gain 30%, but they're kind of the same language, right?"; and so on.  [[http://paulbuchheit.blogspot.com/2007/05/amazingly-bad-apis.html|This brief note]] by Paul Buchheit gives a little more depth to the discussion.  His point:  Java APIs are often terrible.
   * ''Java'': Stephen Ferg's ''[[http://techiesabode.com/article/read_article_w.php?article_id=13|Python & Java: a Side-by-Side Comparison]]'' looks at programmer productivity. (''[[http://www.ferg.org/projects/python_java_side-by-side.html|Alternate Version]]'' of the same article. )
   *''[[http://www.archive.org/details/SeanKellyRecoveryfromAddiction|Recovery from Addiction]] by Sean Kelly, Screencast'' A dont-take-it-too-serious Comparison of Python and Java.

... please add more!

See also StrongVsWeakTyping.
----
CategoryAdvocacy CategoryAdvocacy
