##language:en

## A quick note to anyone creating a homepage:

## Please only do so if you're providing or promoting Python-related
## content or if you have signed your name on another page (and want
## others to be able to contact you). Pages which are not referenced
## by other pages or which do not provide significant new content will
## be deleted.

== Erik Johnson ==

I am a member of the Albuquerque Python Meetup: http://wiki.python.org/AbqPython/ http://www.meetup.com/AbqPython/

My email: Spam is largely out of control on the internet. Sometimes I check
email at HedgesFan at G mail dot com. If you want my regular email address
that is checked almost daily, ask me for it.

== Python Ramblings ==

I am currently doing a course on Coursera titled [[https://class.coursera.org/interactivepython1-003 | An introduction to Interactive Programming In Python]]. (The link is to the actual instance of the class I am in - you may need to go in through the Coursera front page and search class listings to get to the next offering of the class.)

I don't really expect to learn a lot about the Python language itself, but some neat things are starting to happen with programming languages in general. In this case, they are using a [[http://www.codeskulptor.org/ | wholly in-browser environment]] to run Python. It's not quite the same Python, but almost (one shortcoming I noticed is iteritems() on dict is missing.) This is based on http://www.skulpt.org/

== Programming Contest Sites ==
  * [[http://www.pythonchallenge.com/ | The Python Challenge]]
  * Sphere Online Judge (SPOJ) http://www.spoj.com
  * !CodeEval http://codeeval.com
  * !CodinGame http://codingame.com
  * !ProjectEuler http://projecteuler.net

== Other Programming-Related Sites ==
  * !CodingGround http://www.tutorialspoint.com/codingground.htm In-browser console windows to code simple things in many different languages.
  * !PythonAnywhere https://www.pythonanywhere.com/ Hosted python you access via an in-browser console window.
  * Skulpt.org  http://www.skulpt.org/
  * !CodeSkulptor [[http://www.codeskulptor.org/ | www.codeskulptor.org]] Coursera & Rice University's wholly in-browser Python dev environment (based on Skulpt)  


== Vim stuff ==

Significant whitespace (i.e., indentation) is one of the biggest complaints I hear about Python.
I have to admit I was not a big of it at first, and had some issues with spaces and tabs getting
mixed up and causing my program ot not run correctly. I have since come to see Python's significant
white space as one of its best features. Python executes just like it looks, and
looks just like it executes! '''They've been defined to be the same thing!''' Code reads just like it
looks, because you can't be lazy and not indent your code properly - its required to achieve the
correct behavior. IMHO: it is '''''not a design flaw''''': it was a wise design decision.

Using this `.vimrc` (or `_vimrc` on Windows), I've hardly thought about this whitespace issue for about a decade:

{{{
set tabstop:4
set shiftwidth:4
set et
set autoindent
set wrap
set textwidth=72
syn on
}}}

Some other vim tricks/settings I don't want to lose track of:

  * `cd %:p:h`  Make it so you can edit files in cwd w/ `:e filename`
  * `/pattern\c`  Case insensitve search (see also `:set smartcase`  http://stackoverflow.com/questions/2287440/how-to-do-case-insensitive-search-in-vim
  * http://vim.wikia.com/wiki/Count_number_of_matches_of_a_pattern

----
CategoryHomepage
