#pragma section-numbers off 

= String Formatting =

The [http://docs.python.org/lib/typesseq-strings.html section of the manual on String Formatting Operations] is hidden in the section on [http://docs.python.org/lib/typesseq.html Sequence types.]

== Direct Variable Reference ==

A common trick you can use when writing strings is to refer directly to variables.

{{{
#!python
a = "hello, world!"
x = 34
y = 96

print """
a = %(a)s
x,y = (%(x)s,%(y)s)
""" % vars() # local variables
}}}

If you want to refer to global variables, you can replace {{{vars()}}} with {{{globals()}}}.

== Printing Percentages ==

{{{
#!python
percent = lambda x:"%2.2f%%" % x

print percent(35.3567) # prints "35.35%"
}}}

== Print strings without newlines and spaces ==

You may find it tricky to print out a feed of numbers (as output from within a loop) on one line, without being separated by a space.  An example could be output such as
{{{
Processing...
[1][2][3][4][5][6]
Completed.
}}}

The standard print statement automatically inserts newlines.  This can be overcome with
{{{
for i in range(10):
    print '['+str(i)+']',  # NOTE the trialing comma
}}}
but a space will get inserted between successive prints.  The way to get around this is using sys.stdout:
{{{
import sys
for i in range(10):
    sys.stdout.write('['+str(i)+'[')
}}}
which will work properly.


== See Also ==

EscapingHtml, WorkingWithTime

= Discussion =

(None yet!)
