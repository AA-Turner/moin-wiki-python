The following goals were included in the sprint announcement. Please use this area as a staging point to indicate interest in specific goals and discuss possible approaches, recruit support for half-baked ideas and so on. This is a '''''Wiki''''', people! Create new pages at will.

'''CPython'''
 * Implement attribute lookup PEPs (and other intrepreter speedups)
 * Implement faster floating point ops
 * Implement portions of decimal module in C
 * Struct module improvements (e.g. struct.compile, struct.finditer)
 * Create a string variant that provides lazy slicing without copying
 * Allow selective removal of unused features (e.g. profiling support)
 * Faster parsing of strings and bytes into int, long, etc.
 * Buffer for use with network i/o
 * More collections (ordered dictionary, red/black tree, pivot tables,   skip lists, etc.)
 * Create a 64 bit PyInt type
 * Optimize str object methods
 * Improve timeit.py API

'''Twisted'''
 * Speed improvements to select and poll reactors
 * Reactor based on /dev/epoll
 * Better integration with psyco
 * Improvements against twisted benchmark

'''Psyco'''
 * Support for generator expressions
 * Support for nested scopes
 * Support for more dictionary operations
 * Speedup float arithmetic
 * Support for more built-ins (e.g. int(), long(), float(), etc.)
 * Upgrade for python 2.5
 * Better tools for profiling psyco-ness of application
 * Investigate usefulness of IVM (with aim to producing a more streamlined dispatch loop)
 * LLVM backend
 * Virtualised longs (for long longs)
 * Virtualised slots (Ability to cache __getattribute__() values)

'''PyPy'''
 * JIT compiler
 * LLVM backend
 * RPython extension modules for CPython

'''Other'''
 * Implement improvements in the Python Package Index
