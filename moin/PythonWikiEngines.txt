= List =

Here is a list of known Python-based Wiki:WikiEngines.

	* Wiki:CMFWiki -- a ZwiKi variant; old but compatible with Zope's CMF (Content Management Framework).
	* Wiki:CyberPublishing -- a wiki-based web publishing framework written in Python; GPL
	* MoinMoin -- A PythonLanguage SourceForge project, based on Wiki:PikiPiki (VNIHF)
	* Wiki:PyWiki -- Python-based, uses RCS, GPL license
	* Wiki:PikiPiki -- Python-based, will run completely standalone
	* Wiki:PikiePikie -- Python-based, lets you put a Wiki:WebLog on any page (based on Wiki:PikiPiki)
	* Wiki:PyleWiki -- Python-based, optional CVS backend, Unix-like rwxrwxrwx permissions on pages
	* Wiki:WikiForNow -- a Wiki:ZwiKi variant; used at zope.org
	* Wiki:WikiNehesa -- Many features, including images, headerbars, TEXT centering, image inventory/previewer, image uploader. Modular. $FREE$. GNU GPL.
	* Wiki:WyPy -- a Wiki:ShortestWikiContest contender, 23 lines
	* Wiki:ZwiKi -- Wiki:ZoPe-based, powerful, GPL.

= Comparison of Features =

||Existing or Desired Features||MoinMoin||Wiki:PikiePikie||Wiki:Zwiki||''add others here''||
||Cache Pages for Faster Loading?||not yet|| || || ||
||Page storage||flat files|| ||ZoDb|| ||
||Support for Blogs ([http://ourpla.net/cgi/pikie?WikiWeblogs WikiLogs])||[http://www.seapig.org/BlogEditCode partially]||yes||[http://webseitz.fluxent.com/wiki/ZwikiCustomizations possible]|| ||
||Page Permissions||CVS version: yes|| ||yes||
||Templating/Page Skins/CSS support||no||yes||yes|| ||
||Link icons, colorblind-friendly||yes|| || || ||
||Supports HTML tags||no|| ||yes || ||
||export RSS||recentchanges only|| || || ||
||import/display RSS||no|| || || ||
||''add feature here''|| || || || ||

Comment: "Support HTML tags" is more of an anti-feature in wiki.

= Comments, Ratings, Reviews, Wishlists =

Elements for building a full-featured wiki engine:
 * ''Page templating system like [http://smarty.php.net/ Smarty].''  Possible options include [http://www.alcyone.com/pyos/empy/ EmPy] or others listed in the [http://www.python.org/cgi-bin/moinmoin/WebProgramming#head-9d0636d6da8e88f8f09de1454c5961b44183b04d templating section] of the WebProgramming page.  Which one would you recommend?
 * ''Cache HTML versions of pages for faster loading.''  Ideally the page templating tool would handle caching.
  * in a really dynamic context like wiki, you can't simply cache the HTML. 
 * ''User Authentication.''  A user authentication system perhaps integrated with MySQL or possibly even LDAP.  Allow for different user groups and permission levels.  Any recommendations?
  * Moin has user / password auth in CVS. Groups and page ACLs also.
 * ''Database Integration.''  Can store data in mysql, postgresql, etc. or work without a database.
  * that is more of an anti-feature, see the next 2 points.
 * ''Easy Install.''  Works completely in Python, and installs in one folder location.  Doesn't necessarily require a database or mod_python.  Doesn't require root privileges for install.
 * ''Small but Scalable.'' Doesn't require a huge server to run.

See the [http://colorstudy.com/docs/shootout.html Web Framework shootout] where different Python WebProgramming frameworks are used to implement a bare bones wiki.
