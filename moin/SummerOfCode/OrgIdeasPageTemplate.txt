There are not very many strict requirements for Google Summer of Code Ideas pages, but there are some things that students often ask us for.  This page is intended as a starting template for organizations so you don't forget those things.

Warning: In 2014, many orgs got rejected because their ideas pages were offline when google checked.  '''Make sure your ideas page is hosted somewhere that Google's Open Source Programs Office will be able to access when they check!'''



= About MyOrg =
Tell the students a bit about your organization.  Here's some questions you might want to answer:
 * What software are you creating? 
 * Why is it interesting? 
 * Who uses it?  
 * What languages is it written in? 
 * How is it going to change the world?

== Contacting MyOrg ==
 * '''IRC channel''':
 * '''Mailing list(s)''':

Include any special instructions/info about communicating:  e.g. what time zones are your mentors in? do you prefer it if gsoc students introduce themselves first or just dive in?  are there any common mistakes students make when making a first impression?

== Getting Started ==
Links to setup instructions go here.  Some suggested things to answer: 
 * Where is the link to a setup guide for new developers?
 * Are there any unusual libraries/applications that need to be installed first?
 * What type of source control do you use?  (include links to help and setup guides!)
 * What's the process for submitting your first bug fix?
 * Where should students look to find easy bugs to try out?

== Writing your application ==
Links to advice about applications and the application template goes here.


= Project Ideas =

You should usually have a couple of project ideas, ranging in difficulty from beginner to expert.   Please do try to have at least one, preferably several beginner tasks: GSoC gets a lot of students with minimal open source experience who feel very discouraged (and sometimes even complain to google) if orgs don't any have projects at their level.

== 1. Project name ==
 * '''Project description''':  Make sure you have a high-level description that any student can understand, as well as deeper details
 * '''Skills''': programming languages? specific domain knowledge?   
 * '''Difficulty level''': Easy/Intermediate/Hard classification (students ask for this info frequently to help them narrow down their choices.  Difficulty levels are something google wants to see, so they aren't optional; make your best guess.)
 * '''Related Readings/Links''':  was there a mailing list discussion about this topic?  standards you want the students to read first?  bugs/feature requests?  
 * '''Potential mentors''': A list of mentors likely to be involved with this project, so students know who to look for on IRC/mailing lists if they have questions.  (If you've had trouble with students overwhelming specific mentors, feel free to re-iterate here if students should contact the mailing list to reach all mentors.)

== 2. Project name ==
 * As above.  etc.  Unless there's a compelling reason to sort in some other order, ideas should be ordered approximately from easiest to hardest.
