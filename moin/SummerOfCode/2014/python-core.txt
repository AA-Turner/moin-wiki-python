= Project ideas for Python Core in GSoC 2014 =

Students interested in "Python Core" projects will be working on the [[http://en.wikipedia.org/wiki/CPython|CPython]] Python language interpreter and related core packages.  

== Getting in touch with mentors ==

There are two important lists for students interested in Core Python development:

 * [[https://mail.python.org/mailman/listinfo/python-dev||python-dev]] is the main development list for python.
 * [[https://mail.python.org/mailman/listinfo/core-mentorship||core-mentorship]] is the introductory list for people just getting started in Python development, and as such is usually the place for new students to start communicating with mentors and getting their environment set up.  

Students should subscribe to and read both lists, but should use the core-mentorship list to post questions and get started.  

== Projects ==

=== Email ===

==== Possible email projects ====

    1.1 Add header-type-specific parsing for additional header types (Received, Message-Id, References) to the new 3.3 provisional policies.

    1.2 Work on support for [[http://tools.ietf.org/html/rfc6532|RFC 6532]] in the email package.

    1.3 Work on support for [[http://tools.ietf.org/html/rfc6531|RFC 6531]] in smtplib and/or smtpd.

=== IDLE ===

Don't spend your summer IDLE around the swimming pool spend your summer working on IDLE and make a difference.  IDLE is Python's Integrated Development Environment (IDE) that is shipped with each Python release.

Since IDLE ships with Python it is often the first IDE a new Python programmer uses.  We want to make IDLE an awesome experience especially for people that are learning Python.  IDLE should remain a simple and clean interface based on tkinter like it always has been.  This effort is not a radical departure from what already exists but seeks to build a test framework for IDLE, test patches in the issue tracker, and document IDLE.  Recently the Python community has accepted PEP-434 (http://www.python.org/dev/peps/pep-0434/) which is a Python Enhancement Proposal that is designed to allow enhancement exceptions for all Python branches.  This would allow students working on this project to actually see their hard work get shipped in the next official version of Python.

==== Possible IDLE projects ====

  * Create a unit test framework for IDLE see http://bugs.python.org/issue15392.  One of the major problems with IDLE is the lack of unit tests. tkinter has unit tests and could be the basis of a unit test framework for IDLE.  The unit test frame work needs to support the build bots and help developers quickly test new patches from the issue tracker.  Currently each new patch has to be hand tested which can consume time.  The lack of a unit test framework hinders IDLE development and is one of the primary reasons why patches don't get committed to the Python source tree.

  * Create an IDLE extension that would integrate PEP8 (Syntax Style Checker) https://pypi.python.org/pypi/pep8 into the IDLE editor window.  Many modern IDE's have not only syntax highlighting but on the fly syntax checking. 

  * Similar to above but create an IDLE extension that would integrate PyFlakes (passive checker of Python programs) https://pypi.python.org/pypi/pyflakes/0.6.1 into the IDLE editor window.  Many modern IDE's have not only syntax highlighting but on the fly error checking.
