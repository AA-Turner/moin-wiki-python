#pragma section-numbers off

= Implementations of the Web Server Gateway Interface =

Note: many of these implementations may be partial/incomplete or noncompliant as of the current draft spec.  If you can't get the code samples in the spec to work with one of these implementations, there's a good chance that the implementation is broken: contact the implementation's author.

== Web Server implementations ==

 * [http://mail.python.org/pipermail/web-sig/2004-October/000956.html wsgiref] - a library of base classes covering most of the "hard parts" of a WSGI server implementation, written by the PEP author.  It also includes utility functions and classes that may be useful for application/framework implementors, and should be considered a "must read" for server implementors.  (Update: most of the limitations mentioned in the linked post have now been resolved; wsgiref now includes sensible default error handling and logging, automatic calculation of Content-Length when possible, and greater test coverage.)

 * [http://www.xhaus.com/modjy modjy] - a WSGI implementation for Jython

 * see Jonpy below

== Web Framework implementations ==

 * [http://mail.python.org/pipermail/web-sig/2004-October/000929.html WSGI for Webware] (work in progress)

 * [http://st0rm.hopto.org/wsgi/ Jonpy] - this also includes a HTTP server with a WSGI backend

 * Nevow -  in a branch of its Subversion repository.  (Can someone supply a link to this?)
