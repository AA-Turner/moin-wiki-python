Moved from the educational wikis at http://coedit.net/ to here:

== Common Problems Beginners Have ==

 * The [http://www.alice.org/ Alice] 3D project developed a 3D programming environment for beginners.  They used ["Python"] as the programming language originally (now switched to something else).  There were two Python-specific issues that were problematic for beginners: the case-sensitivity of the language ("variable1" is not the same as "Variable1"), and integer division (a carryover from C, 3/4 = 0, not 0.75 because 0 is an integer and 0.75 is a float).  The latter issue has been fixed, but the former has not and very likely never will.  See this [http://www.linuxjournal.com/article.php?sid=5028 interview] in Linux Journal and this [http://www.alice.org/advancedtutorial/ConwayDissertation.PDF dissertation] for more details.
  * I have patches to implement both of these features in the [http://boo.codehaus.org/ Boo] programming language, which is virtually identical to Python, and they will appear in a release of boo in the near future.

 * This article ([http://www.onlamp.com/pub/a/python/2004/02/05/learn_python.html Common Mistakes of Python Programmers]) lists other common errors seen in Python training classes.  Many result from the use of Python's interactive prompt and the IDLE text-based python development environment.  Some of these problems might be solved by using IPython instead, but in general I never used (nor currently use) python's interactive prompt to develop applications.

 * Another common error mentioned in the above article is forgetting to add a colon (:) at the end of if statements, class declarations, etc.  

 * Even for advanced users there are features of the Python language that can cause difficulties.  See [http://zephyrfalcon.org/labs/python_pitfalls.html 10 Python pitfalls] and [http://www.amk.ca/python/writing/warts.html Python warts].


== Comments, Potential Solutions ==

 * The [http://pychecker.sourceforge.net/ PyChecker] module can alert users to many common errors.  There also is a tool called [http://www.logilab.org/projects/pylint PyLint].

 * To see languages that have been used successfully with beginners and children, see Logo, !Hyper''''''Talk (used in Hyper''''''Card and Super''''''Card), HTML, Java''''''Script, variants of Basic, etc.

 * Are students learning python to "learn programming" or to develop real applications?  Does the IDLE interactive prompt help or hinder either?  See http://developers.coedit.net/StudentsDevelopingEducationalSoftware for examples of students doing real application development and Rapid''''''Prototyping (although these are college students and in some cases CS majors who already know how to program).

