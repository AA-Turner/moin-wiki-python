Existing material appears (also) at EvangelismSupportMaterials and PromotingPythonBof.
Note [http://psf.pollenation.net/cgi-bin/trac.cgi/ticket/160].

== Magazines that Accept Technical Articles ==

 * [http://linuxjournal.com Linux Journal] [http://www.linuxjournal.com/xstatic/author/index Author Guidelines]
 * [http://www.ddj.com Dr. Dobbs Journal] [http://www.ddj.com/authors.htm Author Guidelines]
 * [http://byte.com Byte Magazine] (no guidelines found; may not accept non-staff material)

== Magazine Articles About Python I Would Like to See ==

 * Python and Relational Databases

   Talk about the DB-API that Python has standardized on, and how easy it is to write conventional SQL.  Then move into one of the ORMs for Python, perhaps SQLObject or SQLAlchemy.  Discuss how data types are automatically converted, and how cross-platform the solution is.  Highlight the different database engines supported, both open source and commercial.

 * Python and Object Databases

   Talk about how dynamic languages make a good match for object databases, with seamless serialization.  Provide an overview of how an object database works, but focus on the end-developer and not the underlying mechanisms.  Cover how the databases retain transaction support, and to what degree they provide support for the principles of ACID.  Discuss the popular ZODB, Durus and APE frameworks, their tradeoffs (e.g. read-mostly usage, transaction rates) and the fact that they can be used standalone without the baggage of Zope or Quixote.  Cover their lack of granular security and user identities at the database API level.

 * Handling Email with Python

   Perhaps as a two part article, cover the essentials of first parsing an incoming email and then generating an outgoing.  Demonstrate how the email module makes it easy to handle multi-part email bodies and convert various character sets into unicode, which Python supports natively.  Also cover how the email module supports the use of international message headers and handles their conversion between the 7-bit ASCII used on the wire.  Show how the email module addresses the issue of date and addressee parsing.  End with how the support of iterators makes it easy to walk over complex emails and touch upon the support added in Python 2.5 for writing email archives.

 * Image Processing, Array Numerics and Python

   array module, numpy/numeric/scipy framework

 * Functional Programming in Python

   Provide an overview with examples of the functional programming features of Python.  Cover the lambda, map and reduce functions but move on to the newer all(), any() and generator/coroutine support in Python 2.5.  Discuss the broad support Python iterators

  itertools functools

 * Mixing Network Protocols in Python

 * 

  interpreter prompt, inspect module, the power of tracebacks, pprint module

 *

  packaging; imports, zipimports, distutils, eggs and cheeseshop

 *

  unittest module, doctest module, test module

 *
  unicode, codecs, unicodedata and stringprep modules, a bit about the locale and gettext modules.

 *

  writing shell utilities with Python

  getopt/optparse modules, curses module, shutil module, commands module

 * Processing Compressed Archives with Python

  gzip, zlib, bz2, zipfile, tarfile, zipimport

 * Debugging and Profiling Your Python Code

   Talk about the power of the Python debugger, along with the profiler module and the (new for Python 2.5) cProfiler module.  Contrast both the short-term ability to break on flexible conditions with the ability to profile code over the long-term.  Discuss code coverage functionality and end with mentions of some of the IDE environments for Python that make some of this even easier.

 * Writing a Web Client with Python

   Walk the reader thru the creation of a program to fetch content from a website, starting with simple HTML text, adding basic/digest authentication, cookie support and SSL certificate checking.  Also discuss having this program talk thru a web proxy ala SOCKS and briefly cover parsing the retrieved page using one of the DOM modules.  This article would cover a lot of the API in the urllib2 module.



For active discussion on advocating for Python, please join the mailing list at [http://wingware.com/mailman/listinfo/marketing-python]

WellKnownPythonPrograms - you may already be using Python!
----
CategoryAdvocacy
