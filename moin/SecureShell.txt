There are several ways to use '''Secure Shell (SSH)''' in Python.

== pyssh ==

 * [[http://pyssh.sourceforge.net/|pyssh website]] -- project home page
 * [[http://sourceforge.net/mailarchive/forum.php?forum=pyssh-discuss|pyssh mailing list]] -- not very active (<<Date(2006-03-26T00:20:01Z)>>)

== paramiko ==

Paramiko is a native Python implementation of SSH.

 * [[http://www.lag.net/paramiko/|paramiko website]] -- project home page
 * [[http://jessenoller.com/2009/02/05/ssh-programming-with-paramiko-completely-different/]] -- Article by Jesse Noller 

== conch ==

conch is another native implementation of SSH and part of the Twisted Matrix project

 * [[http://twistedmatrix.com/projects/conch]] -- conch home

== SSH wrapper ==

Some tools just wrap around existing ssh/sftp implementations.

 * [[http://www.keyphrene.com/products/org.keyphrene/|keyphrene SSH wrapper, UNIX, Windows & MacOS]]
 * [[http://membres.lycos.fr/fredp/python/pyscp.html|PySCP pscp wrapper]] -- wraps Windows {{{pscp}}}, which is part of [[http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html|the Putty suite]]

== See Also ==

 * [[http://py.vaults.ca/apyllo.py?find=ssh|ssh search]] -- on the VaultsOfParnassus
 * [[http://en.wikipedia.org/wiki/SSH|Wikipedia:SSH]] -- wikipedia article on Secure Shell

== Discussion ==

I'm investigating the use of SSH in Python.

I want something that will work in both Windows and Linux, that can operate like sftp/psftp. So, I'm thinking about paramiko, since it's pure Python.

-- LionKimbro <<DateTime(2006-03-26T00:20:01Z)>>

You can use org.keyphrene. This library has been tested on Windows, Linux, and MacOS.

-- Vincent <<DateTime(2006-04-06T18:02:01Z)>>
