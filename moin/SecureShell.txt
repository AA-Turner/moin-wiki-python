There are several ways to use '''Secure Shell (SSH)''' in Python.

== pyssh ==

 * [http://pyssh.sourceforge.net/ pyssh website] -- project home page
 * [http://sourceforge.net/mailarchive/forum.php?forum=pyssh-discuss pyssh mailing list] -- not very active ([[Date(2006-03-26T00:20:01Z)]])

== paramiko ==

Paramiko is a native Python implementation of SSH.

 * [http://www.lag.net/paramiko/ paramiko website] -- project home page
 * [http://www.experts-exchange.com/Programming/Programming_Languages/Python/Q_21507060.html  conversation on Experts Exchange] -- features a working example at the end of the page

== SSH wrapper ==

Some tools just wrap around existing ssh/sftp implementations.

 * [http://www.keyphrene.com/products/org.keyphrene/ keyphrene SSH wrapper, UNIX]
 * [http://membres.lycos.fr/fredp/python/pyscp.html PySCP pscp wrapper] -- wraps Windows {{{pscp}}}, which is part of [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html the Putty suite]

== See Also ==

 * [http://py.vaults.ca/apyllo.py?find=ssh ssh search] -- on the VaultsOfParnassus
 * [http://en.wikipedia.org/wiki/SSH Wikipedia:SSH] -- wikipedia article on Secure Shell

== Discussion ==

I'm investigating the use of SSH in Python.

I want something that will work in both Windows and Linux, that can operate like sftp/psftp. So, I'm thinking about paramiko, since it's pure Python.

-- LionKimbro [[DateTime(2006-03-26T00:20:01Z)]]
