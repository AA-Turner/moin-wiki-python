There are several ways to use '''Secure Shell (SSH)''' in Python.


== paramiko ==


Paramiko is a native Python implementation of SSH.


 * [[http://www.lag.net/paramiko/|paramiko website]] -- project home page
 * http://jessenoller.com/2009/02/05/ssh-programming-with-paramiko-completely-different/ -- Article by Jesse Noller


== pyssh ==


 * [[http://pyssh.sourceforge.net/|pyssh website]] -- project home page
 * [[http://sourceforge.net/mailarchive/forum.php?forum=pyssh-discuss|pyssh mailing list]] -- not very active (2006-03-26)


== conch ==


conch is another native implementation of SSH and part of the Twisted Matrix project


 * http://twistedmatrix.com/projects/conch -- conch home

== Fabric ==


Fabric uses paramiko to implement a higher-level API for performing commands over SSH, particularly for deployment and system administration tasks.


 * http://fabfile.org

== Spur ==


Spur is a thin wrapper around paramiko, aiming to provide a simpler API than paramiko for common SSH operations.


 * https://github.com/mwilliamson/spur.py

== SSH wrapper ==


Some tools just wrap around existing ssh/sftp implementations.


 * [[http://www.keyphrene.com/products/org.keyphrene/|keyphrene SSH wrapper, UNIX, Windows & MacOS]]
 * [[http://membres.lycos.fr/fredp/python/pyscp.html|PySCP pscp wrapper]] -- wraps Windows {{{pscp}}}, which is part of [[http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html|the Putty suite]]


== See Also ==


 * [[http://en.wikipedia.org/wiki/SSH|Wikipedia:SSH]] -- wikipedia article on Secure Shell


== Discussion ==


I'm investigating the use of SSH in Python.


I want something that will work in both Windows and Linux, that can operate like sftp/psftp. So, I'm thinking about paramiko, since it's pure Python.


-- [[LionKimbro|LionKimbro]] 2006-03-26 00:20:01


You can use org.keyphrene. This library has been tested on Windows, Linux, and MacOS.


-- Vincent 2006-04-06 18:02:01
