= ExtremeProgramming =

attachment:dilbert-xp.gif

Extreme Programming (XP) is a set of 12 practices that enables a team to collaborate effectively to deliver working software closely aligned with current business needs within realistic, proven timelines. Project management transforms from crisis management into merely a series of business decisions, and all the participants have excellent visibility into the project. See Kent Beck's 'Extreme Programming Explained', Addison-Wesley 2000. (Chris H.)

Extreme Programming is a methodology for getting programs working quickly without suffering from "analysis paralysis".  The basic tenets of Extreme Programming are:

== Write your tests first ==

If you write your tests before writing your code, you already know what the code should do.  Initially, your tests will fail, but then you write enough code to make the tests work.

== Refactor early and often ==

Refactoring means improving the design of your code in incremental steps that don't change the results, and instead just make things neater and cleaner.

== Work in pairs to review design and code, and to get the collaborative juices flowing ==

Having people work in pairs encourages communication, which gets and keeps ideas flowing.  This also discourages individual code ownership, and keeps the code reviewed continuously.  Plus, with two people working together, many bugs get caught and fixed almost as soon as they're written.

Working together also allows you to validate that your ideas about testing and refactoring are really correct.

I'm just starting to learn about it myself, but a good description can be found at [http://www.xprogramming.com/xpmag/whatisxp.htm].

attachment:dilbert-xp-team.gif
