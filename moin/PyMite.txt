=== What is PyMite ===
PyMite is a flyweight Python interpreter written from scratch to execute on 8-bit microcontrollers.  It is a work-in-progress, but is developed enough to run demonstration programs.  Because PyMite runs on 8-bit architectures, one should not expect the interpreter to do everything its desktop counterpart can do.  However, it's capability is increasing daily.  Since PyMite is a re-implementation of Python, written in ANSI C, it also has a few new features: stackless from the start; fast, easy, native function support and a hybrid mark-sweep garbage collector.

PyMite is not yet available for public consumption.  The PyMite source will be posted to sourceforge in time for PyCon 2003.  PyMite currently compiles to a Linux desktop and cross compiles (using avr-gcc) to an Atmel atmega103.

=== PyMite not just for micros ===
Since mentioning PyMite here, I have been approached by someone who suggested that 
PyMite might also be used to run on distributed/parallel hardware.  Much like the QNX microkernel derives its high performance from runnning in the instruction cache of a Pentium, so too might the PyMite interpreter.  If I can meet my target size for the interpreter, 32 KiB or less, it would definitely fit.

=== Feed forward ===
I would like to know how many people plan to attend this presentation.
I would also like to target my presentation as best I can to those people attending.
So please add questions/suggestions below;  for example:
 * I would attend if ...
 * Will PyMite run on ...
 * etc.
----
''your question/comment here''

Very Cool! I have an AVR board that is just itching to have this installed. I will definitely be in attendance! 
I'm especially interested in what kind of hardware interfaces you're providing (avr.porta.write(0x34)?) and what kind of
simulation environment (if any) exists. -PyConBrianWarner

----
CategoryPyConSpeakerPage
