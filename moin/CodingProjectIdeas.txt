This page is aimed to be the starting point of collection for ideas for projects which could benefit the Python community,
either projects that help the Python core, develop the standard library, third party packages, or more.

This page was created to foster collaboration on ideas regarding projects that could be done as part of the [http://code.google.com/summerofcode.html Google Summer of Code].

There is a related page to discuss the ./MentorshipCoordination side of the project.

Ideally, each project below should be expanded into a more full-featured description, so that people can judge the value, the effort involved, the size of the project (takes a week, takes a month, etc.), who knows enough about the project to help out, etc.

(Formatting:
 * Topics with a paragraph or so of thought, start new a page with a . in front of the wiki word, i.e. {{{ ./CleanupUrlLibProject}}} to scope the new pages a bit
 * for topics not fleshed out beyond a sentence or two, indent the sentence six spaces on a newline below the topic title/summary; this is to make sure that the description does not overpower the title/summary
)

 * CleanupUrlLibProject
 * Cleanup/modernize a module(s) in the stdlib
 * CompleteSslSupport
 * Add a MemoryUsageProfiler to python
      Currently it is almost impossible to figure out where memory is going in a large python program, especially if you have C extensions loaded. It'd be nice to know where the memory is going, if there are circular references, or if objects are being held too long.
 * JythonProjects
      Port IDLE from tk to swing, OS X improvements.  
 * Port stdlib modules from C to Python
      Jython, IronPython, and PyPy all require standard library modules to be written in pure Python; porting C-based standard library modules to Python helps them. 
 * UnicodeonWindowsExtensions
 * ./PythonWebProgrammingIdeas
 * SpeedUpInterpreterStartup
 * RestrictedExecution
 * ./PythonGarbageCollected
 * ./RegisterVirtualMachine
 * ./WebServiceStack
 * ./PythonDocInOpenEbook
 * fix some old, old bugs in sourceforge
     This is not a high profile, totally new idea, but maybe even helps the community more than founding another web framework
 * Add EPS import to ReportLab PDF library
     http://article.gmane.org/gmane.comp.python.reportlab.user/4052
 * make [http://www.spread.org/ Spread] Python Binding compile with Python 2.4 on win32 (and possibly other major platforms)
 * A better way to create (singlefile) executeables by bringing the advantages of py2exe and McMillans compiler together.
    Note that the next version of py2exe will allow this - it's 95% finished in CVS already -- theller
 * PEP 337: Logging Support for Standard Library
 * Enhance the Python catalog of modules
     http://www.python.org/pypi -- contact [http://www.python.org/sigs/catalog-sig/ Catalog-SIG] for more.
 * Work on the Parrot VM's Python implementation
 * Revive the code or idea from [http://www.cosc.canterbury.ac.nz/~greg/python_gui/ PyGUI] or [http://anygui.sourceforge.net/ Anygui]
     These are Python-level cross-toolkit compatibility libraries for GUI work. Currently there is a "live" project called [http://developer.berlios.de/projects/cimarron/ Cimarron] along these lines.
 * Flesh out the widget library and improve the documentation of [http://www.zephyrfalcon.org/labs/wax.html Wax]
     Wax is [http://www.zephyrfalcon.org/ Hans Nowak]'s [http://mail.python.org/pipermail/europython/2005-April/004975.html Pythonic] wrapper for [http://www.wxpython.org/ wxPython].
 * An educational programming environment similar to [http://dewey.soe.berkeley.edu/boxer.html/index.html Boxer] for Python
     Kind of a visual programming environment.
 * NotebookInterfaceForIpython

----

Less fleshed-out ideas:
 * ProfileReplacementProject
 * ./EnhancedIterTools
 * ./ExploreFunctionalProgramming
 * MakeXmlrpclibAsynchronous
