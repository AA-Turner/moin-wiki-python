= Helping to Develop Python =

The best place to go for information on how to get involved in core development is http://www.python.org/dev/. It's also good to hang out on the python-dev mailing list, or browse the Sourceforge trackers for interesting items to tackle. The Python Bug Days are also a great way to get involved.

You don't need C programming skills - or ''any'' programming skills - to help out. Documentation patches are always helpful. Or if you can code in Python, feel free to help out with the standard library.

= Patch Review =

Currently, patches often go unreviewed for a long time, basically because none of the committers has the time to review them. This is where the community can help: if you have spare time, please review patches. Please follow the PatchReviewGuidelines (yet to be written).  Submit your review comments to the issue on the tracker, pointing out how to make the patch better, or why it should or shouldn't be applied, and especially what your results where when testing the patch.

There is also a page for those interested in TrackerDevelopment.  Improving the tracker will help streamline the whole process of getting patches reviewed and committed.

= Hacking on the C core =

For C coders, you really need to be able to build Python from sources. On Unix, that shouldn't be a problem, but Windows users will need to download a compiler for their system.

= Commit Privileges =
The core development process evolves over time, and many aspects are really only documented in the archives of python-dev and the collective awareness of the current set of developers with commit privileges. Some rough notes on the current process can be found at PythonCommitterGuidelines.

== Free C Compilers for Windows ==

There are free compilers for Windows. The Cygwin environment offers a full Unix emulation under Windows, including the gcc compiler, and Python is supported on Cygwin. So you could work on Python under Cygwin.

There is a "native" port of gcc for Windows (mingw32), as well. However, although there are patches to allow Python to be built using mingw, these are not part of the main sources, and so are not "official" at the present time.

The Express version of Visual Studio can be used to build a complete, compatible Python binary on Windows, although it won't be optimised to the same degree as the official binaries. (Visual Studio solution files are available only for more recent versions of Python. Instruction on building older versions with the free command line tools can be found on their own page: [[Building Python with the free MS C Toolkit]])

= Python 3000 =

'''The Python 3000 project needs volunteers!'''  Here's a list of resources: [[Python3000]]; here's a list of tasks: Py3kStrUniTests.
