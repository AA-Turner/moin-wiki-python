Description: The Sound Object Library is an object-oriented audio processing library. It provides objects for synthesis and processing of sound that can be used to build applications for computer-generated music. See for more information the [http://sndobj.sourceforge.net/#python sndObj homepage].

== Installation ==
There is no installer included, but you can move/copy (for the Windows platform) the .pyd files to your %pythondir%\DLL and the .pyc files to %pythondir%\Libs .

== Code Examples ==
Some examples not available in [http://downloads.sourceforge.net/sndobj/PySndObj.pdf?modtime=1169813301&big_mirror=0 the manual]. More examples are included in the download itself.

=== A simple synth ===
A simple synth with band limited noise, oscilators, and alternating L-R output. In case of any issue, contact renato.fabbri@gmail.com AND/OR contact sndObj mailing list.

{{{#!python
import sndobj
import time

tab = sndobj.HarmTable()
osc = sndobj.Oscili(tab, 440, 10000)
noise = sndobj.Randh(100000, 10000)

x=1
y=2

outp = sndobj.SndRTIO(2)
outp.SetOutput(x, osc)
outp.SetOutput(y, noise)

mod = sndobj.Oscili(tab, 2, 560)
osc.SetFreq(440,mod)

mod2=sndobj.Oscili(tab, 4, 50)
mod.SetFreq(2, mod2)

q=2
mod3 = sndobj.Oscili(tab, q, 1000)
noise.SetFreq(1000, mod3)

thread = sndobj.SndThread()
thread.AddObj(mod)
thread.AddObj(mod2)
thread.AddObj(mod3)
thread.AddObj(osc)
thread.AddObj(noise)
thread.AddObj(outp, sndobj.SNDIO_OUT)

thread.ProcOn()

n=0
while n < 8:
    if x==1:
        x=2
        y=1
    else:
        x=1
        y=2
    outp.SetOutput(x, osc)
    outp.SetOutput(y, noise)
    time.sleep(1)
    n +=1

thread.ProcOff()
}}} 
