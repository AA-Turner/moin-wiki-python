= Python Implementations =

An "implementation" of Python should be taken to mean a program or environment which provides support for the execution of programs written in the Python language, or some broadly similar dialect of the language.

There have been and are several distinct software packages providing of what we all recognize as Python, although some of those are more like distributions or variants of some existing implementation than a completely new implementation of the language.

== CPython Variants ==

 * ["CPython"] - the reference Python implementation
 * ActivePython - a CPython variant
 * ["IPython"] and its ["IPyKit"] variant
 * [http://www.mhuffman.com/resource/index.html Tiny Python]

== Other Implementations ==

 * ["CLPython"]
 * IronPython
 * ["Jython"]
 * PyMite
 * PyPy
 * [https://www.cs.cmu.edu/~music/aura/serpent-info.htm Serpent]
 * [http://www.philhassey.com/blog/2008/02/12/tinypy-64k-now-with-built-in-garbage-collection/ tinypy]

== Compilers ==

 * [http://members.verizon.net/~olsongt/compyler/index.html Compyler] - an attempt to "transliterate the bytecode into x86 assembly"
 * [http://sourceforge.net/projects/shedskin/ Shed Skin] - a Python-to-C++ compiler

== Topic Guides ==

 * EmbeddedPython
 * PythonDistributions

This page aims to replace one formerly maintained as
"[http://phaseit.net/claird/comp.lang.python/python_varieties.html Cameron Laird's personal notes on varieties of Python implementation]".
