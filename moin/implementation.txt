= Python Implementations =

An "implementation" of Python should be taken to mean a program or environment which provides support for the execution of programs written in the Python language, or some broadly similar dialect of the language.

There have been and are several distinct software packages providing of what we all recognize as Python, although some of those are more like distributions or variants of some existing implementation than a completely new implementation of the language.

== CPython Variants ==

 * [[CPython]] - the reference Python implementation
 * [[http://crosstwine.com/linker/python.html|CrossTwine Linker]] - a combination of CPython and an add-on library offering improved performance (currently proprietary)
 * [[StacklessPython|Stackless Python]] - CPython with an emphasis on concurrency using tasklets and channels (used by [[https://www.develer.com/trac/dspython/|dspython]] for the Nintendo DS)
 * [[http://www.mhuffman.com/resource/index.html|Tiny Python]] - not to be confused with tinypy, below
 * [[http://code.google.com/p/unladen-swallow/|unladen-swallow]] - "an optimization branch of CPython, intended to be fully compatible and significantly faster"
 * [[http://code.google.com/p/wpython/|wpython]] - a re-implementation of CPython using "wordcode" instead of bytecode

== Other Implementations ==

 * [[CLPython]] - Python in Common Lisp
 * [[http://www.dcs.gla.ac.uk/~marks/|HotPy]] - a virtual machine for Python supporting bytecode optimisation and translation (to native code) using type information gathered at run-time
 * IronPython - Python in C# for the Common Language Runtime (CLR/.NET) and the [[http://fepy.sourceforge.net/|FePy]] project's IronPython Community Edition (IPCE)
 * [[Jython]] - Python in Java for the Java platform
 * PyMite - Python for embedded devices
 * PyPy - Python in Python, targeting several environments
 * [[http://pyjs.org/|pyjamas]] - a Python to !JavaScript compiler plus Web/GUI framework
 * [[http://code.google.com/p/pystachio/|Pystacho]] is, like Skulpt, Python in !JavaScript
 * [[http://students.ceid.upatras.gr/~sxanth/pyvm-2.0/|pyvm]] - a Python-related virtual machine and software suite providing a nearly self-contained "userspace" system
 * [[http://www.skulpt.org/|Skulpt]] - Python in !JavaScript
 * [[http://www.synapse-wireless.com/documents/whte_paper/SNAP_WP_102108.pdf|SNAPpy]] - "a subset of the Python language that has been optimized for use in low-power embedded devices" (apparently proprietary)
 * [[http://www.tinypy.org/|tinypy]] - a minimalist implementation of python in 64k of code

== Extensions ==

These are typically part of CPython (or some other implementation) but change the implementation's behaviour:

 * [[http://psyco.sf.net|Psyco]] - a just-in-time specialising compiler for CPython

== Compilers ==

These compilers usually implement something close to Python, although some compilers may impose restrictions that alter the nature of the language:

 * [[http://members.verizon.net/~olsongt/compyler/index.html|Compyler]] - an attempt to "transliterate the bytecode into x86 assembly"
 * [[http://cython.org/|Cython]] - an optimising Python-to-C compiler, CPython extension module generator, and wrapper language for binding external libraries
 * [[http://code.google.com/p/shedskin/|Shed Skin]] - a Python-to-C++ compiler
 * [[http://code.google.com/p/unpython/|unPython]] - a Python to C compiler using type annotations

== Similar but Distinct Languages ==

These languages don't attempt to be directly compatible even with a subset of Python, choosing to provide their own set of features:

 * [[http://boo.codehaus.org/|Boo]]
 * [[Cobra]]
 * [[http://convergepl.org/|Converge]] - inspired by Python, Haskell, Icon and Smalltalk, provides macros which can be evaluated at compile-time
 * [[http://delight.sourceforge.net/|Delight]] - based on the D programming language
 * [[http://live.gnome.org/Genie|Genie]] - based on the same foundations (Gtk+, GNOME) as the Vala programming language, supposedly inspired by Boo
 * [[http://force7.de/nimrod/|Nimrod]] - statically typed, compiles to C, features parameterised types, macros, and so on
 * [[http://serpent.sourceforge.net/|Serpent]] - inspired by Python, supporting real-time garbage collection and multiple virtual machines in separate threads [[https://www.cs.cmu.edu/~music/aura/serpent-info.htm|(more information)]]
 * [[http://somefancy.com/trylon/|Trylon]] - inspired heavily by Smalltalk
 * [[http://mathias-kettner.de/wirbel.html|Wirbel]] - a compilable language with similar restrictions to Shed Skin (statically typed names, lists cannot mix elements of different types) and PyMite (no user-defined classes)

Comparisons:

 * A comparison of [[http://jamiemcc.livejournal.com/12009.html?thread=225769#t225769|Genie and Wirbel]] by the lead developer of the Puppy Linux distribution

== Topic Guides ==

 * EmbeddedPython
 * PythonDistributions

== Just For Fun ==

There are even some tongue-in-cheek dialects of Python which you might find fun.

  * [[http://www.staringispolite.com/likepython/|like, Python]]
  * [[http://www.dalkescientific.com/writings/diary/archive/2007/06/01/lolpython.html|LOLPython]]

This page aims to replace one formerly maintained as
"[[http://phaseit.net/claird/comp.lang.python/python_varieties.html|Cameron Laird's personal notes on varieties of Python implementation]]".  Also of interest will be IntegratingPythonWithOtherLanguages, which, among other variants, mentions ''embeddings'' of Python in other languages.
