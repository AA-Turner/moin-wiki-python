#format rst

Goals
=================

This is a micro-site to direct new users to hand-picked Python resources
so they can figure out what Python is and how to learn it.

* Site must have an attractive and text-light design.
  * To this end, no list will have more than 5-6 items.
* Site must either not require much ongoing maintenance, or must be maintable in some collective way (a CMS; a wiki; etc.).

Non-goals
------------------------------

* Completeness: it's impossible to link to everything.
* How Python is developed: this microsite is aimed at beginners, who don't need that sort of information)


Notes on Content 
=================

Top page will feature:

 * Large headings, w/ an icon that will be re-used on the sub-pages.
 * The subhead from each page.

The sub-page will contain the title and the expanded content below.

What is Python?
===================

Subhead: Python is an easy-to-learn but powerful programming language, available as open source.  (more)

Python features:

* Object-oriented programming language.
* Clear, readable syntax.
* Includes an extensive standard library
* Many extensions and libraries available.
* Free software.

Some applications that use Python are:

* `Django <http://www.djangoproject.com/>`__: "The Web framework for perfectionists with deadlines."
* `Blender <http://www.blender.org>`__: 3D content creation suite.
* `SciPy <http://www.scipy.org>`__: Library of scientific tools.
* `Roundup <http://roundup.sourceforge.net>`__ and `Trac <http://www.edgewall.com/trac/>`__ for bug tracking and project management.

Some companies and organizations that use Python are: (partial listing of PSF members)

 * CCP Games
 * Google
 * Lucasfilm
 * Hewlett-Packard (Opsware, Tabblo)
 * Red Hat (XXX or Ubuntu?  or both?)
 * Read our `collection of Python success stories <http://www.python.org/about/success/>`__.

Learning More
============================

Subhead: Find books, videos, and online documentation for Python.  (more)

Learn Python by reading:

  * `Online documentation <http://docs.python.org>`__ at python.org.  Start with `the Python tutorial <http://docs.python.org/tutorial/>`__.
  * `Learning Python <http://oreilly.com/catalog/9781565924642/>`__ (on `Google Books <http://books.google.com/books?id=nEJ-jcYF2fMC&printsec=frontcover>`__, `Programming Python <http://oreilly.com/catalog/9780596000851/>`__ (on `Google Books <http://books.google.com/books?id=5zYVUIl7F0QC>`__), by Mark Lutz; published by O'Reilly Media.
  * `Core Python Programming <http://python.net/crew/wesc/cpp/>`__ (on `Google Books <http://books.google.com/books?id=mh0bU6NXrBgC&printsec=frontcover>`__), by Wesley Chun; published by Prentice Hall.
  * `Python Essential Reference <http://books.google.com/books?id=kQom0WiUbZQC&printsec=frontcover>`__ (on `Google Books <http://books.google.com/books?id=kQom0WiUbZQC&printsec=frontcover>`__), by David Beazley; published by New Riders.

Or, learn Python by watching:

  * `ShowMeDo <http://www.showmedo.com>`__ has hundreds of brief tutorial videos; some are free, and some require a paid membership.  
  * PyCon 2009 tutorials
  * `Python Fundamentals lesson DVD <http://python.net/crew/wesc/cpp/pf/>`__, taught by Wesley Chun.

Take a Python course:

  * Lutz, Beazley, Chun.
  * link to wiki list

Try Python
===========================

Subhead: Download Python for your computer, check whether it's already part of your system, or even try it on the web.  (more)

Download links

Is Python already installed?

Link to shell.appspot.com, sample programs

Tools for Python Development
======================================

Subhead: Powerful development environments and editors help you write and debug Python code.

IDEs:

* WingIDE
* Komodo
* Eclipse/PyDev

Distributions:

* ActiveState
* Enthought

Version control:
* Subversion
* Bazaar
* Mercurial

Bug trackers:
* Roundup
* Trac

Build tools:
* SCons
* Buildbot


Checking tools: pylint/pychecker/pyflakes


What else?  

Finding Libraries
================================

Subhead: Explore the thousands of add-on libraries available for Python.  (more)

PyPI; commonly-used libraries 

Link to an easy-install tutorial/page?

Joining the Community
================================

Subhead: Connect to other Python users on the web, at local user groups, and at conferences.  (more)

planet.python.org

Python wiki

User groups

Conferences

* PyCon; EuroPython

PSF

Additional topics?
===================================

I'm not sure whether the following material is worth including.

* Python 2 vs. Python 3: 
* The Zen of Python principles
* Special page for Django & other web toolkits?
* A news page that pulls RSS feeds from pypi and python.org?
* Link to Software Carpentry tutorials?
