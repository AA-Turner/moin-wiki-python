== Please Note ==
Because this is a Wiki page, users can edit it. You are therefore free to add details of material that other Python users will find useful. It is '''not''' an advertising page, and is here to serve the whole Python community. Users who continually edit pages to give their own materials (particularly commercial materials) prominence, or spam the listing with multiple entries which point to resources with only slightly altered material, may therefore find their accounts are disabled. ''You have been warned''.

== Python for Programmers ==
The tutorials on this page are aimed at people who have previous experience with other programming languages (C, Perl, Lisp, Visual Basic, etc.). Also of potential interest are such related Beginners Guides as [[BeginnersGuide/Overview]] and BeginnersGuide/NonProgrammers, and the tips in MovingToPythonFromOtherLanguages.

== Books, Websites, Tutorials (non-interactive) ==
 * [[https://hackr.io/tutorials/learn-python| Learn Python - Best Python Tutorials]] Python tutorials recommended by the programming community.
 * [[https://www.programiz.com/python-programming| Learn Python - Tutorial for Beginners]] A comprehensive Python guide to get started, Python tutorials and examples for beginners.
 * [[http://www.afterhoursprogramming.com/tutorial/Python/Introduction/|After Hours Programming's Python Introduction]] A beginners introduction into Python.
 * [[http://www.checkio.org|CheckiO interactive learning resource]] Creative way to improve Python skills with interesting tasks, it also supports Python 3|2
 * [[http://www.tutorialspoint.com/python/index.htm|Basic to Advanced Tutorial]] A good tutorial on Python especially for the beginners.
 * [[http://freepythontips.wordpress.com|Free python tips and tutorials]] Python tips and tutorials for beginners and professional programmers.
 * [[http://www.ar-python.com/|Get started Arabic Tutorials]] Useful tools , tutorials and code samples. Python 101 introduces the basic data types, and 201 covers particular tasks such as parsing text and writing unit tests.
 * [[https://developers.google.com/edu/python|Google's Python class]] - Google's Python tutorial for "people with a little bit of programming experience"
 * [[http://jwork.org/learn/doc/doku.php?id=python:start|Interactive tutorial on Python]] A tutorial for beginners with interactive examples.
 * [[http://stromberg.dnsalias.org/~dstromberg/Intro-to-Python/|Intro to Python]] - A Brief Presentation about Python mainly aimed at experienced programmers. Might be nice as a first pass over the language.
 * [[http://www.hetland.org/python/instant-python.php|Instant Python]] A minimal crash course by Magnus Lie Hetland.
 * [[https://www.stavros.io/tutorials/python/|Learn Python in 10 minutes]]
 * [[http://www.davekuhlman.org/python_101.html|Python 101 - Beginning Python]] and [[http://www.davekuhlman.org/python_201.html|Python 201 - (Slightly) Advanced Python]] - Two self-training courses from Dave Kuhlman.
 * [[http://www.davekuhlman.org/python_book_01.html|A Python Book: Beginning Python, Advanced Python, and Python Exercises]] - An online book by Dave Kuhlman.
 * [[http://www.python-course.eu|Python Course]] - This online Python course is aiming at beginners and with advanced topics at experienced programmers as well.
 * [[http://www.itmaybeahack.com/homepage/books/python.html|Python for Programmers]] - for "Professional programmers who need to learn Python "
 * [[http://wiki.github.com/gregmalcolm/python_koans/|Python Koans]] Learn Python through TDD
 * [[http://mcsp.wartburg.edu/zelle/python/index.html|Python Programming: An Introduction to Computer Science]] by John M. Zelle. Used for CS1 courses at Wartburg College, IA. A simple tkinter-based graphics.py module is used in textbook examples (Python 2 and 3).
 * [[http://www.linuxjournal.com/lj-issues/issue73/3946.html|Python Programming for Beginners]] A short introduction to writing command-line applications in Python by Jacek Artymiak.
 * [[http://www.worldcat.org/title/python-essential-reference/oclc/288985690|Python Essential Reference]] (book) If you want a highly compressed K&R-style 'just the facts' overview, David Beazley's "Python Essential Reference" covers practically all of the language in about a hundred pages.
 * [[http://www.ar-python.com/116.html|Python one touch Arabic tutorials]].
 * [[http://codecondo.com/10-ways-to-learn-python/|Resources for Learning Python]] 10 of the most popular / recommended platforms in the World when it comes to learning Python, either as a complete beginner or someone who knows his way around..
 * [[http://www.wag.caltech.edu/home/rpm/python_course/|Python Short Course]] A set of course slides by Richard P. Muller of Caltech that are aimed at scientific users. For example, the first example is a script to process output from a quantum chemistry simulation.
 * [[http://docs.python.org/tut/|Python Tutorial]] This tutorial is part of Python's documentation set and is updated with each new release.
 * ComparingTypes Quick look at some common programming types for python and other languages
 * [[http://en.wikibooks.org/wiki/Python_Programming|Wikibook:Python Programming]]
 * [[http://en.wikiversity.org/wiki/Topic:Python|Wikiversity:Python]] The Wiki(anything) information about Python.
 * [[https://pythonspot.com/|Python Programming Tutorials]] Python programming tutorials.
 * [[http://thepythonguru.com/getting-started-with-python/|Python Tutorials]] Python in plain english.

== Interactive Tools and Lessons ==
 * [[http://cscircles.cemc.uwaterloo.ca|Computer Science Circles]]
 * [[http://www.learnstreet.com|LearnStreet: Free online Python tutorials and practice exercises]]
 * [[http://interactivepython.org/courselib/static/thinkcspy/index.html|How to Think Like a Computer Scientist, Interactive Edition]]
 * [[http://jwork.org/learn/|Interactive tutorials for scientific programming using Python]]
 * [[http://interactivepython.org/runestone/static/pythonds/index.html|Problem Solving with Algorithms and Data Structures using Python]] (second-level course)
 * [[http://people.csail.mit.edu/pgbovine/python/tutor.html|Python visualizer tool]]
 * [[http://thonny.org|Thonny, Python IDE for begginners. Has intuitive features for program runtime visualization]]

== Python Video Tutorials ==
 * [[https://www.youtube.com/playlist?list=PLlgoYPTU6ljCEggReCMF0m0760QTot9Qz|Python Screencasts]] (36 videos)
 * [[http://showmedo.com/videos/series?name=pythonHollandIntroToPythonSeries_german|Einf√ºhrung in die Programmierung mit Python]] (14 videos - German)
 * [[http://blog.showmedo.com/2007/03/22/get-going-with-python-1-getting-a-feel-for-the-language/|'Getting started with Python']] blog series at ShowMeDo, includes articles on 'Python Development Environments' and 'Python Under-The-Hood'
 * [[https://www.youtube.com/user/schafer5]|/Corey Schafer]] has a Python turorial channel.
 * [[http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/?r=iTunes|MIT's 6.00 Introduction to Computer Science and Programming]] (in Python)
 * The [[http://www.khanacademy.org/#computer-science|Khan Academy computer science]] playlist teaches Python.
  * [[http://showmedo.com/videos/series?name=pythonOzsvaldIntroToPyResourcesSeries|A Guide to Python Resources on the Web]] (2 videos)
  * [[http://showmedo.com/videos/series?name=IwrOgqPc9|Python 101 - easygui and csv]] - Aimed at new/intermediate Pythonistas showing how to build a full application in Python (part of the Club)
  * [[http://showmedo.com/videos/series?name=pythonOzsvaldPyNewbieSeries|Python Development on XP]] (9 videos, part of the Club) Aimed at new/intermediate Pythonistas
  * [[http://showmedo.com/videos/series?name=PythonWxPythonBeginnersSeries|Python GUI Programming with wxPython]] (3 videos)
 * [[http://showmedo.com/videos/python|ShowMeDo.com/videos/Python]]: Over 240 Python programming screencasts, most are free, most are a part of [[http://showmedo.com/club|Club ShowMeDo]], all will teach you about Python programming:
 * [[http://www.thenewboston.com/?cat=40]|TheNewBoston Python Tutorials]] Recommended for novice programmers.
 * [[http://www.udemy.com/learning-python-not-the-snake/|uDemy's - Learn Python (for Beginners)]]
 * [[https://www.youtube.com/c/ArtheadSe|Python Bits]] - Has a playlist called Python Bits with some interesting Python topics. Beginner and intermediate level.
 * [[https://www.youtube.com/user/jayanamgames|Jayanam]] has video tutorials about Python.
  * [[https://youtu.be/RZF17FfRIIo|Python OOP Tutorial for Beginners]] - Getting started with OOP programming with Python.
  * [[https://www.youtube.com/watch?v=DFLD3JjsvJo&list=PLboXykqtm8dy_DNg1NZiS08Dnyj35PWXw|Python Lists and Object Tutorial for Beginners]] - Sorting Objects with Python.
  * [[https://youtu.be/HJSLyzm4j6Y|Python Exception Handling for beginners]]  - Exception handling with Python.
 * [[https://code.tutsplus.com/|Envato Tuts+]] has video courses and tutorials about Python.
  * [[https://code.tutsplus.com/courses/introduction-to-python|Introduction to Python]] - learn Python from scratch.
  * [[https://code.tutsplus.com/courses/data-handling-with-python|Data Handling With Python]] - learn the basics of handling data in the Python language.
  * [[https://code.tutsplus.com/courses/crawl-the-web-with-python|Crawl the Web With Python]] - learn to build a web crawler and scraper (free).
  * [[https://code.tutsplus.com/courses/getting-started-with-django|Getting Started With Django]] - learn the Django back-end framework from scratch.
  * [[https://code.tutsplus.com/courses/build-a-news-aggregator-with-django|Build a News Aggregator With Django]] - learn advanced Django skills with a hands-on project.
