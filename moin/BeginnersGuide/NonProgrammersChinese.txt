== 编程新手必读 ==

如果你之前没编写过程序，那这些教程很适合你；因为教程会假设你没有经验。如果你有编程经验，直接阅读[[BeginnersGuide/Programmers]]即可。

== 书籍 ==
每本书都可以在线购买，也可以在网站免费阅读/观看.

/* 字母顺序排列 */

 * '''《自动化机械工作 - 完全新手编程实践》''' 作者 ''Al Sweigart'' 本书“写给办公室白领、学生、网管和一切使用电脑学习如何编写短小使用的程序的人群，他们可以在自己的电脑上自动化工作任务” ||[[https://automatetheboringstuff.com/|网站]] ||[[http://www.amazon.com/gp/product/1593275994/|印刷版]] ||

 * '''《像计算机科学家一样思考》''' 是一本经典开源书籍 作者是 ''Allen Downey'' ，贡献者 ''Jeffrey Elkner'' 和 ''Chris Meyers''. ''Peter Wentworth.''贡献了Python3的更新内容 ||[[http://openbookproject.net/thinkcs/python/english3e/|网站]] ||[[http://openbookproject.net/thinkcs/python/english3e/|印刷版本]] ||

 * '''《用Python和Pygame制作游戏》''' 作者 ''Al Sweigart'' 给初中级程序员介绍Pygame游戏框架 ||[[http://inventwithpython.com/pygame|网站]] ||[[http://www.amazon.com/Making-Games-Python-Pygame-Sweigart/dp/1469901730?ie=UTF8&tag=playwithpyth-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0982106017|印刷版本]] ||

 * '''《Python单行程序》''' 作者 ''Christian Mayer'' 教你如何阅读和编写单行程序: 有用的具体语句，一行代码实现 ||[[https://pythononeliners.com/|讲解视频网站]] ||[[https://www.amazon.com/gp/product/B07ZY7XMX8|印刷版本]] ||

 * '''《思考Python》''' 作者 ''Allen B. Downey'' 教你如何像一个计算机科学家一样思考 ||[[http://greenteapress.com/thinkpython/html/index.html|网站]] ||[[https://www.amazon.com/Think-Python-Like-Computer-Scientist/dp/1491939362/|印刷版本]] ||

你可以发现更多在线Python书籍。 比如，查看这里 [[https://blog.finxter.com/free-python-books/|101个免费Python书籍]].

== 交互课程 ==

以下网站可以让你在浏览器里编程，并及时得到反馈

/* 按字母顺序排列 */

 * [[https://python.land/python-tutorial|新手友好的免费Python教程]] 包含交互式代码示例，用简单易懂的方式介绍Python语言。

 * [[https://programiz.pro/learn/master-python|新手友好Python课程]] 包括短课、小测验和100多个挑战。 

 * [[http://www.checkio.org|CheckiO]] 使用Python3通过游戏方式解决编程任务。

 * [[https://www.codedex.io|Codédex]] K-12及大学生学习编码的平台。

 * [[https://www.codecademy.com/search?query=python|Codecademy ]](Python)

 * [[https://codetheblocks.com|Code the blocks]] 使用3D环境放置代码块来搭建结构，教你如何循序渐进地与3D结构交互的Python教程。

 * [[https://codevisionz.com/learn-python-programming/|Codevisionz Python]] 10小时+Python学习资料 - 通过代码示例，小测验和挑战来学习通用的编程概念

 * [[http://cscircles.cemc.uwaterloo.ca/|Computer Science Circles]] 有30课，100个练习，你也可以通过消息系统寻求帮助。老师可以用它来教学生，支持荷兰语、法语、德语和立陶宛语。

 * [[https://www.datacamp.com/courses/intro-to-python-for-data-science|DataCamp Python Tutorial]] 与多数教程不同，这是专门为数据科学设计的4小时教程，包括57个交互联系和11个视频。

 * [[https://finxter.com|Finxter]] - 你的Python技能水平如何？通过300个手工挑选的Python小测试来了解和训练你的技能吧。

 * [[https://hackinscience.org|HackInScience]] - 50多个Python练习，免费无广告、简单开源。

 * [[https://runestone.academy/ns/books/published/thinkcspy/index.html|How to Think Like a Computer Scientist: Interactive Edition]] is an interactive reimagination of Elkner, Downey and Meyer's book with visualizations and audio explanations.
 
 * [[https://www.learnpython.org/|LearnPython]] 绝对新手必读交互式Python教程。

== 低年级学生专用资源 ==
（之前这部分内容叫做「面向中小学」，K-12是一个美国专用词汇，指代小学与中学教育阶段，对应着联合国教科文组织/UNESO的国际教育标准分类ISCED里的第三阶段）

/* 字母顺序 */

 * [[http://gvr.sourceforge.net|Guido van Robot]] 一个教学工具，学生可以用类似Python的语言来控制一个模拟机器人。 约克镇高中（Yorktown High School）教学项目计划。

 * [[http://jasonrbriggs.com/python-for-kids/index.html|Python for Kids]] 作者Jason R Briggs 本书自带实例代码和谜题。

 * [[http://pythonturtle.org|PythonTurtle]] 适合初学者和孩子的Python学习环境，受Logo语言启发而设计。主要面向儿童，但成人也可以用它来入门。

 * [[http://www.letslearnpython.com/learn/|Young Coders tutorial]] 历年来PyCon北美的完整教程，贯穿实例与练习。以基本编程技能开始教程，随后介绍复杂逻辑和游戏。适用于10岁以上儿童及成人初学者。

== Tutorials and Websites ==
/* please keep this list alphabetized */

 * [[https://python.swaroopch.com/|A Byte of Python]], by Swaroop C.H., is also an introductory text for people with no previous programming experience.

 * [[https://www.afternerd.com/|Afternerd]], by Karim Elghamrawy, is a Python tutorials blog that is geared towards Python beginners.

 * [[https://askpython.com/|Ask Python]] Absolute Beginners Python Tutorial.

 * [[http://anh.cs.luc.edu/handsonPythonTutorial/|Hands-on Python Tutorial]] Beginners' Python, graphics, and simple client/server introduction, with videos.

 * [[http://www.alan-g.me.uk/l2p2|Learning to Program]] An introduction to programming for those who have never programmed before, by Alan Gauld. It introduces several programming languages but has a strong emphasis on Python. (Python 2 and 3)
 
 * [[https://itsmycode.com|ItsMyCode]] A Python Blog and tutorials built for developers who love coding

 * [[https://www.afterhoursprogramming.com/tutorial/Python/Overview/|After Hours Programming Python 3 Tutorial]]

 * [[http://letsfindcourse.com/python|Letsfindcourse - Python]]: Best Python tutorials and courses recommended by experts.

 * [[http://en.wikibooks.org/wiki/Non-Programmer's_Tutorial_for_Python_3.0|The Wikibooks Non-Programmer's Tutorial for Python by Josh Cogliati]]

 * [[https://www.coursesonline.co.uk/courses/python/|Online Python Courses]] Compare online Python courses from learning providers from across the UK

 * [[https://overiq.com/python/3.4/intro-to-python/|Learn Python]] An Introductory yet in-depth tutorial for Python beginners.

 * The [[http://pythontips.com/|Python tips]] blog includes Python tips and tutorials for beginners and professional programmers.

 * [[http://docs.python.org/py3k/tutorial/|Python Tutorial in Python's documentation set]]. It's not written with non-programmers in mind, but it will give you an idea of the language's flavor and style.

 * [[http://www.python-course.eu/python3_course.php|The Python-Course.eu's extensive tutorial for complete beginners]], with lots of illustrations.

 * [[https://www.pythonspot.com|Pythonspot Tutorials]] Python tutorials.

 * [[http://thepythonguru.com/|The Python Guru]] A beginner-friendly guide for aspiring programmers.

 * [[https://coderslegacy.com|CodersLegacy]] A website + blog geared towards both new and experienced programmers. Mainly focused on teaching Python.
 
 * [[https://thecodezine.com|The Codezine]] A python programming blog built for beginners.

 * [[https://www.patternsgameprog.com/series/discover-python-and-patterns/|Discover Python & Patterns with game programming]] Discover Python by programming video games.

 * [[https://www.quizcure.com/topic/python/|QuizCure: A Python Learning Platform]] Contains a list of Commonly asked Python Questions and Answers with Examples.

== Tutorial Aggregators / lists ==

 * [[https://gitconnected.com/learn/python|Gitconnected Python]] tutorials submitted and ranked by Python developers with the best rising to the top
 * [[https://coursesity.com/best-tutorials-learn/python|Coursesity - Python]] - Curated list of the best python courses and tutorials for beginners.
 * [[https://classpert.com/python-programming|Classpert - Python]] - A large collection of free and paid Python online courses, from a wide range of providers.
 * [[https://hackr.io/tutorials/learn-python|Hackr.io - Python]]: Programming community-recommended best Python tutorials and courses

== Tutorials for Scientific Audiences ==
/* please keep this list alphabetized */ These websites are written in support of science courses but are general enough that anyone can learn from them.

 * [[http://www.onlamp.com/pub/a/python/2002/10/17/biopython.html|Beginning Python for Bioinformatics]] by Patrick O'Brien. An introduction to Python aimed at biologists that introduces the PyCrust shell and Python's basic data types.

 * [[http://illustratedtheoryofnumbers.com/prog.html|Python for Number Theory]] is a series of Python notebooks (for Jupyter) for applications to number theory and cryptography.  They assume no prior programming experience and are suitable for someone learning elementary number theory at the same time.  They conclude with an introduction to primality testing and cryptography (Diffie-Hellman, RSA).

 * [[http://www.pythonforbiologists.com|Python for biologists]]

== Apps ==
 * [[https://www.programiz.com/learn-python|Programiz App to Learn Python]] - A beginner-friendly app on Android and iOS to learn Python step by step with an in-built interpreter and quizzes.

== Videos ==
/* please keep this list alphabetized */

 * [[https://youtu.be/uCzFUKWtzgA?list=PLboXykqtm8dy_DNg1NZiS08Dnyj35PWXw|Python Programming Tutorials for Beginners]]: Installation, IDE, variables, functions, strings, lists, OOP

 * The [[http://young-programmers.blogspot.com/search/label/python|Young Programmers Podcast]] contains video lessons on Python, Pygame, Jython, Scratch, Alice, Java, and Scala (somewhat outdated content!)

== Email Academies ==
/* Python courses in your INBOX - please add only free resources */

 * [[https://blog.finxter.com/email-academy/|Finxter Email Computer Science Academy]]: 20+ free Python and computer science courses delivered in email video lessons. '''Content''': cheat sheets, Python basics, data structures, NumPy, data science, career advancement, coding productivity, and machine learning.  

== Tools ==
 * [[http://thonny.org|Thonny, Python IDE for beginners]]

{{{#!wiki comment/dashed
Dead Links / Broken Sites

If these sites come back to life, feel free to move them back up. Perhaps after 6 months, it would be reasonable to delete them.

 * Free Python video lectures are also available as a course titled [[Intro to programming with Python and Tkinter]], Unix users can view the video using mplayer once you have downloaded the files. Windows users will need to have a DivX player, available from http://www.divx.com/divx/windows/. (One user reports success viewing the videos on OS X 10.4 using the VLC player -- http://www.videolan.org/) -- ''1/3/14: This is not a dead link but it is a dead option. These videos have been dropped from Blip.tv so the link gets you nothing.''

 * [[http://www.pasteur.fr/recherche/unites/sis/formation/python/|Bioinformatics course in Python]] focuses on preparing people with some programming background for using the [[http://www.biopython.org|Biopython]] modules.
 * [[http://www.khanacademy.org/#computer-science|Khan Academy computer science]] (Python 2, not actively maintained) -- ''20/4/14: This link now leads to the Khan Academy sign-on page. Python material seems to have been disappeared from Khan Academy.''
 * [[http://www.talk-it.biz/tutorial-categories/python/|Python tutorials on TalkIT]] (Python 3) ''7/10/15: it is almost all behind a paywall''
 * [[http://www.livewires.org.uk/python/|LiveWires]] A set of Python lessons used during 1999, 2000, 2001, and 2002 children's summer camps in Britain by Richard Crook, Gareth McCaughan, Mark White, and Rhodri James. Aimed at children 12-15 years old. ''7/10/15: Site not up when clicked.''
 * [[http://python.lycee.free.fr/|Débuter avec Python au lycée]] A french tutorial intended to secondary school pupils.
}}}
----
CategoryPythonInEducation CategoryPythonInEducation
