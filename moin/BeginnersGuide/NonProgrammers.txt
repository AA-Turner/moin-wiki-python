#acl All:read
== Python for Non-Programmers ==


If you've never programmed before, the tutorials on this page are
recommended for you; they don't assume that you have previous
experience.


If you have previous programming experience,
the list of programmer-oriented tutorials on the ["BeginnersGuide/Programmers"]  page
may get you started more quickly, but the tutorials on this page
may still be helpful.

  * [http://niche.uwo.ca/programming-historian/index.php/Main_Page The Programming Historian] From the "About This Book" page: "This book is a tutorial-style introduction to programming for practicing historians. We assume that you're starting out with no prior programming experience and only a basic understanding of computers. More experience, of course, won't hurt. Once you know how to program, you will find it relatively easy to learn new programming languages and techniques, and to apply what you know in unfamiliar situations."
  * [http://www.freenetpages.co.uk/hp/alan.gauld/ Learning to Program] An introduction to programming for those who have never programmed before, by Alan Gauld.  It introduces several programming languages but has a strong emphasis on Python.
  * [http://www.byteofpython.info/ A Byte of Python], by Swaroop C.H., is also an introductory text for people with no previous programming experience.
  * [http://hkn.eecs.berkeley.edu/~dyoo/python/idle_intro/index.html One Day of IDLE Toying] A very gentle introduction to the IDLE development environment that comes with Python.   This tutorial by Danny Yoo has been translated into nine different languages.
  * [http://www.ibiblio.org/obp/thinkCSpy/ How to Think Like a Computer Scientist]  Allen Downey's open source textbook has a  Python version, written with Jeff Elkner.  It's also available in book form.
  * [http://www.hetland.org/python/instant-hacking.php Instant Hacking]  A minimal crash course by Magnus Lie Hetland that's an excellent starting point.
  * Free Python video lectures are also available as a course titled ["Intro to programming with Python and Tkinter"], Unix users can view the video using mplayer once you have downloaded the files. Windows users will need to have a DivX player, available from http://www.divx.com/divx/windows/. (One user reports success viewing the videos on OS X 10.4 using the VLC player -- http://www.videolan.org/)
  * [http://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python/Contents A Non-Programmer's Tutorial for Python] by Josh Cogliati.  Also available from [http://www.andamooka.org/reader.pl?section=easytut Andamooka].
  * [http://www.pentangle.net/python/handbook/ Handbook of the Physics Computing Course]  Also available in various forms at the author's [http://www.pentangle.net/python/ Python in Education] page, this is a preliminary course handbook for 1st-year university students with no computing experience.  This course material is still preliminary and assumes some high school-level maths.  It does not cover object-oriented programming or graphical applications.
  * [http://www.onlamp.com/pub/a/python/2002/10/17/biopython.html Beginning Python for Bioinformatics] by Patrick O'Brien.  An introduction to Python aimed at biologists that introduces the PyCrust shell and Python's basic data types.
  * Two courses from the Pasteur Institute are aimed at biologists but are useful to anyone wanting to learn Python.  Both tutorials are quite extensive, covering data types, object-oriented programming, files, and even design patterns.
    * [http://www.pasteur.fr/formation/infobio/python/ Introduction to Programming using Python] is for people completely new to programming.
    * [http://www.pasteur.fr/recherche/unites/sis/formation/python/ Bioinformatics course in Python] focuses on preparing people with some programming background for using the [http://www.biopython.org Biopython] modules.
  * [http://docs.python.org/tut/ Python Tutorial] This tutorial is part of Python's documentation set and is updated with each new release.  It's not written with non-programmers in mind, but skimming through it will give you an idea of the language's flavor and style.
  * [http://pythonbook.coffeeghost.net/book1 Invent Your Own Computer Games with Python, Book 1] is a free e-Book that teaches you how to program in the Python programming language. 

== For Younger Students ==

    * [http://www.livewires.org.uk/python/ LiveWires] A set of Python lessons used during 1999, 2000, 2001 and 2002 children's summer camps in Britain by Richard Crook, Gareth McCaughan, Mark White, and Rhodri James.  Aimed at children 12-15 years old.
    * [http://gvr.sourceforge.net Guido van Robot] A teaching tool in which students write simple programs using a Python-like language to control a simulated robot.  Field-tested at Yorktown High School, the project includes a lesson plan.
