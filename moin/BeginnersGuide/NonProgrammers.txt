== Python for Non-Programmers ==


If you've never programmed before, the tutorials on this page are
recommended for you; they don't assume that you have previous
experience.


If you have previous programming experience,
[prog.html the list of programmer-oriented tutorials]
may get you started more quickly, but the tutorials on this page
may still be helpful.



  * [http://www.python.org/doc/current/tut/ Python Tutorial]

  This tutorial is part of
  Python's documentation set and is updated with each new release.  It's
  not written with non-programmers in mind, but skimming through it will
  give you an idea of the language's flavor and style.

  * [http://www.hetland.org/python/instant-hacking.php Instant Hacking]

  A minimal crash course by Magnus Lie Hetland
  that's an excellent starting point.


  * [http://www.freenetpages.co.uk/hp/alan.gauld/ Learning to Program]
  An introduction to programming for those
  who have never programmed before, by Alan Gauld.  It introduces
  several programming languages but has a strong emphasis on Python.

  * [http://www.ibiblio.org/obp/thinkCSpy/ How to Think Like a Computer Scientist]

  Allen Downey's open source textbook has a
  Python version, written with Jeff Elkner.  It's also available in book form.

  * [http://www.honors.montana.edu/~jjc/easytut/easytut/ A Non-Programmer's Tutorial for Python] by Josh Cogliati.

  * [http://www.pentangle.net/python/handbook/ Handbook of the Physics Computing Course]

  Also available in various forms at the
  author's [http://www.pentangle.net/python/ Python in Education] page, this is a
  preliminary course handbook for 1st-year university students with no
  computing experience.  This course material is still preliminary and
  assumes some high school-level maths.  It does
  not cover object-oriented programming or graphical applications.

  * [http://www.onlamp.com/pub/a/python/2002/10/17/biopython.html Beginning Python for Bioinformatics] by Patrick O'Brien.  An
  introduction to Python aimed at biologists that introduces the PyCrust
  shell and Python's basic data types.

  * Two courses from the Pasteur Institute are aimed at biologists but
  are useful to anyone wanting to learn Python.  Both tutorials are
  quite extensive, covering data types, object-oriented programming,
  files, and even design patterns.

  * [http://www.pasteur.fr/formation/infobio/python/ Introduction to Programming using Python] is for people completely new to
  programming.

  * [http://www.pasteur.fr/recherche/unites/sis/formation/python/ Bioinformatics course in Python]
  focuses on preparing people with some programming background for using the
  [http://www.biopython.org Biopython] modules.



  * [http://hkn.eecs.berkeley.edu/~dyoo/python/idle_intro/index.html One Day of IDLE Toying]

  A very gentle introduction to
  the IDLE development environment that comes with Python.
  This tutorial by Danny Yoo has been translated into nine different languages.


  * [http://www.dickbaldwin.com/tocpyth.htm Learn to Program using Python]

  A tutorial by Richard Baldwin that covers basic data types and
  functions.



== For Younger Students ==


    * [http://www.livewires.org.uk/python/ LiveWires]

    A set of Python lessons used during 1999, 2000, 2001 and 2002
    children's summer camps in Britain by Richard Crook, Gareth McCaughan,
    Mark White, and Rhodri James.  Aimed at children 12-15 years old.

    * [http://gvr.sourceforge.net Guido van Robot]

    A teaching tool in which students write simple programs using
    a Python-like language to control a simulated robot.
    Field-tested at Yorktown High School, the project includes a lesson plan.
