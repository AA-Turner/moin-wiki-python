== Python for Non-Programmers ==
If you've never programmed before, the tutorials on this page are recommended for you; they don't assume that you have previous experience. If you have programming experience, also check out the [[BeginnersGuide/Programmers]] page.

== Books ==
Each of these books can be purchased online but is also available as free textual, website, or video content.

/* please keep this list alphabetized */

 * '''Automate the Boring Stuff with Python - Practical Programming for Total Beginners''' by ''Al Sweigart'' is "written for office workers, students, administrators, and anyone who uses a computer to learn how to code small, practical programs to automate tasks on their computer." ||[[https://automatetheboringstuff.com/|website]] ||[[http://www.amazon.com/gp/product/1593275994/|print version]] ||

 * '''How To Think Like a Computer Scientist''' is a classic open-source book by ''Allen Downey'' with contributions from ''Jeffrey Elkner'' and ''Chris Meyers''. It was updated to Python 3 by ''Peter Wentworth.'' ||[[http://openbookproject.net/thinkcs/python/english3e/|website]] ||[[http://openbookproject.net/thinkcs/python/english3e/|print version]] ||

 * '''Making Games with Python & Pygame''' by ''Al Sweigart'' introduces the Pygame framework for novices and intermediate programmers to make graphical games. ||[[http://inventwithpython.com/pygame|website]] ||[[http://www.amazon.com/Making-Games-Python-Pygame-Sweigart/dp/1469901730?ie=UTF8&tag=playwithpyth-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0982106017|print version]] ||

 * '''Python One-Liners''' by ''Christian Mayer'' teaches you how to read and write "one-liners": concise statements of useful functionality packed into a single line of code. ||[[https://pythononeliners.com/|website with free one-liner explainer videos]] ||[[https://www.amazon.com/gp/product/B07ZY7XMX8|print version]] ||

 * '''Think Python''' by ''Allen B. Downey'' teaches you how to think like a computer scientist. ||[[http://greenteapress.com/thinkpython/html/index.html|website]] ||[[https://www.amazon.com/Think-Python-Like-Computer-Scientist/dp/1491939362/|print version]] ||

You can find many free Python books online. For example, check out [[https://blog.finxter.com/free-python-books/|this article with 101 free Python books]].

== Interactive Courses ==
These sites give you instant feedback on programming problems that you can solve in your browser.

/* please keep this list alphabetized */

 * [[https://python.land/python-tutorial|A beginner-friendly and free Python tutorial]] with interactive code examples, explaining the Python language in an easy-to-understand way.

 * [[https://programiz.pro/learn/master-python|A beginner-friendly Python course]] that teaches to learn to code through bite-size lessons, quizzes and 100+ challenges.  

 * [[http://www.checkio.org|CheckiO]] is a gamified website containing programming tasks that can be solved in Python 3.

 * [[https://www.codedex.io|CodÃ©dex]] is a learn to code platform for K-12 and college students.

 * [[https://www.codecademy.com/search?query=python|Codecademy (]]Python)

 * [[https://codetheblocks.com|Code the blocks]] combines Python programming with a 3D environment where you "place blocks" and construct structures. It also comes with Python tutorials that teach you how to create progressively elaborate 3D structures.

 * [[https://codevisionz.com/learn-python-programming/|Codevisionz Python]] 10+ hrs of Python learning material - Learn common programming concepts through code examples, quizzes, and challenges

 * [[http://cscircles.cemc.uwaterloo.ca/|Computer Science Circles]] has 30 lessons, 100 exercises, and a message system where you can ask for help. Teachers can use it with their students. It is also available in Dutch, French, German, and Lithuanian.

 * [[https://www.datacamp.com/courses/intro-to-python-for-data-science|DataCamp Python Tutorial]] Unlike most other Python tutorials, this 4 hour tutorial by [[https://www.datacamp.com/|DataCamp]] focuses on Python specifically for Data Science. It has 57 interactive exercises and 11 videos.

 * [[https://finxter.com|Finxter]] - How good are your Python skills? Test and Training with >300 hand-picked Python puzzles.

 * [[https://hackinscience.org|HackInScience]] - 50+ Python exercises on a free, adless, simple, and open-source platform.

 * [[https://runestone.academy/ns/books/published/thinkcspy/index.html|How to Think Like a Computer Scientist: Interactive Edition]] is an interactive reimagination of Elkner, Downey and Meyer's book with visualizations and audio explanations.
 
 * [[https://www.learnpython.org/|LearnPython]] is an interactive Python tutorial that is suitable for absolute beginners.

 * [[https://learn-python.adamemery.dev|Learn Python]] - A no install Python course with interactive exercises powered by Pyodide.

== Resources for Younger Learners ==
(This section was previously called "K-12 Oriented", K-12 being a USA-centric term which refers to the primary and secondary educational stages; through level 3 on the UNESCO ISCED education levels list.)

/* please keep this list alphabetized */

 * [[http://gvr.sourceforge.net|Guido van Robot]] A teaching tool in which students write simple programs using a Python-like language to control a simulated robot. Field-tested at Yorktown High School, the project includes a lesson plan.

 * [[http://jasonrbriggs.com/python-for-kids/index.html|Python for Kids]] by Jason R Briggs. Book with sample code and puzzles.

 * [[http://pythonturtle.org|PythonTurtle]] A learning environment for Python suitable for beginners and children, inspired by Logo. Geared mainly towards children, but known to be successful with adults as well.

 * [[https://www.webucator.com/self-paced-training/index.cfm#!?courseId=PYT111|Webucator's self-paced Python 3 course]] free for homeschoolers and other students (use HOMESCHOOL as the coupon code when checking out). This course is appropriate for students 13 and up. '''From our experience, these students can learn at least as quickly as adults new to programming.'''

== Tutorials and Websites ==
/* please keep this list alphabetized */

 * [[https://python.swaroopch.com/|A Byte of Python]], by Swaroop C.H., is also an introductory text for people with no previous programming experience.

 * [[https://www.afternerd.com/|Afternerd]], by Karim Elghamrawy, is a Python tutorials blog that is geared towards Python beginners.

 * [[https://askpython.com/|Ask Python]] Absolute Beginners Python Tutorial.

 * [[http://anh.cs.luc.edu/handsonPythonTutorial/|Hands-on Python Tutorial]] Beginners' Python, graphics, and simple client/server introduction, with videos.

 * [[http://www.alan-g.me.uk/l2p2|Learning to Program]] An introduction to programming for those who have never programmed before, by Alan Gauld. It introduces several programming languages but has a strong emphasis on Python. (Python 2 and 3)
 
 * [[https://itsmycode.com|ItsMyCode]] A Python Blog and tutorials built for developers who love coding

 * [[https://www.afterhoursprogramming.com/tutorial/Python/Overview/|After Hours Programming Python 3 Tutorial]]

 * [[http://letsfindcourse.com/python|Letsfindcourse - Python]]: Best Python tutorials and courses recommended by experts.

 * [[http://en.wikibooks.org/wiki/Non-Programmer's_Tutorial_for_Python_3.0|The Wikibooks Non-Programmer's Tutorial for Python by Josh Cogliati]]

 * [[https://www.coursesonline.co.uk/courses/python/|Online Python Courses]] Compare online Python courses from learning providers from across the UK

 * [[https://overiq.com/python/3.4/intro-to-python/|Learn Python]] An Introductory yet in-depth tutorial for Python beginners.

 * The [[http://pythontips.com/|Python tips]] blog includes Python tips and tutorials for beginners and professional programmers.

 * [[http://docs.python.org/py3k/tutorial/|Python Tutorial in Python's documentation set]]. It's not written with non-programmers in mind, but it will give you an idea of the language's flavor and style.

 * [[http://www.python-course.eu/python3_course.php|The Python-Course.eu's extensive tutorial for complete beginners]], with lots of illustrations.

 * [[https://www.pythonspot.com|Pythonspot Tutorials]] Python tutorials.

 * [[http://thepythonguru.com/|The Python Guru]] A beginner-friendly guide for aspiring programmers.

 * [[https://coderslegacy.com|CodersLegacy]] A website + blog geared towards both new and experienced programmers. Mainly focused on teaching Python.

 * [[https://www.patternsgameprog.com/series/discover-python-and-patterns/|Discover Python & Patterns with game programming]] Discover Python by programming video games.

 * [[https://www.quizcure.com/topic/python/|QuizCure: A Python Learning Platform]] Contains a list of Commonly asked Python Questions and Answers with Examples.

== Tutorial Aggregators / lists ==

 * [[https://gitconnected.com/learn/python|Gitconnected Python]] tutorials submitted and ranked by Python developers with the best rising to the top
 * [[https://coursesity.com/best-tutorials-learn/python|Coursesity - Python]] - Curated list of the best python courses and tutorials for beginners.
 * [[https://classpert.com/python-programming|Classpert - Python]] - A large collection of free and paid Python online courses, from a wide range of providers.
 * [[https://hackr.io/tutorials/learn-python|Hackr.io - Python]]: Programming community-recommended best Python tutorials and courses

== Tutorials for Scientific Audiences ==
/* please keep this list alphabetized */ These websites are written in support of science courses but are general enough that anyone can learn from them.

 * [[http://www.onlamp.com/pub/a/python/2002/10/17/biopython.html|Beginning Python for Bioinformatics]] by Patrick O'Brien. An introduction to Python aimed at biologists that introduces the PyCrust shell and Python's basic data types.

 * [[http://illustratedtheoryofnumbers.com/prog.html|Python for Number Theory]] is a series of Python notebooks (for Jupyter) for applications to number theory and cryptography.  They assume no prior programming experience and are suitable for someone learning elementary number theory at the same time.  They conclude with an introduction to primality testing and cryptography (Diffie-Hellman, RSA).

== Apps ==
 * [[https://www.programiz.com/learn-python|Programiz App to Learn Python]] - A beginner-friendly app on Android and iOS to learn Python step by step with an in-built interpreter and quizzes.

== Videos ==
/* please keep this list alphabetized */

 * [[https://youtu.be/uCzFUKWtzgA?list=PLboXykqtm8dy_DNg1NZiS08Dnyj35PWXw|Python Programming Tutorials for Beginners]]: Installation, IDE, variables, functions, strings, lists, OOP

 * The [[http://young-programmers.blogspot.com/search/label/python|Young Programmers Podcast]] contains video lessons on Python, Pygame, Jython, Scratch, Alice, Java, and Scala (somewhat outdated content!)

== Email Academies ==
/* Python courses in your INBOX - please add only free resources */

 * [[https://blog.finxter.com/email-academy/|Finxter Email Computer Science Academy]]: 20+ free Python and computer science courses delivered in email video lessons. '''Content''': cheat sheets, Python basics, data structures, NumPy, data science, career advancement, coding productivity, and machine learning.  

== Tools ==
 * [[http://thonny.org|Thonny, Python IDE for beginners]]

{{{#!wiki comment/dashed
Dead Links / Broken Sites

If these sites come back to life, feel free to move them back up. Perhaps after 6 months, it would be reasonable to delete them.

 * Free Python video lectures are also available as a course titled [[Intro to programming with Python and Tkinter]], Unix users can view the video using mplayer once you have downloaded the files. Windows users will need to have a DivX player, available from http://www.divx.com/divx/windows/. (One user reports success viewing the videos on OS X 10.4 using the VLC player -- http://www.videolan.org/) -- ''1/3/14: This is not a dead link but it is a dead option. These videos have been dropped from Blip.tv so the link gets you nothing.''

 * [[http://www.pasteur.fr/recherche/unites/sis/formation/python/|Bioinformatics course in Python]] focuses on preparing people with some programming background for using the [[http://www.biopython.org|Biopython]] modules.
 * [[http://www.khanacademy.org/#computer-science|Khan Academy computer science]] (Python 2, not actively maintained) -- ''20/4/14: This link now leads to the Khan Academy sign-on page. Python material seems to have been disappeared from Khan Academy.''
 * [[http://www.talk-it.biz/tutorial-categories/python/|Python tutorials on TalkIT]] (Python 3) ''7/10/15: it is almost all behind a paywall''
 * [[http://www.livewires.org.uk/python/|LiveWires]] A set of Python lessons used during 1999, 2000, 2001, and 2002 children's summer camps in Britain by Richard Crook, Gareth McCaughan, Mark White, and Rhodri James. Aimed at children 12-15 years old. ''7/10/15: Site not up when clicked.''
 * [[http://python.lycee.free.fr/|DÃ©buter avec Python au lycÃ©e]] A french tutorial intended to secondary school pupils.
}}}
----
CategoryPythonInEducation CategoryPythonInEducation
