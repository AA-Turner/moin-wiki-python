This page is intended as a place to suggest features for [[http://dreampie.sourceforge.net/|DreamPie]].

[[http://dreampie.sourceforge.net/|DreamPie]] is a graphical interactive Python shell which is designed to be reliable and fun. Check it out at http://dreampie.sourceforge.net/

== Richer function documentation ==

This is a feature from IPython which is frequently requested. I think that the model should be Eclipse - when you type a paren after a function name it opens a yellow popup window which displays its argument and a bit of documentation, and lets you make it a real window by pressing F2.

== Complete module names ==

This was a bug report by cool-RR: https://bugs.launchpad.net/dreampie/+bug/525610

IPython completes module names. That's a good idea.

bpython does this too.

== More by cool-RR: Complete things that aren't defined yet ==

Imagine I'm writing this function:

{{{
def factorial(n):
    import random
    random.whatever()
    return n * factorial(n-1)
}}}

I'd want DreamPie to autocomplete both the `whatever` thing and the use of `factorial` inside the definition. Probably hard, I know.

As you said, this is really hard and complicated. I don't see this happening. Sorry! Noam

== Magic commands ==
Chris Colbert gave the example of the Ipython's %timeit command.

== Shell support ==
Probably by prefixing with a '!'. some common commands can work without it.

There shouldn't be a technical problem, as output from processes created by the subprocess is directed to !DreamPie.

== Debugging support ==
IPython provides enhanced tracebacks and pdb support. Should check out what this exactly means and what should be implemented.

== Save code history between sessions ==
An idea by Regev: save the last executed code sections, so that history search will include those too. It's useful if there are lines which are executed many times - for example 'execfile'.

Another suggestion roughly about the same subject, by Per Dalgaard Rasmussen: On exit, ask whether to save the history.

I (Noam) think that we can use the "changed" flag of the text buffer for that - it's pretty standard in applications. We should also add a "recent files" menu. The only difference from standard apps is that we should warn even if the history was saved, and note that although the history was saved all the variables will be lost.

== Pasting clipboard datas using the mouse middle button ==

On Windows with the standard interactive Python shell it's very useful to paste clipboard data with a simple mouse right-click.

Since in DreamPie the right mouse button is used by the context menu, it'll be good to have the same feature with the middle mouse button (or the wheel one).

== Setting the bottom box area height ==

The bottom box area have a fixed height at startup. Saving and restoring will be useful.

== Saving window position and size ==

Setting window position and size every time is a pain in the neck.

Saving and restoring window position and size at startup will be an appreciate feature.

== Notify new versions ==

Let DreamPie check and notify if a new version is available at startup (or programmatically).

== Autocomplete keyword arguments ==

Imagine I'm typing this:

{{{
x = sum(my_list, sta
}}}

In this case we have the `sum` function, which takes a keyword argument `start`. It'd be nice if DreamPie could autocomplete the keyword argument itself. (Ram "cool-RR" Rachum.)
