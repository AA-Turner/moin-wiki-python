[http://www.gnupg.org GNU Privacy Guard] is a GPLed implementation of the PGP encryption protocols.   Also known as "GnuPG" or "GPG".

= Python/GnuPG interface =
The original [http://www.amk.ca/python/code/gpg Python/GnuPG interface] is no longer actively maintained by amk.  Please record comments, recipes, and patches on this Wiki page.
If anyone wants to maintain the module and needs a CVS repository to store the code, just ask for write permission to the [http://www.sf.net/projects/pycrypto/ pycrypto project on SourceForge].

= News Flash! =
I've finished amk's GPG.py, adding support for the encryption, key management, bells, whistles, and so on which his original design implied.  This is a pure-python implementation, and requires nothing that is not in Python 2.2.1 or later, other than the gpg executable itself.  I don't know yet where the new GPG.py's permanent home is going to be, but as of this writing (July 2005) you can find it in the [http://trac.t7a.org/isconf ISconf] SVN Repository at 
http://trac.t7a.org/isconf/file/trunk/lib/python/isconf/GPG.py.  The right thing for me (or someone) to do going forward will be to confirm the license with amk and/or re-publish under the GPL, and post it somewhere more permanent.  If you do this before I get to it, then please update this page.  -- SteveTraugott

= openpgp =

Another worthy successor might be the [http://aonalu.makahavalley.org/openpgp/python Python opengpg] which also uses the [http://www.amk.ca/python/code/crypto.html Python Crypto Toolkit].

= cryptlib =

[http://www.cs.auckland.ac.nz/~pgut001/cryptlib/ cryptlib] also offers access to [http://www.openpgp.org/ OpenPGP]  methods. It has a python-interface, but it's not natural at all.
