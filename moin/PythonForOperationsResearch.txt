This page attempts to collect information and links pertaining to the field of Operations Research, which includes problems in Linear Programming, Integer Programming, Stochastic Programming, and other Optimization methods in python.

 * '''[[https://software.sandia.gov/trac/coopr/wiki/Pyomo|Pyomo]]''' - The Python Optimization Modeling Objects (Pyomo) package is an open source tool for modeling optimization applications in Python. Pyomo can be used to define symbolic problems, create concrete problem instances, and solve these instances with standard solvers. Pyomo provides a capability that is commonly associated with algebraic modeling languages such as AMPL, AIMMS, and GAMS, but Pyomo's modeling objects are embedded within a full-featured high-level programming language with a rich set of supporting libraries. Pyomo leverages the capabilities of the Coopr software library, which integrates Python packages for defining optimizers, modeling optimization applications, and managing computational experiments. 

 * '''[[https://projects.coin-or.org/Coopr|Coopr]] - The Coopr software project integrates a variety of Python optimization-related packages.

 * '''[[https://projects.coin-or.org/PuLP|PuLP]] - PuLP is an LP modeler written in python. PuLP can generate MPS or LP files and call  GLPK, COIN CLP/CBC, CPLEX, and  GUROBI to solve linear problems.

 * '''[[http://www.scipy.org/SciPyPackages/Optimize|scipy.optimize]] - There are two mainstream optimization packages available: (1) OpenOpt (license: BSD), (2) SciPy.optimize (license: BSD). Also you could be interested in [[http://www.scipy.org/Topical_Software#head-d21a11d2d173826993e03eb937fac7e6347e6d5f|Optimization]] section from Topical software. scipy.optimize contains only copyleft-free solvers, while OpenOpt contains connections to any-licensed solvers (BSD, GPL, LGPL etc), as well as some our own Python-written BSD-licensed solvers (numpy required), has graphic output of convergence and some more numerical optimization "MUST HAVE" features. Also OpenOpt can solve FuncDesigner problems with automatic differentiation, that usually work faster and gives more precize results than finite-differences derivatives approximation. 

 * '''[[http://abel.ee.ucla.edu/cvxopt/|CVOXPT]] - CVXOPT is a free software package for convex optimization based on the Python programming language. It can be used with the interactive Python interpreter, on the command line by executing Python scripts, or integrated in other software via Python extension modules. Its main purpose is to make the development of software for convex optimization applications straightforward by building on Pythonâ€™s extensive standard library and on the strengths of Python as a high-level programming language.
