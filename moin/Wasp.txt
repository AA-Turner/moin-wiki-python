#pragma section-numbers off
=== Masthead ===

   URL:: http://www.execulink.com/~robin/wasp/readme.html
   version:: 1.33  (''[[Date(2002-09-05T00:00:00)]]'')
   licence:: GPL
   platforms:: Linux, Windows
   Python versions:: Python 2.2 and above

=== Deployment Platforms ===

Wasp works in two modes: client and server. In client mode Wasp requires no deployment platform. In server mode it works through CGI with Apache Server.

=== Suitability ===

Suitable in those cases where CGI gives reasonable performance, that is, 99% of web application tasks.

=== Development Interfaces ===

The file inclusion, macro expansion, and other features may be used as-is. However, Wasp is designed primarily for those who wish to code in Python to create dynamic web sites. A streamlined CGI environment is provided with easy access to forms, cookies, a session mechanism, date module, table browser, etc.

=== Environment Access ===

Wasp can access any Python modules, stored in shared or restricted locations. There are no limitations on how the designer partitions business logic from other components.

=== Session, Identification and Authentication ===

A robust database-independent server-side session mechanism is provided, which uses cookies to store unique keys. This can be used for Identification and Authentication as the designer wishes.

=== Persistence Support ===

Wasp can be linked to any database with a Python interface, and contains a module to simplify the handling of tabular data such as that contained in a cursor.

=== Presentation Support ===

Wasp contains a simple templating system that encourages the separation of code and HTML. Python code is not allowed in template files, but template code is encouraged in Python files.

=== InTheirOwnWords ===

Wasp was developed when there were relatively few alternatives for Rapid Application Development in Python for the web. Now there are many templates and frameworks. Wasp distinguishes itself in its maturity (two years of active development), currency (still actively being improved), simplicity (installs as easy as any CGI handler), adherence to standard CGI model (no Zope here), ability to run in client mode (no web server required to get benefits of templating), remote debugging (really a life-saver), and thorough documentation. The inclusion of modules for tabular data and date handling rounds out the suite of tools.

Wasp is not appropriate in cases where CGI itself is a limiting factor. However, the number of sites that really need to serve thousands of complex hits an hour are relatively few. 

In the future, the example files will be expanded to include a full web site with sessions, cookies, etc. A module for connectivity with fastcgi is also proposed.

=== Comments ===

=== Hosting ===

Any Apache setup with Python 2.2
